[{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"Many modern SEM applications (e.g., BSEM MCMC, multilevel SEM many random effects, ML multidimensional integration) can require tens minutes many hours per model. need estimate hundreds thousands models, Monte Carlo studies large screening pipelines, high-performance computing cluster (HPCC) right tool. MplusAutomation::submitModels() streamlines creating, batching, submitting, tracking Mplus jobs HPCC schedulers (SLURM Torque), projects take weeks locally can finish hours cluster.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"overview-submitmodels","dir":"Articles","previous_headings":"","what":"Overview: submitModels()","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"","code":"submitModels(   target = getwd(),   recursive = FALSE,   filefilter = NULL,   replaceOutfile = \"modifiedDate\",   scheduler = c(\"slurm\", \"torque\"),   sched_args = NULL,   cores_per_model = 1L,   memgb_per_model = 8L,   time_per_model = \"1:00:00\",   combine_jobs = TRUE,   max_time_per_job = \"24:00:00\",   combine_memgb_tolerance = 1,   combine_cores_tolerance = 2,   batch_outdir = NULL )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"key-ideas","dir":"Articles","previous_headings":"Overview: submitModels()","what":"Key ideas","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"Target selection: point folder (vector folders) containing .inp files; optionally recurse /use filefilter (regex) narrow submissions. Replace policy: set replaceOutfile = \"modifiedDate\" resubmit .inp newer existing .. Scheduler resources: request per-model cores, memory (GB), time; pick scheduler (\"slurm\" \"torque\"). Batching: set combine_jobs = TRUE group similar models single batch job capped max_time_per_job; “similarity” controlled tolerances memory cores.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"minimal-examples","dir":"Articles","previous_headings":"Overview: submitModels()","what":"Minimal examples","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"Submit .inp files directory (subdirectories) SLURM: Filter regex search subfolders: Torque/PBS users:","code":"track <- submitModels(   target = \"/proj/my_mplus_models\",   scheduler = \"slurm\",   cores_per_model = 1L,   memgb_per_model = 8L,   time_per_model = \"01:00:00\",   combine_jobs = TRUE,   max_time_per_job = \"24:00:00\" ) track <- submitModels(   target       = \"/proj/my_mplus_models\",   recursive    = TRUE,   filefilter   = \".*12hour_forecast.*\",   replaceOutfile = \"modifiedDate\",   scheduler    = \"slurm\",   cores_per_model = 2L,   memgb_per_model = 16L,   time_per_model  = \"02:00:00\" ) track <- submitModels(   target = \"path/to/models\",   scheduler = \"torque\",   cores_per_model = 4L,   memgb_per_model = 24L,   time_per_model = \"0-06:00:00\"  # dd-hh:mm:ss accepted by Torque )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"inline-hpcc-directives-inside--inp-files","dir":"Articles","previous_headings":"","what":"Inline HPCC directives inside .inp files","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"can override global submitModels() arguments embedding comment-line directives Mplus input file. read translated scheduler flags submission time: memgb, processors, time set per-model requests. ! #SBATCH ... ! #PBS ... lines passed SLURM/Torque. pre/post let run scripts around Mplus call (e.g., bookkeeping, post-parse readModels()). Example .inp header simple “post” script might parse output RDS:","code":"! memgb        16 ! processors   2 ! time         0:30:00 ! #SBATCH      --mail-type=FAIL ! #PBS         -m ae ! pre          Rscript --vanilla pre_run.R ! post         Rscript --vanilla post_run.R ! memgb 16 ! processors 2 ! time 0:30:00 ! #SBATCH --mail-type=FAIL ! pre  Rscript --vanilla pre_example.R ! post Rscript --vanilla post_example.R  TITLE: Example regression DATA:  FILE IS ex3.1.dat; VARIABLE: NAMES ARE y1 x1 x3; MODEL: y1 ON x1 x3; # post_example.R mplusdir <- Sys.getenv(\"MPLUSDIR\") mplusinp <- Sys.getenv(\"MPLUSINP\")  library(MplusAutomation) m <- readModels(file.path(mplusdir, sub(\"\\\\.inp$\", \".out\", mplusinp))) saveRDS(m, file.path(mplusdir, sub(\"\\\\.inp$\", \".rds\", mplusinp)))"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"batching-models-into-combined-jobs","dir":"Articles","previous_headings":"","what":"Batching models into combined jobs","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"Submitting thousands tiny jobs can annoy schedulers slow throughput. combine_jobs = TRUE, submitModels() groups models similar resource needs (within combine_memgb_tolerance GB combine_cores_tolerance cores) batch whose total time exceed max_time_per_job. reduces queue overhead improves cluster utilization. Example strategy:","code":"track <- submitModels(   target = \"/proj/mplus_runs\",   scheduler = \"slurm\",   combine_jobs = TRUE,   max_time_per_job = \"06:00:00\",   combine_memgb_tolerance = 1,   combine_cores_tolerance = 2 )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"tracking-job-status","dir":"Articles","previous_headings":"","what":"Tracking job status","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"submitModels() returns data frame records job metadata (IDs, paths, resources). Use checkSubmission() (summary(track)) query scheduler live status: makes easy poll progress kick downstream steps batches done.","code":"checkSubmission(track) # Submission status as of: 2024-10-10 08:16:53 # ------- # jobid      file        status # 50531540   ex3.3.inp   queued # 50531541   ex3.1.inp   queued  Sys.sleep(45) checkSubmission(track) # jobid      file        status # 50531540   ex3.3.inp   complete # 50531541   ex3.1.inp   complete"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/submitModels.html","id":"practical-tips","dir":"Articles","previous_headings":"","what":"Practical tips","title":"Submitting Many Mplus Models to an HPC with submitModels()","text":"Choose time format scheduler accepts (SLURM: hh:mm:ss d-hh:mm:ss; Torque often prefers d-hh:mm:ss). Start conservative per-model resources, adjust using inline directives outliers. Keep replaceOutfile = \"modifiedDate\" avoid resubmitting completed models unless .inp changed. Use pre/post hooks encapsulate pre/post-processing, logging, artifact capture.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"MplusAutomation Examples","text":"guide provides examples use functions MplusAutomation package. package designed automate three major aspects latent variable modeling Mplus: creating related groups models running batches models extracting comparing model parameters fit statistics guide tries make assumptions user’s familiarity R environment, many Mplus user’s may unfamiliar R. Note MplusAutomation package written compatible Mplus version 5.21 later. Although many functions likely work earlier versions, may incompatibilities. Note: examples herein reference examples Mplus User’s Guide. input output files examples assumed reside directory: C:\\Program Files\\Mplus\\Mplus Examples\\User's Guide Examples installed Mplus different location, please use correct directory code .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"clarifying-the-relationship-between-mplusautomation-and-mplus","dir":"Articles","previous_headings":"Overview","what":"Clarifying the relationship between MplusAutomation and Mplus","title":"MplusAutomation Examples","text":"Please note MplusAutomation provide copy Mplus software, proprietary. model estimation handled Mplus (think computation engine), MplusAutomation provides convenience functions interfacing Mplus R working model outputs using familiar R data structures data.frame objects. Thus, must working copy Mplus estimate latent variable models using MplusAutomation using runModels() mplusModeler() functions. like obtain copy Mplus, please follow instructions statmodel.com website.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"installing-and-loading-the-package","dir":"Articles","previous_headings":"","what":"Installing and loading the package","title":"MplusAutomation Examples","text":"Note: need install MplusAutomation package given machine. follow instructions, can just use library(MplusAutomation) load package future sessions. MplusAutomation package compatible R Mplus Windows, Mac OS X, Linux platforms. package initially built using R 2.15.1 tested modern versions R 4.3.2. obtain R follow link. installing R launching new session, type following command line: ’re running Windows, may need run R administrator (right-click, Run administrator). load MplusAutomation package functions available use, type: Note: Mac users using versions R prior 4.0.0 may experiences crashes setup Tcl/Tk properly within R. default distribution Tcl/Tk shipped Mac OS X compatible R. Instead, users download install Tcl/Tk distribution .","code":"install.packages(\"MplusAutomation\") library(MplusAutomation) ## Version:  1.2 ## We work hard to write this free software. Please help us get credit by citing:  ##  ## Hallquist, M. N. & Wiley, J. F. (2018). MplusAutomation: An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus. Structural Equation Modeling, 25, 621-638. doi: 10.1080/10705511.2017.1402334. ##  ## -- see citation(\"MplusAutomation\")."},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"determine-the-version-of-mplusautomation-on-your-machine","dir":"Articles","previous_headings":"Installing and loading the package","what":"Determine the version of MplusAutomation on your machine","title":"MplusAutomation Examples","text":"verify version MplusAutomation loaded R session, type following code provide listing loaded packages.","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] MplusAutomation_1.2 ##  ## loaded via a namespace (and not attached): ##  [1] gtable_0.3.6       jsonlite_2.0.0     compiler_4.5.1     Rcpp_1.1.0         ##  [5] parallel_4.5.1     jquerylib_0.1.4    systemfonts_1.2.3  scales_1.4.0       ##  [9] textshaping_1.0.1  boot_1.3-31        yaml_2.3.10        fastmap_1.2.0      ## [13] lattice_0.22-7     coda_0.19-4.1      ggplot2_3.5.2      R6_2.6.1           ## [17] plyr_1.8.9         knitr_1.50         backports_1.5.0    checkmate_2.3.3    ## [21] tibble_3.3.0       pander_0.6.6       gsubfn_0.7         proto_1.0.0        ## [25] desc_1.4.3         bslib_0.9.0        pillar_1.11.0      RColorBrewer_1.1-3 ## [29] rlang_1.1.6        cachem_1.1.0       xfun_0.53          fs_1.6.6           ## [33] sass_0.4.10        cli_3.6.5          pkgdown_2.1.3      magrittr_2.0.3     ## [37] fastDummies_1.7.5  digest_0.6.37      grid_4.5.1         xtable_1.8-4       ## [41] texreg_1.39.4      lifecycle_1.0.4    vctrs_0.6.5        data.table_1.17.8  ## [45] evaluate_1.0.4     glue_1.8.0         farver_2.1.2       ragg_1.4.0         ## [49] rmarkdown_2.29     httr_1.4.7         tools_4.5.1        pkgconfig_2.0.3    ## [53] htmltools_0.5.8.1"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"updating-the-package-to-the-latest-version","dir":"Articles","previous_headings":"Installing and loading the package","what":"Updating the package to the latest version","title":"MplusAutomation Examples","text":"conventional R packages, latest version MplusAutomation may obtained CRAN using update.packages() function R session. 2025-08-24, current version package 1.2.","code":"update.packages(ask=FALSE, checkBuilt=TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"exporting-data-from-r-to-mplus","dir":"Articles","previous_headings":"","what":"Exporting data from R to Mplus","title":"MplusAutomation Examples","text":"helper function, prepareMplusData(), eases task transferring data R Mplus. Mplus requires files header row variable names specified within Mplus input syntax. prepareMplusData() function converts R data.frame object (typical way represent two-dimensional data R) tab-delimited file prints corresponding Mplus syntax console. syntax can pasted head new Mplus input file. two basic examples using command: first call requests variables specified keepCols included resultant Mplus data file. like manner, second call requests variables except specified dropCols included data file. neither keepCols dropCols specified, entire data.frame output. factors character variables (categorical), prepareMplusData converts level integer value (first level = 1, second level = 2, etc.) prints information levels converted can use properly inside Mplus syntax. Alternatively, use dummyCode argument prepareMplusData, get set dummy codes can used Mplus syntax. , mtcars dataset, convert number gears (car) factor prepareMplusData know convert unique values (3, 4, 5) integer-valued variable (1, 2, 3) can used Mplus syntax. number cylinders (cyl) transmission type (), ask prepareMplusData generate dummy codes level factors. Note one dummy code returned level, reference category implied. Thus, drop one dummy codes Mplus syntax denote reference category avoid multicollinearity.","code":"prepareMplusData(   my_data,   filename = \"C:/Data_Analysis/Prepare Mplus.dat\",   keepCols=c(\"id\", \"item1\", \"item3\", \"item6\"))  prepareMplusData(   my_other_data,   filename = \"C:/Data_Analysis/Prepare Dropped Mplus.dat\",   dropCols=c(\"baditem1\", \"baditem2\", \"baditem7\")) data(mtcars) mtcars$gear <- factor(mtcars$gear) prepareMplusData(mtcars, \"mtcars.dat\", dummyCode = c(\"cyl\", \"am\")) ## Converting the following variables to dummy codes: cyl, am ##  ## ----- ## Factor: gear  ## Conversion: ##  level number ##      3      1 ##      4      2 ##      5      3 ## -----"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"running-batches-of-mplus-models","dir":"Articles","previous_headings":"","what":"Running batches of Mplus models","title":"MplusAutomation Examples","text":"major purpose MplusAutomation package allow easy runs batches/groups Mplus models. Oftentimes, one wants compare group related models, testing different forms measurement invariance. Depending complexity models, Mplus can take several minutes many hours run model. routine designed run group related models located within directory (nested subdirectories).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"basic-use-of-runmodels","dir":"Articles","previous_headings":"Running batches of Mplus models","what":"Basic use of runModels","title":"MplusAutomation Examples","text":"example, say want run models used Mplus 5.1 Addendum: http://statmodel.com/download/examples1.pdf. input files located : C:\\Program Files\\Mplus\\Mplus Examples\\Addendum Examples. run batch, enter command line: Note need use forward slashes (“/”), backslashes path name. Alternatively, use double backslashes (e.g., \"C:\\\\Program Files\" etc.).","code":"runModels(\"C:/Program Files/Mplus/Mplus Examples/Addendum Examples\")"},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"recursing-through-subdirectories","dir":"Articles","previous_headings":"Running batches of Mplus models > Advanced use of runModels","what":"Recursing through subdirectories","title":"MplusAutomation Examples","text":"Sometimes useful organize models one subdirectories subdirectory contains models particular outcome analytic approach. example, one contrasting latent class analysis (LCA) confirmatory factor analysis (CFA), one place LCA models single directory place CFA models different directory. might yield file structure like : case, Mplus files larger project housed within parent directory, ComparingLCAvCFA. run models within ComparingLCAvCFA, including models within subdirectories (including LCA CFA), use recursive parameter runModels.","code":"ComparingLCAvCFA/LCA/1-class LCA.inp ComparingLCAvCFA/LCA/2-class LCA.inp ComparingLCAvCFA/LCA/3-class LCA.inp  ComparingLCAvCFA/CFA/1-factor CFA.inp ComparingLCAvCFA/CFA/2-factor CFA.inp ComparingLCAvCFA/CFA/3-factor CFA.inp runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"logging-the-outcome-of-runmodels","dir":"Articles","previous_headings":"Running batches of Mplus models > Advanced use of runModels","what":"Logging the outcome of runModels","title":"MplusAutomation Examples","text":"logFile parameter runModels allows user specify text file containing results runModels. Included log file parameters passed function, date batch started, models run (skipped), actions taken R process interrupted (e.g., terminating Mplus process). default, runModels() create log file directory models run, directory, called Mplus Run Models.log. change name location file, specify logFile parameter, example: , file C:/CFALCA-Comparison-Log.txt created directory C:/. specify log file created, pass logFile=NULL runModels().","code":"runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE,   logFile=\"C:/CFALCA-Comparison-Log.txt\")| runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE,   logFile=NULL)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"skipping-models-with-existing-output-files","dir":"Articles","previous_headings":"Running batches of Mplus models > Advanced use of runModels","what":"Skipping models with existing output files","title":"MplusAutomation Examples","text":"Sometimes useful skip models already run avoid computing time associated running input files within directory. parameter allows one specify models re-run, models output filename input file considered run. default, replaceOutfile=\"always\", meaning input files run, regardless whether matching output file. skip model already existing output file, pass replaceOutfile=\"never\" runModels(), example: Oftentimes, model group models run, necessary modify aspects parameterization improve model fit address estimation problems. cases, output files inspected corresponding input files modified. cases, one may want run models updated, re-run models completed successfully. can accomplished passing replaceOutfile=\"modifiedDate\" runModels(). \"modifiedDate\" determines whether existing output file given input file. , checks see whether date input file modified newer output file. input file newer, model run. Otherwise, skipped. example:","code":"runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE,   replaceOutfile=\"never\") runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE,   replaceOutfile=\"modifiedDate\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"displaying-r-output-in-the-console","dir":"Articles","previous_headings":"Running batches of Mplus models > Advanced use of runModels","what":"Displaying R output in the console","title":"MplusAutomation Examples","text":"models run Mplus Windows program (MplusWin.exe), separate DOS window appears documents TECH8 progress model, represents progress toward maximum-likelihood convergence model (including random starts final stage optimizations models). display TECH8 output models run runModels(), pass showOutput=TRUE runModels() function. R session started R GUI (Rgui.exe), output displayed within R window. R session started using Rterm (terminal), separate DOS window display output, occurs using built-Mplus Windows program. default, output shown, showOutput=FALSE.","code":"runModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive=TRUE,   showOutput=TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"user-friendly-interface-to-runmodels","dir":"Articles","previous_headings":"","what":"User-friendly interface to runModels()","title":"MplusAutomation Examples","text":"wrapper function, runModels_Interactive(), included MplusAutomation package, provides simple dialog box specifying models run. start interface, type following: picture documents appearance interface: Figure. Example using runModels() interactive graphical interface. Although one can provide parameters function set initial states interface, rarely necessary , syntax suffice.","code":"runModels_Interactive()"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"readmodels-extracting-all-supported-data-from-mplus-output","dir":"Articles","previous_headings":"","what":"readModels(): Extracting all supported data from Mplus output","title":"MplusAutomation Examples","text":"readModels() function provides single method extracting available information (MplusAutomation currently handles) one output files. preferred method extracting information Mplus output files. readModels() function also uses number additional functions accessible user read output TECH1, TECH3, TECH4, TECH9, RESIDUALS. readModels() function extracts model summaries, parameters, modification indices, saved data (using Mplus SAVEDATA syntax), single list object (stored mplus.model). top-level elements list represent distinct output files named corresponding Mplus output filename. mplus.model element list composed several sub-elements, depending information output file. Elements mplus.model object include: input: Mplus input syntax parsed list major section warnings: Syntax estimation warnings list errors: Syntax estimation errors list data_summary: Output SUMMARY DATA section, including cluster sizes ICCs sampstat: Sample statistics provided OUTPUT: SAMPSTAT, specified covariance_coverage: Covariance coverage matrix checking missingness patterns summaries: model summary statistics parameters: model parameter estimates class_counts: class counts proportions models include categorical latent variable. indirect: Output MODEL INDIRECT available output. Contains $overall $specific data.frames indirect effect section mod_indices: model modification indices residuals: list containing relevant information OUTPUT: RESIDUALS. savedata_info: information SAVEDATA output corresponding model savedata: data.frame corresponding SAVEDATA: FILE = … bparameters: mcmc.list object containing draws MCMC chains Bayesian model uses SAVEDATA: BPARAMETERS command tech1: list containing parameter specification starting values OUTPUT: TECH1. tech3: list containing parameter covariance correlation matrices OUTPUT: TECH3. tech4: list containing means, covariances, correlations latent variables OUTPUT: TECH4. tech7: list containing sample statistics latent class OUTPUT: TECH7 tech8: list containing optimization history model. Currently supports potential scale reduction BAYES. OUTPUT: TECH8 tech9: list containing error messages replication Monte Carlo simulation study OUTPUT: TECH9. tech10: list containing model fit information OUTPUT: TECH10 tech12: list containing observed versus estimated sample statistics TYPE=MIXTURE analyses OUTPUT: TECH12 fac_score_stats: factor score mean, correlation, covariance structure SAMPLE STATISTICS ESTIMATED FACTOR SCORES section lcCondMeans: conditional latent class means, obtained using auxiliary(e) syntax latent class models gh5: list containing data gh5 (graphics) file corresponding output. (Requires rhdf5 package). output: entire output file text Basic example: rbind.fill function provided plyr package used combine data.frames columns align perfectly (happens Mplus output files differ form summary statistics). sapply call used extract summaries element top-level element (.e., file).","code":"allOutput <- readModels(   \"C:/Data_Files/CFANesting\",   recursive=TRUE)  ## assuming there are multiple files in this directory ## just model summaries could retained as a data.frame as follows:  library(plyr) justSummaries <- do.call(\"rbind.fill\",   sapply(allOutput,\"[\", \"summaries\"))"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"extracting-model-summary-statistics","dir":"Articles","previous_headings":"","what":"Extracting model summary statistics","title":"MplusAutomation Examples","text":"Another major purpose package allow easy extraction model summary statistics one models. summary statistics include items log-likelihood values, root mean squared error approximation (RMSEA), Akaike’s Information (AIC). readModels() function extracts summary statistics along information Mplus output. summaries required, specify = \"summaries\"; otherwise, read sections access $summaries element returned list: runModels(), readModels() includes recursive filefilter parameters control output files parsed. filefilter parameter accepts Perl-compatible regular expression. Note backslashes used regular expressions must doubled inside R strings (.e., \\\\). example filtering files match “ex4” followed characters. function automatically searches files .extension, necessary include .file filter. complex filter matches filenames begin digits 1, 2, 3 (1-class, 2-class, 3-class output files) also contain text “Threshold”:","code":"mlist <- readModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive = TRUE,   what = \"summaries\") mySummaries <- do.call(\"rbind.fill\", sapply(mlist, \"[\", \"summaries\")) mlist <- readModels(   \"C:/Data_Analysis/Multiclass Models\",   filefilter = \"[123]{1}-class.*Threshold.*\",   what = \"summaries\") summaryStats <- do.call(\"rbind.fill\", sapply(mlist, \"[\", \"summaries\"))"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"listing-of-summary-statistics-extracted-by-readmodels","dir":"Articles","previous_headings":"Extracting model summary statistics","what":"Listing of summary statistics extracted by readModels","title":"MplusAutomation Examples","text":"version package (0.5), following summary statistics automatically extracted, available: Title: Title model, specified TITLE: command Filename: Filename output file InputInstructions: string containing full input syntax model Estimator: Estimator used model (e.g., ML, MLR, WLSMV, etc.) LL: Log-likelihood model BIC: Bayesian Information Criterion aBIC: Sample-Size-Adjusted BIC (Sclove, 1987) AIC: Akaike’s Information Criterion AICC: Corrected AIC, based Sugiura (1978) recommended Burnham & Anderson (2002) DIC: Deviance Information Criterion. Available ESTIMATOR=BAYES output. Parameters: Number parameters estimated model pD: Estimated number parameters Bayesian output Observations: number observations model (suppport multiple-groups analysis time) CFI: Confirmatory Fit Index TLI: Tucker-Lewis Index RMSEA_Estimate: Point estimate root mean squared error approximation RMSEA_90CI_LB: Lower bound 90% Confidence Interval around RMSEA estimate RMSEA_90CI_UB: Upper bound 90% Confidence Interval around RMSEA estimate RMSEA_pLT05: Probability RMSEA estimate falls .05, indicating good fit ChiSqM_Value: Model chi-squared value ChiSqM_DF: Model chi-squared degrees freedom ChiSqM_PValue: Model chi-squared p value ObsRepChiSqDiff_95CI_LB: Lower bound 95% confidence interval difference observed replicated chi-square values ObsRepChiSqDiff_95CI_UB: Upper bound 95% confidence interval difference observed replicated chi-square values PostPred_PValue: Posterior predictive p-value BLRT_KM1LL: Log-likelihood K-1 model (one less class) Bootstrapped Likelihood Ratio Test (TECH14) BLRT_PValue: P-value Bootstrapped Likelihood Ratio Test (TECH14) testing whether K class model significantly better K-1 BLRT_Numdraws: number bootstrapped samples used Bootstrapped Likelihood Ratio Test SRMR: Standardized root mean square residual WRMR: Weighted root mean square residual ChiSqBaseline_Value: Baseline (unstructured) chi-squared value ChiSqBaseline_DF: Baseline (unstructured) chi-squared degrees freedom ChiSqBaseline_PValue: Baseline (unstructured) chi-squared p value NumFactors: TYPE=EFA output, number factors T11_KM1Starts: TECH11: Number initial stage random starts k-1 model T11_KM1Final: TECH11: Number final stage optimizations k-1 model T11_KM1LL: TECH11: Log-likelihood K-1 model used Vuong-Lo-Mendell-Rubin LRT T11_VLMR_2xLLDiff: TECH11: 2 * Log-likelihood Difference K-class vs. K-1-class model Vuong-Lo-Mendell-Rubin LRT T11_VLMR_ParamDiff: TECH11: Difference number parameters K-class K-1-class model Vuong-Lo-Mendell-Rubin LRT T11_VLMR_Mean: TECH11: Vuong-Lo-Mendell-Rubin LRT mean T11_VLMR_SD: TECH11: Vuong-Lo-Mendell-Rubin LRT standard deviation T11_VLMR_PValue: TECH11: Vuong-Lo-Mendell-Rubin LRT p-value T11_LMR_Value: TECH11: Lo-Mendell-Rubin Adjusted LRT value T11_LMR_PValue: TECH11: Lo-Mendell-Rubin Adjusted LRT p-value summary statistics can used conjunction functions generate tables model fit information (see ).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"summarizing-model-fit-statistics-in-tabular-form","dir":"Articles","previous_headings":"","what":"Summarizing model fit statistics in tabular form","title":"MplusAutomation Examples","text":"summary statistics group models extracted, often useful display tabular form compare fit among models, sorted particular criterion (e.g., AIC). MplusAutomation package provides three routines tabulating model summary statistics. time, three table-generating functions, detailed : showSummaryTable(), HTMLSummaryTable(), LatexSummaryTable(). names suggest, functions can create tables -screen display (showSummaryTable()), HTML file containing table (HTMLSummaryTable()), LaTex-formatted table (LatexSummaryTable() ).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"displaying-the-summary-table-on-the-screen","dir":"Articles","previous_headings":"Summarizing model fit statistics in tabular form","what":"Displaying the summary table on the screen","title":"MplusAutomation Examples","text":"showSummaryTable() function designed display summary table model fit statistics screen. function expects model list created readModels() allows user specify columns included table. simple example using showSummaryTable() specifying columns keep table: another example specifying columns model list displayed except specified:","code":"showSummaryTable(   summaryStats,   keepCols = c(\"Title\", \"LL\", \"AIC\", \"BIC\", \"CFI\"),   sortBy = \"AIC\") showSummaryTable(   summaryStats,   dropCols = c(\"InputInstructions\", \"Observations\", \"Parameters\"),   sortBy = \"CFI\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"creating-a-summary-table-in-html","dir":"Articles","previous_headings":"Summarizing model fit statistics in tabular form","what":"Creating a summary table in HTML","title":"MplusAutomation Examples","text":"HTMLSummaryTable() function creates HTML file containing summary table model fit statistics. syntax similar showSummaryTable(), including parameters dropCols, keepCols, sortBy. Two parameters distinguish summary functions: filename display. filename parameter specifies path filename HTML file created. display specifies whether display HTML summary table web browser created. simple using function:","code":"HTMLSummaryTable(   summaryStats,   filename = \"C:/MyModelSummary.html\",   display = TRUE,   keepCols = c(\"Title\", \"LL\", \"AIC\", \"BIC\", \"AICC\"),   sortBy = \"AIC\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"creating-a-summary-table-in-latex","dir":"Articles","previous_headings":"Summarizing model fit statistics in tabular form","what":"Creating a summary table in LaTeX","title":"MplusAutomation Examples","text":"One major strength R ability interwoven LaTeX, advanced typesetting language. frequently used approach combining R LaTex Sweave (https://cran.r-project.org/doc/Rnews/Rnews_2002-3.pdf), built-R function runs R code embedded LaTeX document, thereby permitting creation advanced automated reports. Mplus model fit summary tables can formatted LaTeX using LatexSummaryTable() function. Unlike showSummaryTable() HTMLSummaryTable(), LatexSummaryTable() returns value, specifically LaTeX syntax summary table. simple example function Note LatexSummaryTable() supports two distinct parameters relative summary table functions: caption() label(). allow user set caption label properties table, used LaTex displaying caption table allowing table easily referenced parts document, respectively. See https://en.wikibooks.org/wiki/LaTeX/Tables#The_table_environment_-_captioning_etc details LaTeX tables. LaTeX syntax summary table included Sweave document following way: See Sweave manual details combining LaTeX R.","code":"myLatexTable <- LatexSummaryTable(   summaryStats,   keepCols = c(\"Title\", \"BIC\", \"Parameters\"),   sortBy = \"Parameters\",   caption = \"Comparing CFA vs. LCA according to number of parameters\",   label=\"CFALCATab\") <<echo=TRUE, results=tex>>=  myLatexTable <- LatexSummaryTable(   summaryStats,    keepCols = c(\"Title\", \"BIC\", \"Parameters\"),    sortBy = \"Parameters\",    caption = \"Comparing CFA vs. LCA according to number of parameters\",    label = \"CFALCATab\")  print(myLatexTable) @"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"extracting-model-modification-indices","dir":"Articles","previous_headings":"","what":"Extracting model modification indices","title":"MplusAutomation Examples","text":"readModels() function extracts model modification indices MODEL MODIFICATION INDICES sections one Mplus output files. user request modification indices using OUTPUT: MODINDICES, models, indices available, noted WARNINGS section Mplus output. Model modification indices returned data.frame form: columns follow conventions used Mplus EPC refers expected parameter change designated relationship estimated. obtain modification indices, use readModels() access $mod_indices element:","code":"modV1 operator modV2     MI    EPC Std_EPC StdYX_EPC BORD1       ON BORD9 12.427 -0.284  -0.284    -0.231 BORD9     WITH BORD1 12.427 -0.053  -0.053    -0.222 my_model <- readModels(\"~/Mplus_Test.out\") my_model$mod_indices"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"extracting-model-parameters","dir":"Articles","previous_headings":"","what":"Extracting model parameters","title":"MplusAutomation Examples","text":"readModels() function extracts model parameters MODEL RESULTS STANDARDIZED MODEL RESULTS sections given Mplus output file. Examples parameters include parameter estimate, standard error, parameter estimate divided standard error, two-tailed p-value. readModels() can process many output files, returning list one element per file. available, unstandardized standardized (StdYX, StdY, Std) parameters extracted nested data.frame objects.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"example-extracting-parameters-from-a-single-file","dir":"Articles","previous_headings":"Extracting model parameters","what":"Example: Extracting parameters from a single file","title":"MplusAutomation Examples","text":"call returns list unstandardized standardized results (requested including OUTPUT: STANDARDIZED Mplus input). standardizations available output, returned list following elements: unstandardized, stdyx.standardized, stdy.standardized, std.standardized. elements data.frame containing model results relevant section. elements may accessed using traditional R list operators, :","code":"modelResults <- readModels(   \"C:/Data_Analysis/Mplus Output.out\",   what = \"parameters\")$parameters unstandardizedResults <- modelResults$unstandardized  #equivalently standardizedResults <- modelResults[[\"stdyx.standardized\"]]"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"example-extracting-parameters-from-multiple-files","dir":"Articles","previous_headings":"Extracting model parameters","what":"Example: Extracting parameters from multiple files","title":"MplusAutomation Examples","text":"passing directory readModels() = \"parameters\", parameters files specified directory parsed returned list, one element per file. recursive parameter specifies whether parse files nested within subdirectories, filefilter specifies optional Perl-compatible regular expression parsing matching files within target directory. Say, example, two subdirectories within ComparingLCAvCFA directory 3 outputs . Note example builds recursive runModels() example . following code extract model parameters files directory structure, returning output list element. names returned list elements based directory file names file (note spaces, slashes, minus sign replaced periods compatible R naming conventions): , extract STDYX standardized results 2-factor CFA, one access data.frame follows:","code":"ComparingLCAvCFA/LCA/1-class LCA.out ComparingLCAvCFA/LCA/2-class LCA.out ComparingLCAvCFA/LCA/3-class LCA.out  ComparingLCAvCFA/CFA/1-factor CFA.out ComparingLCAvCFA/CFA/2-factor CFA.out ComparingLCAvCFA/CFA/3-factor CFA.out allModelParameters <- readModels(   \"C:/Data_Analysis/ComparingLCAvCFA\",   recursive = TRUE,   what = \"parameters\") names(allModelParameters)  ## ComparingLCAvCFA.LCA.1.class.LCA.out ## ComparingLCAvCFA.LCA.2.class.LCA.out ## ComparingLCAvCFA.LCA.3.class.LCA.out ## ComparingLCAvCFA.CFA.1.factor.CFA.out ## ComparingLCAvCFA.CFA.2.factor.CFA.out ## ComparingLCAvCFA.CFA.3.factor.CFA.out TwoFacCFA.STDYX <- allModelParameters$ComparingLCAvCFA.CFA.2.factor.CFA.out$parameters$stdyx.standardized"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"extracting-and-combining-model-results-across-files-and-sections","dir":"Articles","previous_headings":"Extracting model parameters > Example: Extracting parameters from multiple files","what":"Extracting and combining model results across files and sections","title":"MplusAutomation Examples","text":"Depending application, may useful retain certain sections build single large data.frame multi-file list. follows standard R practices combining subsetting data may unfamiliar inexperienced R users. examples serve demonstrate work readModels() list flexibly. Example: retaining unstandardized output default, readModels() returns unstandardized standardized output, available. retain unstandardized results, example, one following (building CFA v. LCA example ): Note variable names unstandardizedOnly list represent concatenation filename unstandardized keyword. example, first element now named: ComparingLCAvCFA.LCA.1.class.LCA..unstandardized. Names can manually tweaked using names function. example, retain existing filenames without appending .unstandardized, work: Example: Combining multi-file output single data.frame Rather list model results, element represents parameters single file, may useful combine results single data.frame. following code accomplish (assumes immediately prior code run): Now, combinedParameters single data.frame output file identified filename field.","code":"unstandardizedOnly <- sapply(allModelParameters, \"[\", c(\"parameters\")) unstandardizedOnly <- sapply(unstandardizedOnly, \"[\", \"unstandardized\") oldNames <- names(allModelParameters) unstandardizedOnly <- sapply(allModelParameters, \"[\", c(\"parameters\")) unstandardizedOnly <- sapply(unstandardizedOnly, \"[\", \"unstandardized\") names(unstandardizedOnly) <- oldNames #add the filename as a field in the data.frame (so it's uniquely identified when combined) lapply(names(unstandardizedOnly), function(element) {     unstandardizedOnly[[element]]$filename <<- element })  #this will only work if all data.frames have identical columns (i.e., same Mplus output fields) combinedParameters <- do.call(\"rbind\", unstandardizedOnly)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"basic-structure-of-each-model-results-section","dir":"Articles","previous_headings":"Extracting model parameters","what":"Basic structure of each model results section","title":"MplusAutomation Examples","text":"basic level, model parameters given section (perhaps given file) stored data.frame. Variables included data.frame objects include: paramHeader: header begins given parameter set. Example: “FACTOR1 ” param: particular parameter measured (within paramHeader). Example: “ITEM1” paramest: Parameter estimate value se: Standard error estimate est_se: Quotient paramest/se, representing z-test/t-test large samples pval: Two-tailed p-value est_se quotient models may provide different parameters, posterior standard deviation Bayesian models, extracted appropriately function. See R documentation readModels details variable names different model types.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"capitalizing-on-the-graphics-strength-of-r-to-visualize-results","dir":"Articles","previous_headings":"Extracting model parameters","what":"Capitalizing on the graphics strength of R to visualize results","title":"MplusAutomation Examples","text":"One major strengths R graphics functionality. Numerous functions provided base R, hist(), plot(), curve(). Furthermore, impressively flexible powerful graphics functionality now provided R grid graphics framework. useful introduction graphics R provided Paul Murrell’s book, R Graphics, Second Edition published CRC Press. particular, ggplot2 lattice graphics package R provide powerful functions R graphics. contrast, Mplus basic graphics functionality lacks flexibility robustness R. Now illustrated import Mplus model parameter estimates R, just couple examples useful graphs can developed readModels() data. Example: Plotting means standard errors finite mixture model example model plotted comes finite mixture model seven continuous indicators latent construct, scaled zero mean unit variance. intention plot visualize means standard error indicator across latent classes. relatively brief code snippet provides relatively useful plot sort: Figure. Example graphing finite mixutre model results Mplus using ggplot2.","code":"library(MplusAutomation)   library(ggplot2)   modelParams <- readModels(\"output_to_plot.out\")$parameters$unstandardized   modelParams <- subset(modelParams,     paramHeader==\"Means\" &       LatentClass != \"Categorical.Latent.Variables\",     select=c(\"LatentClass\", \"param\", \"est\", \"se\"))      limits <- aes(ymax = est + se, ymin=est - se)          fmmMeanPlot <- ggplot(modelParams, aes(x=param, y=est)) +         geom_pointrange(limits) +         scale_x_discrete(\"\") +         geom_hline(yintercept=0, color=\"grey50\") +         facet_grid(LatentClass ~ .) +         theme_bw() +         ylab(\"Mean Value\") +         coord_flip()     print(fmmMeanPlot)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"comparing-summaries-and-parameters-across-models","dir":"Articles","previous_headings":"","what":"Comparing summaries and parameters across models","title":"MplusAutomation Examples","text":"important part interpreting results latent variable models comparison model fit indices parameter estimates across related sets models. example, additional covariate included model, parameter estimates change? compareModels() function designed compare model fit indices /parameter estimates across two models. function also computes chi-square difference tests nested models estimated ML, MLM, MLR, WLS, WLSM estimators using diffTest parameter. use compareModels(), recommend using readModels() extract various fit statistics parameters two models. can pass either summaries parameters components objects returned readModels() compareModels(), provide full model objects. brief example one might use compareModels(). can discerned , example compareModels() call compares two nested models list returned readModels(). show argument requests comparison parameter value difference (\"diff\"), p-value differences (\"pdiff\"), summary statistics (\"summaries\"), parameters unique model (\"unique\"). Parameter estimate differences must exceed .05 displayed, p-value differences must exceed .02 (specified equalityMargin argument). parameter comparisons sorted type (factor loadings, regressions, covariances, residual variances, etc.). chi-square difference test requested using diffTest=TRUE. non-significant parameters removed model comparison (showNS=FALSE).","code":"parallelModels <- readModels(\"10_14_Harsh_SelfCon_Impul\")  compareModels(parallelModels[[\"backport.from.grand.model.out\"]],   parallelModels[[\"backport.from.grand.model.slopesonw1.out\"]],   show = c(\"diff\", \"pdiff\", \"summaries\", \"unique\"),   equalityMargin = c(param = .05, pvalue = .02),   sort = \"type\", diffTest = TRUE, showNS = FALSE) Mplus model comparison ----------------------  ------ Model 1:  10_14_Harsh_SelfCon_Impul/backport from grand model.out Model 2:  10_14_Harsh_SelfCon_Impul/backport from grand model slopesonw1.out ------  Model Summary Comparison ------------------------               m1                                    m2 Title        Harsh Impul Self-Control Trivariate   Harsh Impul Self-Control Trivariate                LGCM with W1 Covariates - No Direct   LGCM with W1 Covariates - Direct                Influence of W1 on Slopes and         Influence of W1 on Slopes and                Intercepts                            Intercepts Observations 2187                                  2187 Estimator    MLR                                   MLR Parameters   87                                    103 LL           -69851.911                            -69820.77 AIC          139877.821                            139847.539 BIC          140372.876                            140433.639 ChiSqM_Value 280.781                               222.538 ChiSqM_DF    129                                   113 CFI          0.984                                 0.988 TLI          0.977                                 0.981 SRMR         0.025                                 0.022    MLR Chi-Square Difference test for nested models based on loglikelihood   -----------------------------------------------------------------------    Difference Test Scaling Correction:  1.033437   Chi-square difference:  60.2668   Diff degrees of freedom:  16   P-value:  0    Note: The chi-square difference test assumes that these models are nested.   It is up to you to verify this assumption.    MLR Chi-Square Difference test for nested models   --------------------------------------------    Difference Test Scaling Correction: 1.03125   Chi-square difference: 60.44   Diff degrees of freedom: 16   P-value: 0  Note: The chi-square difference test assumes that these models are nested.   It is up to you to verify this assumption.  =========  Model parameter comparison --------------------------     Parameter estimates that differ between models (param. est. diff > 0.05)   ----------------------------------------------         paramHeader      param m1_est m2_est . m1_se m2_se . m1_est_se m2_est_se . m1_pval m2_pval           SCC_S1.ON      IMP_I  0.155  0.073 | 0.036 0.050 |     4.255     1.478 |   0.000   0.139          HPC_I.WITH      IMP_I  0.128  0.182 | 0.066 0.069 |     1.927     2.634 |   0.054   0.008          SCC_I.WITH      HPC_I  1.391  1.455 | 0.189 0.183 |     7.372     7.949 |   0.000   0.000          SCC_I.WITH      IMP_I  0.213  0.352 | 0.127 0.134 |     1.682     2.624 |   0.093   0.009         SCC_S1.WITH     SCC_S2 -0.584 -0.649 | 0.160 0.157 |    -3.638    -4.141 |   0.000   0.000          Intercepts A11XEMOTSP  4.523  4.592 | 0.568 0.568 |     7.964     8.084 |   0.000   0.000          Intercepts      HPC_I  5.272  5.528 | 0.225 0.243 |    23.446    22.723 |   0.000   0.000          Intercepts      HPC_S  0.725  0.583 | 0.092 0.092 |     7.865     6.358 |   0.000   0.000          Intercepts      IMP_I -0.661 -0.544 | 0.155 0.167 |    -4.263    -3.252 |   0.000   0.001          Intercepts      SCC_I  4.113  4.299 | 0.390 0.409 |    10.547    10.515 |   0.000   0.000          Intercepts     SCC_S2  4.811  5.008 | 0.382 0.418 |    12.604    11.987 |   0.000   0.000  Residual.Variances   A10CHARP  2.376  2.299 | 0.158 0.156 |    15.016    14.719 |   0.000   0.000  Residual.Variances   A10CSELF  6.871  6.544 | 0.554 0.534 |    12.405    12.245 |   0.000   0.000  Residual.Variances   A12CSELF  6.298  6.206 | 0.406 0.401 |    15.531    15.493 |   0.000   0.000  Residual.Variances   A14CHARP  2.019  1.959 | 0.154 0.150 |    13.149    13.075 |   0.000   0.000  Residual.Variances   A14CSELF  2.547  2.654 | 0.903 0.896 |     2.821     2.961 |   0.005   0.003  Residual.Variances      HPC_I  2.634  2.764 | 0.166 0.162 |    15.846    17.079 |   0.000   0.000  Residual.Variances      SCC_I  7.086  7.433 | 0.574 0.552 |    12.351    13.463 |   0.000   0.000  Residual.Variances     SCC_S1  0.606  0.680 | 0.140 0.131 |     4.312     5.203 |   0.000   0.000     P-values that differ between models (p-value diff > 0.02)   -----------------------------------  paramHeader param m1_est m2_est . m1_se m2_se . m1_est_se m2_est_se . m1_pval m2_pval     HPC_S.ON IMP_I  0.049  0.028 | 0.011 0.015 |     4.243     1.894 |   0.000   0.058    SCC_S1.ON IMP_I  0.155  0.073 | 0.036 0.050 |     4.255     1.478 |   0.000   0.139   HPC_I.WITH IMP_I  0.128  0.182 | 0.066 0.069 |     1.927     2.634 |   0.054   0.008   SCC_I.WITH IMP_I  0.213  0.352 | 0.127 0.134 |     1.682     2.624 |   0.093   0.009     Parameters unique to model 1: 0   -----------------------------    None     Parameters unique to model 2: 16   -----------------------------   paramHeader     param m2_est m2_se m2_est_se m2_pval     HPC_S.ON W1PHARPUN  0.038 0.008     4.884   0.000    SCC_S1.ON   W1PSELF  0.034 0.014     2.389   0.017     14 filtered from output (fixed and/or n.s.)      HPC_S.ON.IMPLW1, HPC_S.ON.W1PNEGEM, HPC_S.ON.W1PSELF, SCC_S1.ON.IMPLW1,     SCC_S1.ON.W1PHARPUN, SCC_S1.ON.W1PNEGEM, SCC_S2.ON.IMPLW1,     SCC_S2.ON.W1PHARPUN, SCC_S2.ON.W1PNEGEM, SCC_S2.ON.W1PSELF,     IMP_S.ON.IMPLW1, IMP_S.ON.W1PHARPUN, IMP_S.ON.W1PNEGEM, IMP_S.ON.W1PSELF   =============="},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"creating-a-group-of-models-from-an-mplus-template-file-createmodels","dir":"Articles","previous_headings":"","what":"Creating a group of models from an Mplus template file (createModels())","title":"MplusAutomation Examples","text":"third major focus MplusAutomation package provide tools automate process creating input files related group models. Perhaps simplest example related group models latent class analysis, one runs certain model different numbers classes, input files otherwise . createModels() function converts single Mplus template file set related Mplus input files. template language simple extension Mplus language allows dynamic values inserted Mplus syntax files reusing code. basic notion template files multiple input files created looping one variables (called “iterators”) substituting specific values change model, thereby allowing creation related input files share much code. basic example, one might iterate set outcome variables (e.g., positive emotions, negative emotions, conscientiousness) growth model dataset remains fixed, outcome variables change. Mplus template syntax files divided two sections: init section body section. init section consists definitions variables inserted Mplus syntax, instructions determining filename directory created input files, variables loop create multiple Mplus input files. body section consists Mplus syntax template tags included certain variables change (e.g., number classes, names outcome variables, etc.). Tags Mplus syntax language demarcated double brackets. example, tag [[outcomeName]] requests value provided init section inserted Mplus syntax file. get details, particularly simple example may make general concepts tangible. example adapted Mplus User’s Guide Example 7.3: LCA binary latent class indicators using automatic starting values random starts. template file instructs createModels() function loop variable called classes. classes variable defined integers 1-7 (colon 1:7 indicates sequence). Files named according number classes, classes = 5, filename = \"[[classes]]-class LCA 7.3.inp\"; evaluate 5-class LCA 7.3.inp. files saved directory C:/MplusAutomation/LCA Outputs. Note R`` uses forward slashes, backslashes, indicate directory paths. body section simple example, thing changes definition CLASSES = c([[classes]]). classes defined integers 1-7, 7 Mplus input files created createModels() major difference number classes. createModels() loops classes variable, current value classes inserted body section.","code":"[[init]] iterators = classes; classes = 1:7; filename = \"[[classes]]-class LCA 7.3.inp\"; outputDirectory = \"C:/MplusAutomation/LCA Outputs\"; [[/init]]  TITLE: this is an example of a LCA with binary latent class indicators using automatic starting values with random starts DATA: FILE IS ex7.3.dat; VARIABLE: NAMES ARE u1-u4 x1-x10; USEVARIABLES = u1-u4; CLASSES = c ([[classes]]); CATEGORICAL = u1-u4; AUXILIARY = x1-x10 (e); ANALYSIS: TYPE = MIXTURE; OUTPUT: TECH1 TECH8 TECH10;"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"init-section","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels())","what":"Init section","title":"MplusAutomation Examples","text":"init section consists variable definitions used specify variables iterators, number iterations/models loop , filenames directories input files created createModels(), fields inserted body section template tags specified. Variable definitions iterator section use syntax variable = value;. Variable names case-sensitive value fields can span multiple lines. definitions must terminated semicolon. cases variable’s value series items (e.g., outcome1, outcome2, outcome3, specified space-separated list (either using spaces tabs). example, one wants link particular variable iterator value list included body section, definitions might look something like: , four input files created corresponding four different outcome variables: Conscien, Extraver, Agreeabl, Openness (presumably defined body section template). main point outcomeNames variable defined four-item list, single value. cases values variable need contain spaces, sure include values double quotes. example, might modify outcomeNames field : point deserves emphasis: spaces assumed specify distinct values unless enclosed double quotes. behavior similar Mplus language, syntax VARIABLES = var1 var2 var3; defines three distinct variable names. Even given variable init section one value (filename ), double quotes must used spaces included created files, rather interpreted list.","code":"[[init]] iterators = outcome; outcome = 1:4; outcomeNames#outcome = Conscien Extraver Agreeabl Openness; filename = \"CFA for [[outcomeNames#outcome]].inp\"; outputDirectory = C:/; [[/init]] outcomeNames#outcome = \"Conscientiousness Score\" \"Extraversion Score\" \"Agreeableness Score\" \"Openness Score\";"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"required-init-definitions","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Init section","what":"Required init definitions","title":"MplusAutomation Examples","text":"Three variables must defined Mplus template files. First, iterators variable defines variables init section iterators (.e., integer variables looped create input files). Iterators looped order specified definition iterators. example three iterators create total 60 files (453). example, program loop outcome, model, classes order. first file created outcome=1, model=1, classes=1, second model outcome=1, model=1, classes=2, etc. technical reader, iterators processed recursively left right (, classes within model within outcome). top-iterator outcome bottom-classes. Don’t worry much , though. cases, ordering matter much one generally hvae think program handles iterators. second required init variable filename. variable defines filenames input files created createModels() function. general, end “.inp” consistent Mplus conventions. tags can (probably ) included filename definition. idea combination filename outputDirectory define unique file/path input file created createModels() function. Remember filename contains spaces, please use double quotes. third required init variable outputDirectory. variable defines directory (directories) input files saved. Please note: directories specified outputDirectory exist, createModels() function create , careful path correct. output directory specified, createModels() place input files R working directory (viewable getwd() settable setwd()), preferable always specify output directory. output directory absolute path (.e., one begins drive letter, C:\\), top level output directory placed within working directory. Consider value outputDirectory: syntax create following directory structure: generally recommended users specify absolute path (.e., one begins drive letter C:/) outputDirectory avoid confusion files saved. Note typical include tags definition outputDirectory allow dynamic naming directories according model file created. Consider example, defines filename outputDirectory create set unique files: case, outputDirectory absolute path (.e., begin drive letter), directory called “Template Output” created within R working directory (getwd()). Five subdirectories within “Template Output” created: “Conscientiousness”, “Extraversion”, “Agreeableness”, “Openness”, “Neuroticism”. Within directories, three files created: “Poisson Growth Model.inp”, “Negative Binomial Growth Model.inp”, “Negative Binomial Hurdle Growth Model.inp”. idea createModels() iterates outcome model, appropriate values outcomeDirNames modelNames inserted. described list tag section , # separating modelNames model terms indicates iteration model, matching element modelNames variable inserted.","code":"[[init]] iterators = outcome model classes; outcome = 1:4; model = 1:5; classes = 2 3 4; filename = \"[[classes]]-class Model.inp\"; outputDirectory = C:/Data/[[outcome]]/[[model]]; [[/init]] [[init]] iterators = outcome model; outcome = 1:2; model = 1:3; outcomeName#outcome = Outcome1 Outcome2; modelName#model = Model1 Model2 Model3; outputDirectory = \"C:/CFA/[[outcomeName#outcome]]/[[modelName#model]]\"; filename=\"testfile.inp\" [[/init]] CFA/ CFA/Outcome1/Model1 CFA/Outcome1/Model2 CFA/Outcome1/Model3 CFA/Outcome2/Model1 CFA/Outcome2/Model2 CFA/Outcome2/Model3 [[init]] iterators = outcome model; outcome = 1:5; model = 1:3; outcomeDirNames#outcome = Conscientiousness Extraversion Agreeableness Openness Neuroticism; modelNames#model = Poisson \"Negative Binomial\" \"Negative Binomial Hurdle\"; filename = \"[[modelNames#model]] Growth Model.inp\"; outputDirectory = \"Template Output/[[outcomeDirNames#outcome]];\" [[/init]]"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"tag-types","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels())","what":"Tag types","title":"MplusAutomation Examples","text":"four types tags supported Mplus template language. simple: value defined init section substituted wherever simple tag occurs body section, unrelated status iterator. list: certain element list values substituted depending value specified iterator. iterator: numeric value iterator substituted. conditional: certain block code included condition met (e.g., classes > 1).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"simple-tags","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Tag types","what":"Simple tags","title":"MplusAutomation Examples","text":"Simple tags refer variables defined init section, change respect iterator. practice, often less useful list tags. simple tags useful certain variable/word occurs several places input file might need changed throughout model. essence, simple tag can act find/replace function: value defined init section inserted body section wherever tag occurs. simple tag example uses simple tags specify time scores latent growth curve model: key idea respect simple tags time scores inserted model plot sections. one wanted change time scores, included sections. bit contrived since one easily use command SERIES=[[t1ModelNames#model]]-[[t3ModelNames#model]] (s);.","code":"[[init]] iterators = model; model = 1:3; t1ModelNames#model = Outcome1_t1 Outcome2_t1 Outcome3_t1; t2ModelNames#model = Outcome1_t2 Outcome2_t2 Outcome3_t2; t3ModelNames#model = Outcome1_t3 Outcome2_t3 Outcome3_t3; time1 = 0; time2 = 1; time3 = 3; outputDirectory=output; filename=[[modelOutcome#model]].inp; [[/init]] TITLE: [[modelOutcomes#model]] Latent Growth Curve Model DATA:   FILE = \"testData.dat\"; VARIABLE:   NAMES ARE   id outcome1 outcome2 outcome3 covariate1; MODEL: i s | [[t1ModelNames#model]]@[[time1]] [[t2ModelNames#model]]@[[time2]] [[t3ModelNames#model]]@[[time3]]; PLOT: TYPE=PLOT3;     SERIES=[[t1ModelNames#model]] ([[time1]]) [[t2ModelNames#model]] ([[time2]]) [[t3ModelNames#model]] ([[time3]]);     i s ON covariate1;"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"list-tags","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Tag types","what":"List tags","title":"MplusAutomation Examples","text":"List tags used insert given value list init variable (.e., one one element) depending value related iterator. List init variables always linked particular iterator number elements iterator. indicate list tag tied certain iterator, include suffix # variable name,  iterator interest. example, one creating template file iterate 3 variables growth model, can accomplished single iterator variable (e.g., outcome). defining variable names used Mplus syntax, list tags used follows: simple example, four list tags tied outcome iterator. One list tag, modelName#outcome defines descriptive names model used title filename. list tags (wave1Name#outcome, wave2Name#outcome, wave3Name#outcome) used specify variable names wave current value outcome iterator.","code":"[[init]] iterators = outcome; outcome = 1:3; modelName#outcome = \"Outcome 1\" \"Outcome 2\" \"Outcome 3\"; wave1Name#outcome = outcome1_w1 outcome2_w1 outcome3_w1; wave2Name#outcome = outcome1_w2 outcome2_w2 outcome3_w2; wave3Name#outcome = outcome1_w3 outcome2_w3 outcome3_w3; outputDirectory=test; filename=\"[[modelName#outcome]] Growth Model.inp\"; [[/init]] TITLE: [[modelName#outcome]] Growth Model DATA:   FILE = \"testData.dat\"; VARIABLE:   NAMES ARE   id outcome1_w1 outcome1_w2 outcome1_w3     outcome2_w1 outcome2_w2 outcome2_w3     outcome3_w1 outcome3_w2 outcome3_w3;          USEVARIABLES ARE [[wave1Name#outcome]] [[wave2Name#outcome]] [[wave3Name#outcome]]; MODEL:     i s | [[wave1Name#outcome]]@0 [[wave2Name#outcome]]@1 [[wave3Name#outcome]]@2;"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"iterator-tags","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Tag types","what":"Iterator tags","title":"MplusAutomation Examples","text":"Iterator tags used insert numeric value given iterator body section (another init variable). useful numeric value iterator conveys useful meaning, case multiple latent classes mixture modeling measurement occasions growth modeling. iterator tag example given , Mplus User’s Guide Example 7.3 adapted create set related models spanning 1-7 classes. relevant line iterator tag : , numeric value classes iterator (ranged 1 7) inserted Mplus syntax place [[classes]] tag..","code":"CLASSES = c ([[classes]]);"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"conditional-tags","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Tag types","what":"Conditional tags","title":"MplusAutomation Examples","text":"Conditional tags used specify conditions certain block Mplus syntax included excluded generated input files. Unlike types tags, conditional tags substitute particular values input file. Rather, always opening tag closing conditional tag define pair, syntax tags included provided condition met. basic syntax conditional tag : [[<varname> <operator> <value>]] varname variable whose condition checked, operator logical operator (currently supported ==, !=, <, >, <=, >=, “equal ”, “equal ”, “less ”, “greater ”, “less equal ”, “greater equal ”, respectively), value numeric value character string compared . closing tag always identical opening tag, except prefixed single forward slash (drawing basic HTML/XML syntax). simple excerpt demonstrating conditional tag: closing tag must match opening tag exactly (point, even use spaces). Conditional tags may placed separate rows may placed row syntax included/excluded. Multiple conditional tags may placed row. described caveats/limitations section , one condition may checked using conditional tag, multiple conditions may checked nesting two tags. value checked (.e., right side comparator) character string, enclose double quotes, :","code":"[[init]] iterators=model; model=1:5; var1=test1; var2=test2; var3=test3; [[/init]] [[model > 2]] COUNT ARE [[var1]] [[var2]] [[var3]]; [[/model > 2]] [[modelNames#model != \"Poisson GMM\"]] !Mplus code specific to non-Poisson GMM models here [[/modelNames#model != \"Poisson GMM\"]]"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"a-complete-example","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels())","what":"A Complete Example","title":"MplusAutomation Examples","text":", provide complex complete example template file generates 480 input files numerous subfolders. probably overkill applications, gives sense language capable . application growth mixture modeling symptoms DSM-IV personality disorders time. 10 personality disorders two groups participants: high risk low risk. addition, one question interest whether class constrained 0 first measurement occasion 0 growth captures subgroup participants. addition, one might interested comparing whether count data better modeled continuous normal model versus Poisson model, whether Poisson GMM provides better fit Poission latent class growth analysis (LCGA). considerations reflected single template file. sane default, chose generate models vary 1 4 latent trajectory classes. Rather detailing file line--line, points highlighted. First note group iterator values 2 5, non-contiguous start zero. fine iterators, note groupnames#group list variable two elements (5). essential idea iterators can take values (assuming unique) elements corresponding list tag match one--one order values (left right) iterator. Second, notice conditional tags used specify numerical integration algorithm used model 2, refers Poisson GMM, whereas Poisson LCGA Normal GMM require features. Third, notice two conditional tags used last line indicate TECH10, TECH11, TECH14 included model estimation (TECH10 relevant count outcomes TECH11 TECH14 relevant multi-class models). Lastly, notice nested conditional tags used specify large block code included creating model classes > 1 zeroclass = 2. , zeroclass = 2 refers models -zero class desired, whereas zeroclass = 1 indicates zero class.","code":"[[init]] iterators = outcome group model classes zeroclass; outcome = 1:10; group = 2 5; model = 1:3; classes = 1:4; zeroclass = 1:2;  outcomenames#outcome = Paranoid Schizoid Schizotypal Antisocial     Borderline Histrionic Narcissistic Avoidant Dependent OCPD;  groupnames#group = \"Low Risk\" \"High Risk\";  modelnames#model = \"Normal LGCM\" \"Poisson GMM\" \"Poisson LCGA\";  zeroclassnames#zeroclass = \"\" \" with zero class\";  #wave names are with respect to the outcome iterator w1name#outcome = Paran1 Szoid1 Sztyp1 Anti1 Border1 Hist1     Narc1 Avoid1 Depend1 OCPD1; w2name#outcome = Paran2 Szoid2 Sztyp2 Anti2 Border2 Hist2     Narc2 Avoid2 Depend2 OCPD2; w3name#outcome = Paran3 Szoid3 Sztyp3 Anti3 Border3 Hist3     Narc3 Avoid3 Depend3 OCPD3;  filename = \"[[classes]]-class [[groupnames#group]] [[outcomenames#outcome]] [[modelnames#model]][[zeroclassnames#zeroclass]].inp\"; outputDirectory = \"PD GMM/[[outcomenames#outcome]]/[[groupnames#group]]/Unconditional_Models/[[modelnames#model]]\"; [[/init]]  TITLE: [[classes]]-class [[outcomenames#outcome]] [[groupnames#group]] [[modelnames#model]] Unconditional Model[[zeroclassnames#zeroclass]] DATA:   FILE = \"personality_mplus.dat\"; VARIABLE:   NAMES ARE     id group sex age Paran1 Szoid1 Sztyp1 Anti1 Border1 Hist1 Narc1 Avoid1 Depend1         OCPD1 PaAg1 Sadist1 SelfDef1 Paran2 Szoid2 Sztyp2 Anti2 Border2 Hist2 Narc2         Avoid2 Depend2 OCPD2 Paran3 Szoid3 Sztyp3 Anti3 Border3 Hist3 Narc3 Avoid3         Depend3 OCPD3;      MISSING ARE .;     USEVARIABLES ARE  [[w1name#outcome]] [[w2name#outcome]] [[w3name#outcome]];     USEOBSERVATIONS ARE group EQ [[group]]; ![[groupnames#group]] Only          [[model > 1]]     COUNT ARE [[w1name#outcome]] [[w2name#outcome]] [[w3name#outcome]];     [[/model > 1]]     CLASSES = c ([[classes]]);  ANALYSIS:     TYPE = MIXTURE;     STARTS = 1000 10;     K-1STARTS = 750 6;     PROCESSORS = 4;     [[model = 2]]     ALGORITHM = INTEGRATION;     [[/model = 2]] MODEL:  %OVERALL% Int Slope | [[w1name#outcome]]@0 [[w2name#outcome]]@0.97 [[w3name#outcome]]@2.77;  [[classes > 1]] [[zeroclass = 2]] !creates a class with all zeros at all time points [[model=1]] %c#2% [Int@0 Slope@0]; Int@0 Slope@0; [[/model=1]] [[model>1]] %c#2% [Int@-15 Slope@-15]; Int@0 Slope@0; [[/model>1]] [[/zeroclass = 2]] [[/classes > 1]]  PLOT:     Type = PLOT3;     Series =  [[w1name#outcome]] (0) [[w2name#outcome]] (0.97) [[w3name#outcome]] (2.77); OUTPUT: TECH1 TECH4 [[model != 1]]TECH10 [[/model != 1]][[classes > 1]]TECH11 TECH14 [[/classes > 1]]STANDARDIZED RESIDUAL;"},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"circular-tag-definition","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Caveats and limitations","what":"Circular tag definition","title":"MplusAutomation Examples","text":"Although frequently useful define init variables include tags, careful define two variables whose definitions depend . situation result repetitive loop adequately resolve tags (program inform error). example circular init variable definition: case, list variables defined respect model iterator. model 3, tag resolved tags circularly defined.","code":"iterators = model; model = 1:3; A = a_test1 a_test2 \"a_test3[[B#model]]\"; B = \"b_test1 [[A#model]]\" \"b_test2 [[A#model]]\" \"b_test3 [[A#model]]\";"},{"path":"https://michaelhallquist.github.io/MplusAutomation/articles/vignette.html","id":"conditional-logic-for-multiple-conditions","dir":"Articles","previous_headings":"Creating a group of models from an Mplus template file (createModels()) > Caveats and limitations","what":"Conditional logic for multiple conditions","title":"MplusAutomation Examples","text":"point, conditional tags support checking status single proposition (e.g., model != 1). cases, useful include certain piece Mplus syntax two conditions met. workaround current version MplusAutomation define two conditional tags, example: Checking multiple conditions short list “” items statements [[model > 1 && classes != 1]] available future version package.","code":"[[model > 1]] [[classes != 1]] var3@0; !Mplus code here [[/classes]] [[/model > 1]]"},{"path":"https://michaelhallquist.github.io/MplusAutomation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Hallquist. Author, maintainer. Joshua Wiley. Author. Caspar van Lissa. Contributor. Daniel Morillo. Contributor.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hallquist, M. N. & Wiley, J. F. (2018). MplusAutomation: R Package Facilitating Large-Scale Latent Variable Analyses Mplus Structural Equation Modeling, 25, 621-638. doi: 10.1080/10705511.2017.1402334.","code":"@Article{,   title = {{MplusAutomation}: An {R} Package for Facilitating Large-Scale Latent Variable Analyses in {Mplus}},   author = {Michael N. Hallquist and Joshua F. Wiley},   journal = {Structural Equation Modeling},   year = {2018},   pages = {621--638},   doi = {10.1080/10705511.2017.1402334},   url = {https://www.tandfonline.com/doi/full/10.1080/10705511.2017.1402334}, }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/index.html","id":"mplusautomation","dir":"","previous_headings":"","what":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","title":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","text":"MplusAutomation package leverages flexibility R language automate latent variable model estimation interpretation using Mplus, powerful latent variable modeling program developed Muthén Muthén (www.statmodel.com). Specifically, MplusAutomation provides routines creating related groups models, running batches models, extracting tabulating model parameters fit statistics.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","text":"can install latest release MplusAutomation directly CRAN running Alternately, want try latest development MplusAutomation code, can install straight github using Hadley Wickham’s devtools package. devtools installed, first install install MplusAutomation.","code":"install.packages(\"MplusAutomation\") #install.packages(\"devtools\") library(devtools)  install_github(\"michaelhallquist/MplusAutomation\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/index.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","text":"questions, answers, updates status MplusAutomation package, email subscribe Google group list.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","text":"can find detailed example use MplusAutomation package vignette . example using package run simple path model using mtcars dataset built R. takes run Mplus! MplusAutomation takes care figuring variables R dataset used model (get’s confused, can also specify usevariables). creates dataset suitable Mplus, calls Mplus run model dataset, reads back R. even pretty printing now. see results: fit great, add extra paths can update model. can make pretty output models: want confidence intervals, can also printed, long requested part output (initial model, propogates later models updated()ed based original model):","code":"library(MplusAutomation)  pathmodel <- mplusObject(    TITLE = \"MplusAutomation Example - Path Model;\",    MODEL = \"      mpg ON hp;      wt ON disp;\",    OUTPUT = \"CINTERVAL;\",    rdata = mtcars)  ## R variables selected automatically as any variable name that occurs in the MODEL, VARIABLE, or DEFINE section. ## If any issues, suggest explicitly specifying USEVARIABLES. ## A starting point may be: ## USEVARIABLES = mpg disp hp wt;  fit <- mplusModeler(pathmodel, modelout = \"model1.inp\", run = 1L) library(texreg) screenreg(fit, summaries = c(\"Observations\", \"CFI\", \"SRMR\"), single.row=TRUE) ==================================                   Model 1 ----------------------------------  MPG<-HP          -0.06 (0.01) ***  WT<-DISP          0.01 (0.00) ***  WT<->MPG         -1.02 (0.38) **  MPG<-Intercepts  29.59 (1.53) ***  WT<-Intercepts    1.82 (0.18) ***  MPG<->MPG        14.04 (3.52) ***  WT<->WT           0.21 (0.06) *** ---------------------------------- Observations      32 CFI                0.87 SRMR               0.14 ================================== *** p < 0.001, ** p < 0.01, * p < 0.05 pathmodel2 <- update(pathmodel, MODEL = ~ . + \"     mpg ON disp;     wt ON hp;\")  fit2 <- mplusModeler(pathmodel2, modelout = \"model2.inp\", run = 1L) screenreg(list(   extract(fit, summaries = c(\"Observations\", \"CFI\", \"SRMR\")),   extract(fit2, summaries = c(\"Observations\", \"CFI\", \"SRMR\"))),   single.row=TRUE) ====================================================                   Model 1           Model 2 ----------------------------------------------------  MPG<-HP          -0.06 (0.01) ***  -0.02 (0.01)  WT<-DISP          0.01 (0.00) ***   0.01 (0.00) ***  WT<->MPG         -1.02 (0.38) **   -0.73 (0.26) **  MPG<-Intercepts  29.59 (1.53) ***  30.74 (1.27) ***  WT<-Intercepts    1.82 (0.18) ***   1.68 (0.19) ***  MPG<->MPG        14.04 (3.52) ***   8.86 (2.21) ***  WT<->WT           0.21 (0.06) ***   0.19 (0.05) ***  MPG<-DISP                          -0.03 (0.01) ***  WT<-HP                              0.00 (0.00) ---------------------------------------------------- Observations      32                32 CFI                0.87              1.00 SRMR               0.14              0.00 ==================================================== *** p < 0.001, ** p < 0.01, * p < 0.05 screenreg(list(   extract(fit, cis=TRUE, summaries = c(\"Observations\", \"CFI\", \"SRMR\")),   extract(fit2, cis=TRUE, summaries = c(\"Observations\", \"CFI\", \"SRMR\"))),   single.row=TRUE) ================================================================                   Model 1                 Model 2 ----------------------------------------------------------------  MPG<-HP          -0.06 [-0.08; -0.05] *  -0.02 [-0.05;  0.00]  WT<-DISP          0.01 [ 0.00;  0.01] *   0.01 [ 0.01;  0.01] *  WT<->MPG         -1.02 [-1.77; -0.27] *  -0.73 [-1.25; -0.21] *  MPG<-Intercepts  29.59 [26.59; 32.58] *  30.74 [28.25; 33.22] *  WT<-Intercepts    1.82 [ 1.46;  2.17] *   1.68 [ 1.31;  2.04] *  MPG<->MPG        14.04 [ 7.14; 20.95] *   8.86 [ 4.52; 13.20] *  WT<->WT           0.21 [ 0.10;  0.32] *   0.19 [ 0.10;  0.28] *  MPG<-DISP                                -0.03 [-0.04; -0.02] *  WT<-HP                                   -0.00 [-0.00;  0.00] ---------------------------------------------------------------- Observations      32                      32 CFI                0.87                    1.00 SRMR               0.14                    0.00 ================================================================ * 0 outside the confidence interval"},{"path":"https://michaelhallquist.github.io/MplusAutomation/index.html","id":"how-to-help","dir":"","previous_headings":"","what":"How to Help","title":"An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus","text":"tutorial examples using MplusAutomation, please add github Wiki. addition, Wiki, list publications cite use MplusAutomation. use MplusAutomation work — papers, posters, presentations, etc. — please add citation list, possible, include abstract link full text. helps us get know users MplusAutomation used. Finally, find bugs suggestions new features ways enhance MplusAutomation, please let us know! Just click ‘Issues’ button top github page go open New Issue. Lastly, use MplusAutomation space, greatly appreciating citations. addition easier track, recognition credit help make easier us continue putting time developing sharing software!","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"Creates HTML file containing summary table model fit statistics extracted using extractModelSummaries function. default, following summary statistics included: Title, LL, Parameters, AIC, AICC, BIC, RMSEA_Estimate, customizable using keepCols dropCols parameters.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"","code":"HTMLSummaryTable(   modelList,   filename = file.path(getwd(), \"Model Comparison.html\"),   keepCols,   dropCols,   sortBy = NULL,   display = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"modelList list models (data.frame) returned extractModelSummaries function. filename name HTML file created. Can absolute relative path. filename relative path just filename, assumed file resides working directory getwd(). Example: \"Mplus Summary.html\" keepCols vector character strings indicating columns/variables display summary. columns included list displayed (others excluded). default, keepCols : c(\"Title\", \"LL\", \"Parameters\", \"AIC\", \"AICC\", \"BIC\", \"RMSEA_Estimate\"). Example: c(\"Title\", \"LL\", \"AIC\", \"CFI\") dropCols vector character strings indicating columns/variables omit summary. column included list displayed. default, dropCols NULL. Example: c(\"InputInstructions\", \"TLI\") sortBy optional. Field name (character string) sort table. Typically information criterion (e.g., \"AIC\" \"BIC\") used sort table. Defaults NULL, sort table. display optional. parameter specifies whether display table web browser upon creation (TRUE FALSE).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"value returned function. solely used create HTML file containing summary statistics.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"must choose keepCols dropCols sensible use   together include exclude columns. function error include parameters.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/HTMLSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTML file containing a summary table of Mplus model statistics — HTMLSummaryTable","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"Creates LaTex-formatted summary table model fit statistics extracted using extractModelSummaries function. table syntax returned function, useful embedding LaTex tables using Sweave. default, following summary statistics included: Title, LL, Parameters, AIC, AICC, BIC, RMSEA_Estimate, customizable using keepCols dropCols parameters.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"","code":"LatexSummaryTable(   modelList,   keepCols,   dropCols,   sortBy = NULL,   label = NULL,   caption = NULL )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"modelList list models (data.frame) returned extractModelSummaries function. keepCols vector character strings indicating columns/variables display summary. columns included list displayed (others excluded). default, keepCols : c(\"Title\", \"LL\", \"Parameters\", \"AIC\", \"AICC\", \"BIC\", \"RMSEA_Estimate\"). Example: c(\"Title\", \"LL\", \"AIC\", \"CFI\") dropCols vector character strings indicating columns/variables omit summary. column included list displayed. default, dropCols NULL. Example: c(\"InputInstructions\", \"TLI\") sortBy optional. Field name (character string) sort table. Typically information criterion (e.g., \"AIC\" \"BIC\") used sort table. Defaults NULL, sort table. label optional. character string specifying label LaTex table, can used referencing table. caption optional. character string specifying caption LaTex table.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"LaTex-formatted table summarizing modelList returned (created xtable).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"must choose keepCols dropCols sensible use together   include exclude columns. function error include parameters.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/LatexSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display summary table of Mplus model statistics in separate window — LatexSummaryTable","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomation.html","id":null,"dir":"Reference","previous_headings":"","what":"Automating Mplus Model Estimation and Interpretation — MplusAutomation","title":"Automating Mplus Model Estimation and Interpretation — MplusAutomation","text":"MplusAutomation package leverages flexibility   R language automate latent variable model estimation interpretation   using 'Mplus', powerful latent variable modeling program developed Muthen   Muthen (http://www.statmodel.com). Specifically, MplusAutomation provides routines   creating related groups models, running batches models, extracting   tabulating model parameters fit statistics.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automating Mplus Model Estimation and Interpretation — MplusAutomation","text":"MplusAutomation package four primary purposes: automatically run groups/batches models. provide routines extract model fit statistics, parameter estimates, raw data 'Mplus' output files. facilitate comparisons among models provide template language allows creation related input files. core routine running batches models runModels,   easy--use GUI wrapper, runModels_Interactive. core routine extracting information 'Mplus' outputs readModels,   returns list containing output sections package can extract. extract summaries, parameters, modification indices, SAVEDATA output, sections package   can understand, use readModels function. recommended way extract 'Mplus'   output package. target argument readModels single .file,   mplus.model (also list) returned containing output sections   package can extract. target directory, list mplus.model objects returned,   named according output filenames. Note: extractModelSummaries deprecated readModels preferred.   extract model summary statistics one output files, see   extractModelSummaries, returns data.frame   fit statistics models located within directory. Model fit results can   summarized tabular form (comparing among models) using   showSummaryTable (displays table separate window),   HTMLSummaryTable (creates HTML file containing summary table),   LatexSummaryTable (returns LaTex-formatted table   summary statistics). Detailed model fit parameter comparisons two models can obtained using   compareModels. create group related models single template, see createModels.   Please read MplusAutomation vignette provided along package (CRAN website)   order understand template language: vignette(\"Vignette\", package=\"MplusAutomation\"). addition major functions , function converting R data.frame   use 'Mplus' provided: prepareMplusData. converts   data.frame tab-delimited file provides 'Mplus' syntax stub variable names.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automating Mplus Model Estimation and Interpretation — MplusAutomation","text":"Mplus software. Muthen Muthen. http://www.statmodel.com","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automating Mplus Model Estimation and Interpretation — MplusAutomation","text":"Michael Hallquist michael.hallquist@gmail.com, Joshua F. Wiley jwiley.psych@gmail.com Maintainer: Michael Hallquist michael.hallquist@gmail.com","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomationUtils.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean data and calculate the md5 hash — .cleanHashData","title":"Clean data and calculate the md5 hash — .cleanHashData","text":"Internal utility function, primarily prepareMplusData. Internal utility function, primarily prepareMplusData.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomationUtils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean data and calculate the md5 hash — .cleanHashData","text":"","code":".cleanHashData(df, keepCols = NULL, dropCols = NULL, imputed = FALSE)  .hashifyFile(filename, hash, useexisting = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomationUtils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean data and calculate the md5 hash — .cleanHashData","text":"df R data.frame prepared Mplus keepCols character vector specifying variable names within df output filename numeric vector column indices output logical vector corresponding . dropCols character vector specifying variable names within df omitted data output filename numeric vector column indices output logical vector corresponding . imputed logical whether data multiply imputed.  Defaults FALSE.  TRUE, data list, element list multiply imputed dataset. filename character vector containing filename hash character vector hash use useexisting logical whether use existing file name one found containing hash.  Defaults FALSE case hash added user specified filename","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomationUtils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean data and calculate the md5 hash — .cleanHashData","text":"list data md5 hash. list filename (plus hash) logical value   whether filename hash already existed .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/MplusAutomationUtils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean data and calculate the md5 hash — .cleanHashData","text":"","code":"if (FALSE) { # \\dontrun{  ## basic example MplusAutomation:::.cleanHashData(mtcars)  ## has changes when data changes MplusAutomation:::.cleanHashData(mtcars[-15,])  ## example on a list (e.g., for multiply imputed data)  MplusAutomation:::.cleanHashData(  list(    data.frame(a = 1:4),    data.frame(a = c(2, 2, 3, 4))),   imputed = TRUE)  } # } MplusAutomation:::.hashifyFile(\"testit.dat\", \"abc\") #> $filename #> [1] \"testit_abc.dat\" #>  #> $fileexists #> [1] FALSE #>"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/OS.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to identify the operating system — OS","title":"Functions to identify the operating system — OS","text":"Functions identify operating system","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/OS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to identify the operating system — OS","text":"","code":"is.windows()  is.macos()  is.linux()  os()"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/OS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to identify the operating system — OS","text":"logical value .* functions character string os()","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/OS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to identify the operating system — OS","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/OS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to identify the operating system — OS","text":"","code":"MplusAutomation:::is.windows() #> [1] FALSE  MplusAutomation:::is.macos() #> [1] FALSE  MplusAutomation:::is.linux() #> [1] TRUE  MplusAutomation:::os() #> [1] \"linux\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table of Mplus model statistics — SummaryTable","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"Creates output (optionally sent file) containing summary table model fit statistics extracted using extractModelSummaries function. default, following summary statistics included: Title, LL, Parameters, AIC, AICC, BIC, RMSEA_Estimate, customizable using keepCols dropCols parameters.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"","code":"SummaryTable(   modelList,   type = c(\"none\", \"screen\", \"popup\", \"html\", \"latex\", \"markdown\"),   filename = \"\",   keepCols,   dropCols,   sortBy = NULL,   caption = \"\",   display = FALSE,   ...,   include.rownames = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"modelList list models returned extractModelSummaries function. type character vector indicating type output format generated.  One : “none”, “screen”, “popup”, “html”, “latex”, “markdown”. Screen results simple summary table sent R console. filename name file created. Can absolute relative path. filename relative path just filename, assumed file resides working directory getwd(). Example: \"Mplus Summary.html\".  default, filename given, results output sent console.  Note currently, filename effect “html” “latex”. keepCols vector character strings indicating columns/variables display summary. columns included list displayed (others excluded). default, keepCols : c(\"Title\", \"LL\", \"Parameters\", \"AIC\", \"AICC\", \"BIC\", \"RMSEA_Estimate\"). Example: c(\"Title\", \"LL\", \"AIC\", \"CFI\") dropCols vector character strings indicating columns/variables omit summary. column included list displayed. default, dropCols NULL. Example: c(\"InputInstructions\", \"TLI\") sortBy optional. Field name (character string) sort table. Typically information criterion (e.g., \"AIC\" \"BIC\") used sort table. Defaults NULL, sort table. caption character string, caption given table.  Currently applies types “html”, “latex”, “markdown”. display optional logical (defaults FALSE). parameter specifies whether display table upon creation (TRUE FALSE). include.rownames optional logical whether include rownames . ... additional arguments passed specific formatting types.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"Invisibly returns summary table, can used printing options avaiable sufficient.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"must choose keepCols dropCols sensible use   together include exclude columns. function error include parameters.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"Joshua F. Wiley based code Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/SummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table of Mplus model statistics — SummaryTable","text":"","code":"if (FALSE) { # \\dontrun{  m1 <- mplusObject(TITLE = \"Reduced\",   MODEL = \"mpg ON wt;\", rdata = mtcars)  m1.fit <- mplusModeler(m1, \"mtcars.dat\", run = 1L)  m2 <- mplusObject(TITLE = \"Full\",   MODEL = \"mpg ON wt hp qsec;\", rdata = mtcars)  m2.fit <- mplusModeler(m2, \"mtcars.dat\", run = 1L)   SummaryTable(list(m1.fit, m2.fit))  SummaryTable(list(m1.fit, m2.fit), type = \"popup\")  SummaryTable(list(m1.fit, m2.fit), type = \"markdown\",    keepCols = c(\"Title\", \"Parameters\", \"LL\", \"AIC\", \"CFI\", \"SRMR\"),    caption = \"Table of Model Fit Statistics\",    split.tables = 200)   # remove files  unlink(\"mtcars.dat\")  unlink(\"mtcars.inp\")  unlink(\"mtcars.out\")  unlink(\"Mplus Run Models.log\")  closeAllConnections() } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/addNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a node to a GRAPHVIZ model — addNode","title":"Add a node to a GRAPHVIZ model — addNode","text":": add details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/addNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a node to a GRAPHVIZ model — addNode","text":"","code":"addNode(dotModel, name, role, type)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/addNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a node to a GRAPHVIZ model — addNode","text":"dotModel Basic model name name model role role variable (can multiple) type type variable","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/addNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a node to a GRAPHVIZ model — addNode","text":"dotModel added node","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":null,"dir":"Reference","previous_headings":"","what":"Change directory — cd","title":"Change directory — cd","text":"function takes path changes current working directory path. directory specified path currently exist, created.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change directory — cd","text":"","code":"cd(base, pre, num)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change directory — cd","text":"base character string base path directory. required. pre optional character string prefix add base path. Non character strings coerced character class. num optional character string, prefixed pre. Non character strings coerced character class.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change directory — cd","text":"NULL, changes current working directory","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change directory — cd","text":"function designed platform independent, although limited testing. Path creation done using file.path, existence directory checked using file.exists directory created dir.create. first argument, required.  optional arguments handy one wants create many similar directories common base.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change directory — cd","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/cd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change directory — cd","text":"","code":"if (FALSE) { # \\dontrun{ # an example just using the base cd(\"~/testdir\")  # an example using the optional arguments base <- \"~/testdir\" pre <- \"test_\"  cd(base, pre, 1) cd(base, pre, 2) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/checkSubmission.html","id":null,"dir":"Reference","previous_headings":"","what":"check on the status of submitted Mplus jobs on the cluster — checkSubmission","title":"check on the status of submitted Mplus jobs on the cluster — checkSubmission","text":"check status submitted Mplus jobs cluster","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/checkSubmission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check on the status of submitted Mplus jobs on the cluster — checkSubmission","text":"","code":"checkSubmission(mplus_submission_df = NULL, quiet = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/checkSubmission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check on the status of submitted Mplus jobs on the cluster — checkSubmission","text":"mplus_submission_df data.frame returned submitModels containing jobs check quiet TRUE, print submission data.frame current status","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/checkSubmission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check on the status of submitted Mplus jobs on the cluster — checkSubmission","text":"invisibly, mplus_submission_df `$status` amd `$status_time` updated","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/classifyTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Classifies Tags — classifyTags","title":"Classifies Tags — classifyTags","text":"Accepts vector tags classified well iterators. Tags classified ‘iterator’, ‘array’, ‘conditional’, ‘simple’. internal function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/classifyTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classifies Tags — classifyTags","text":"","code":"classifyTags(tagVector, iteratorsVector)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/classifyTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classifies Tags — classifyTags","text":"tagVector vector tags classified iteratorsVector vector iterators correctly classify tags","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/classifyTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classifies Tags — classifyTags","text":"character vector length vectors tagged","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/clipString.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip String — clipString","title":"Clip String — clipString","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/clipString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip String — clipString","text":"","code":"clipString(string, start, end)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/clipString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip String — clipString","text":"string string clipped start character position start end character position end ","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/clipString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip String — clipString","text":"string start end","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Return coefficients for an mplus.model object — coef.mplus.model","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"method returning coefficients mplus.model object. works directly object stored readModels : object <- readModels(\"/path//model/model.\"). Method calls coef.mplus.model. See documentation .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"","code":"# S3 method for class 'mplus.model' coef(   object,   type = c(\"un\", \"std\", \"stdy\", \"stdyx\"),   params = c(\"regression\", \"loading\", \"undirected\", \"expectation\", \"variability\", \"new\"),   ...,   raw = FALSE )  # S3 method for class 'mplusObject' coef(object, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"object object class mplusObject type character vector indicating type coefficients return. One “un”, “std”, “stdy”, “stdyx”. params character vector indicating type parameters extract.  combination “regression”, “loading”, “undirected”, “expectation”, “variability”, “new”.  single one can passed multiple.  default, used parameters returned. ... Additional arguments pass (currently used) raw logical defaulting FALSE indicating whether parse return coefficients based type (regression, etc.) relabel using arrow notation, return raw coefficients named vector.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"Either data frame class ‘mplus.model.coefs’,   case multiple group models, list class ‘mplus.model.coefs’,   element list data frame class ‘mplus.model.coefs’,   named vector coefficients, raw=TRUE.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/coef.mplus.model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return coefficients for an mplus.model object — coef.mplus.model","text":"","code":"if (FALSE) { # \\dontrun{ # simple example of a model using builtin data # demonstrates use test <- mplusObject(   TITLE = \"test the MplusAutomation Package;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   OUTPUT = \"STANDARDIZED;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)  res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)  # example of the coef method on an mplud.model object # note that res$results holds the results of readModels() coef(res$results) coef(res$results, type = \"std\") coef(res$results, type = \"stdy\") coef(res$results, type = \"stdyx\")  # there is also a method for mplusObject class coef(res)  # remove files unlink(\"mtcars.dat\") unlink(\"model1.inp\") unlink(\"model1.out\") unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the output of two Mplus models — compareModels","title":"Compare the output of two Mplus models — compareModels","text":"compareModels function compares output two Mplus files prints similarities differences model summary statistics parameter estimates. Options provided filtering fixed parameters nonsignificant parameters. requested, compareModels compute chi-square difference test nested models (apply MLMV, WLSM, WLSMV estimators, DIFFTEST Mplus needed).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the output of two Mplus models — compareModels","text":"","code":"compareModels(   m1,   m2,   show = \"all\",   equalityMargin = c(param = 1e-04, pvalue = 1e-04),   compare = \"unstandardized\",   sort = \"none\",   showFixed = FALSE,   showNS = TRUE,   diffTest = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the output of two Mplus models — compareModels","text":"m1 first Mplus model compared. Generated readModels. m2 second Mplus model compared. show aspects models compared. Options \"\", \"summaries\", \"equal\", \"diff\", \"pdiff\", \"unique\". See details. equalityMargin Defines discrepancy models considered equal. Different margins can specified p-value equality versus parameter equality. Defaults .0001 . compare parameter estimates compared. Options \"unstandardized\", \"stdyx.standardized\" \"stdy.standardized\", \"std.standardized\". sort sort output parameter comparisons. Options \"none\", \"type\", \"alphabetical\", \"maxDiff\". See details. showFixed Whether display fixed parameters output (identified est/se = 999.000, per Mplus convention). Default FALSE. showNS Whether display non-significant parameter estimates. Can   TRUE FALSE, numeric value (e.g., .10) defines p-value filtered non-significant. diffTest Whether compute chi-square difference test models. Assumes models nested. available MLMV, WLSMV, ULSMV estimators. Use DIFFTEST Mplus instead.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the output of two Mplus models — compareModels","text":"list containing results comparison. Elements include   summaries selected summary statistics models,   parameters listing equal differing parameters well   unique model, , diffTest = TRUE, diffTest   element chi-square difference test.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare the output of two Mplus models — compareModels","text":"Model outputs compared come readModels command. show parameter can one following, can passed vector, c(\"equal\", \"pdiff\"). show  \"\" Display available model comparison. Equivalent         c(\"summaries\", \"equal\", \"diff\", \"pdiff\", \"unique\"). \"summaries\" Print comparison model summary statistics. Compares following summary         statistics (available): c(\"Title\", \"Observations\", \"Estimator\", \"Parameters\", \"LL\",         \"AIC\", \"BIC\", \"ChiSqM_Value\", \"ChiSqM_DF\", \"CFI\", \"TLI\", \"RMSEA\", \"SRMR\", \"WRMR\") \"allsummaries\" Prints comparison summary statistics available model. May         generate lot output. \"equal\" Print parameter estimates equal models         (.e., <= equalityMargin[\"param\"]) \"diff\" Print parameter estimates different models         (.e., > equalityMargin[\"param\"]) \"pdiff\" Print parameter estimates p-values differ models         (.e., > equalityMargin[\"pvalue\"]) \"unique\" Print parameter estimates unique model.  sort parameter determines order parameter estimates displayed. following options available: sort  \"none\" sorting performed, parameters output order presented Mplus. (Default) \"type\" Sort parameters role model. groups output regression coefficient (),         factor loadings (), covariances (), . Within type, output alphabetical. \"alphabetical\" Sort parameters alphabetical order. \"maxDiff\" Sort parameter output largest differences models (high low).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare the output of two Mplus models — compareModels","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/compareModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the output of two Mplus models — compareModels","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Return confidence intervals for an mplus.model object — confint.mplus.model","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"method returning confidence mplus.model object. works directly object stored readModels : object <- readModels(\"/path//model/model.\"). Method calls confint.mplus.model. See documentation .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"","code":"# S3 method for class 'mplus.model' confint(   object,   parm,   level = 0.95,   type = c(\"un\", \"std\", \"stdy\", \"stdyx\"),   params = c(\"regression\", \"loading\", \"undirected\", \"expectation\", \"variability\", \"new\"),   ... )  # S3 method for class 'mplusObject' confint(object, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"object object class mplusObject parm Included confint() methods must include .  used currently Mplus. level numeric vector indicating level confidence interval extract. Options .95, .90, .99 Mplus provides. type character vector indicating type confidence intervals return. One “un”, “std”, “stdy”, “stdyx”. params character vector indicating type parameters extract.  combination “regression”, “loading”, “undirected”, “expectation”, “variability”, “new”.  single one can passed multiple.  default, used parameters returned. ... Additional arguments pass (currently used)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"data frame class ‘mplus.model.cis’,   case multiple group models, list class ‘mplus.model.cis’,   element list data frame class ‘mplus.model.cis’.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/confint.mplus.model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return confidence intervals for an mplus.model object — confint.mplus.model","text":"","code":"if (FALSE) { # \\dontrun{ # simple example of a model using builtin data # demonstrates use test <- mplusObject(   TITLE = \"test the MplusAutomation Package;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   OUTPUT = \"STANDARDIZED; CINTERVAL;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)  res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)  # example of the confint method on an mplus.model object # note that res$results holds the results of readModels() confint(res$results) confint(res$results, type = \"std\") confint(res$results, type = \"stdy\") confint(res$results, type = \"stdyx\", level = .99)  # there is also a method for mplusObject class confint(res) screenreg(res, cis = TRUE, single.row = TRUE)  # remove files unlink(\"mtcars.dat\") unlink(\"model1.inp\") unlink(\"model1.out\") unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/connectNodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect two nodes — connectNodes","title":"Connect two nodes — connectNodes","text":": add details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/connectNodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect two nodes — connectNodes","text":"","code":"connectNodes(dotModel, node1, node2, connectionType)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/connectNodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect two nodes — connectNodes","text":"dotModel basic model node1 starting node node2 ending node connectionType type connection add nodes 1 2","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/convert_to_filelist.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to crawl over the target location, determine if it is a file or folder, then locate all .inp files, and convert them to absolute paths — convert_to_filelist","title":"helper function to crawl over the target location, determine if it is a file or folder, then locate all .inp files, and convert them to absolute paths — convert_to_filelist","text":"helper function crawl target location, determine file folder, locate .inp files, convert absolute paths","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/convert_to_filelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to crawl over the target location, determine if it is a file or folder, then locate all .inp files, and convert them to absolute paths — convert_to_filelist","text":"","code":"convert_to_filelist(target, filefilter = NULL, recursive = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/convert_to_filelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to crawl over the target location, determine if it is a file or folder, then locate all .inp files, and convert them to absolute paths — convert_to_filelist","text":"target character vector element directory containing Mplus input files (.inp) run single .inp file run. Elements may full path, relative path, filename within working directory. filefilter optional PCRE expression filtering input files interest recursive TRUE, search .inp files subfolders elements target","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/convert_to_filelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to crawl over the target location, determine if it is a file or folder, then locate all .inp files, and convert them to absolute paths — convert_to_filelist","text":"vector .inp file locaitons","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create syntax for a batch of mixture models — createMixtures","title":"Create syntax for a batch of mixture models — createMixtures","text":"Dynamically creates syntax batch mixture models, intelligent defaults. function wrapper around mplusObject mplusModeler, respective arguments functions can passed using .... instance, passing argument run = 1L means models evaluated returned.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create syntax for a batch of mixture models — createMixtures","text":"","code":"createMixtures(   classes = 1L,   filename_stem = NULL,   model_overall = NULL,   model_class_specific = NULL,   rdata = NULL,   usevariables = NULL,   OUTPUT = \"TECH11 TECH14;\",   SAVEDATA = \"FILE IS {filename_stem}_{C}.dat;  SAVE = cprobabilities;\",   quiet = TRUE,   ... )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create syntax for a batch of mixture models — createMixtures","text":"classes vector integers, indicating class solutions generate. Defaults 1L. E.g., classes = 1:6, classes = c(1:4, 6:8). filename_stem Character. stem automatically generated filenames syntax data files. model_overall Character. Mplus syntax overall model (across classes). model_class_specific Character vector. Mplus syntax class-specific model(s) one categorical latent variables. element model_class_specific used class-specific syntax different categorical latent variable. allows one easily specify latent transition analyses (see second example). character string “{C}” substituted correct class number, example set unique parameter labels class, specify equality constraints. rdata Data.frame. R dataset used model. usevariables Character vector, specifying names variables rdata object included Mplus data file model. OUTPUT Character. Syntax Mplus' OUTPUT option. Highly recommended determining appropriate number latent classes. TECH11 required obtain VLMR-test; TECH14 required BLR-test. SAVEDATA Character. Syntax Mplus' savedata option. Highly recommended conducting mixture models. default option often adequate. quiet optional. TRUE, show status messages console. ... Additional arguments, passed mplusObject, syntax Mplus options.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create syntax for a batch of mixture models — createMixtures","text":"None, unless argument run = 1L specified. case, list elements class mplusObject returned. Otherwise, function used side effects (generating syntax).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create syntax for a batch of mixture models — createMixtures","text":"arguments model_class_specific SAVEDATA, character string “{C}” substituted correct class number. character string “{filename_stem}” substituted filename stem, example, name savedata line input files. arguments mplusObject, double space (“  ”) replaced newline character. can used obtain nicely formatted Mplus syntax.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create syntax for a batch of mixture models — createMixtures","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createMixtures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create syntax for a batch of mixture models — createMixtures","text":"","code":"if (FALSE) { # \\dontrun{ createMixtures(classes = 1:3, filename_stem = \"iris\", rdata = iris) } # } if (FALSE) { # \\dontrun{ mydat <- read.csv( system.file(\"extdata\", \"ex8.13.csv\", package = \"MplusAutomation\")) createMixtures( classes = 2, filename_stem = \"dating\", model_overall = \"c2 ON c1;\", model_class_specific = c( \"[u11$1] (a{C});  [u12$1] (b{C});  [u13$1] (c{C});  [u14$1] (d{C});  [u15$1] (e{C});\", \"[u21$1] (a{C});  [u22$1] (b{C});  [u23$1] (c{C});  [u24$1] (d{C});  [u25$1] (e{C});\" ), rdata = mydat, ANALYSIS = \"PROCESSORS IS 2;  LRTSTARTS (0 0 40 20);  PARAMETERIZATION = PROBABILITY;\", VARIABLE = \"CATEGORICAL = u11-u15 u21-u25;\" ) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Mplus Input Files from Template — createModels","title":"Create Mplus Input Files from Template — createModels","text":"createModels function processes single Mplus template file creates group related model input files. Definitions examples template language provided MplusAutomation vignette duplicated moment. See documentation: vignette(\"Vignette\", package=\"MplusAutomation\")","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Mplus Input Files from Template — createModels","text":"","code":"createModels(templatefile)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Mplus Input Files from Template — createModels","text":"templatefile filename (absolute relative path) Mplus template file processed. Example “C:/MplusTemplate.txt”","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Mplus Input Files from Template — createModels","text":"value returned function. solely used process Mplus template file.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Mplus Input Files from Template — createModels","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Mplus Input Files from Template — createModels","text":"","code":"if (FALSE) { # \\dontrun{   createModels(\"L2 Multimodel Template No iter.txt\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Mplus input text for an mplusObject — createSyntax","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"function takes object class mplusObject creates Mplus input text corresponding , including data link variable names.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"","code":"createSyntax(object, filename, check = TRUE, add = FALSE, imputed = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"object object class mplusObject filename name data file character vector check logical indicating whether run parseMplus created input file. Checks errors like lines long, missing semi-colons gives notes. add logical passed parseMplus whether add semi colons line ends. Defaults FALSE. imputed logical whether data multiply imputed. Defaults FALSE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"character string containing text Mplus   input file.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createSyntax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Mplus input text for an mplusObject — createSyntax","text":"","code":"# example mplusObject example1 <- mplusObject(MODEL = \"mpg ON wt;\",   usevariables = c(\"mpg\", \"hp\"), rdata = mtcars)  # create the Mplus input text cat(createSyntax(example1, \"example1.dat\"), file=stdout(), fill=TRUE) #> All ok #> DATA: #> FILE = \"example1.dat\";  #> VARIABLE: #> NAMES = mpg hp;  #>  MISSING=.; #>   #> MODEL: #> mpg ON wt;  # update the object, then create input text cat(createSyntax(update(example1,   TITLE = ~ \"This is my title;\",   MODEL = ~ . + \"\\nmpg ON hp;\",   usevariables = c(\"mpg\", \"hp\", \"wt\")), \"example1.dat\"),   file=stdout(),   fill=TRUE) #> All ok #> TITLE: #>  This is my title; #> DATA: #> FILE = \"example1.dat\";  #> VARIABLE: #> NAMES = mpg hp wt;  #>  MISSING=.; #>   #> MODEL: #> mpg ON wt; #>   #> mpg ON hp; rm(example1)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createVarSyntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Mplus syntax for variable names — createVarSyntax","title":"Create Mplus syntax for variable names — createVarSyntax","text":"simple function designed take dataset R translate set variable names Mplus.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createVarSyntax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Mplus syntax for variable names — createVarSyntax","text":"","code":"createVarSyntax(data)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createVarSyntax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Mplus syntax for variable names — createVarSyntax","text":"data R dataset.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createVarSyntax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Mplus syntax for variable names — createVarSyntax","text":"character vector variable names Mplus","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/createVarSyntax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Mplus syntax for variable names — createVarSyntax","text":"","code":"MplusAutomation:::createVarSyntax(mtcars) #> [1] \"NAMES = mpg cyl disp hp drat wt qsec vs am gear carb; \\n\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectColumnNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Column Names — detectColumnNames","title":"Detect Column Names — detectColumnNames","text":"Helper function detect model results columns.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectColumnNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Column Names — detectColumnNames","text":"","code":"detectColumnNames(filename, modelSection, sectionType = \"model_results\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectColumnNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Column Names — detectColumnNames","text":"filename file name modelSection model section sectionType character string.  Defaults “model_results”.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectColumnNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Column Names — detectColumnNames","text":"list elements directory, filename,   absolute path.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectColumnNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Column Names — detectColumnNames","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the location/name of the Mplus command — detectMplus","title":"Detect the location/name of the Mplus command — detectMplus","text":"utility function help detect correct name/path Mplus. tries hard across operating systems find Mplus find full version Mplus find demo version Mplus.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the location/name of the Mplus command — detectMplus","text":"","code":"detectMplus()"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the location/name of the Mplus command — detectMplus","text":"character string Mplus command possibly path mplus command error found.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect the location/name of the Mplus command — detectMplus","text":"require arguments.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect the location/name of the Mplus command — detectMplus","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectMplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect the location/name of the Mplus command — detectMplus","text":"","code":"## if you have Mplus installed, uncomment and run ## this will give an error if it cannot find Mplus. ## detectMplus()"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically detect variables from an Mplus model object — detectVariables","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"function automatically detect variables used Mplus model object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"","code":"detectVariables(object, quiet = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"object Mplus model object mplusObject.#' quiet optional. TRUE, show status messages console.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"vector variables R dataset use.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/detectVariables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically detect variables from an Mplus model object — detectVariables","text":"","code":"example1 <- mplusObject(MODEL = \"mpg ON wt;\",   rdata = mtcars, autov = FALSE) example1$usevariables #> NULL MplusAutomation:::detectVariables(example1) #> [1] \"mpg\" \"wt\"   example2 <- mplusObject(MODEL = \"mpg ON wt;\",   rdata = mtcars, autov = TRUE) example2$usevariables #> [1] \"mpg\" \"wt\"  example3 <- update(example2,   MODEL = ~ . + \"mpg ON qsec; wt WITH qsec;\",   autov = TRUE) example3$usevariables #> [1] \"mpg\" \"wt\"  rm(example1, example2, example3)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dhms_to_hours.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to convert a dhms string to the number of hours for combining similar job times — dhms_to_hours","title":"helper function to convert a dhms string to the number of hours for combining similar job times — dhms_to_hours","text":"helper function convert dhms string number hours combining similar job times","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dhms_to_hours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to convert a dhms string to the number of hours for combining similar job times — dhms_to_hours","text":"","code":"dhms_to_hours(str)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dhms_to_hours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to convert a dhms string to the number of hours for combining similar job times — dhms_to_hours","text":"str string dhms format","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dhms_to_hours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to convert a dhms string to the number of hours for combining similar job times — dhms_to_hours","text":"number hours represented dhms string","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/divideIntoFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide text into fields — divideIntoFields","title":"Divide text into fields — divideIntoFields","text":"Helper function divide input section key-value pair list taken mplus2lavaan","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/divideIntoFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide text into fields — divideIntoFields","text":"","code":"divideIntoFields(section.text, required)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/divideIntoFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide text into fields — divideIntoFields","text":"section.text section text required Required sections","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/divideIntoFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide text into fields — divideIntoFields","text":"Divided sections","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/divideIntoFields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divide text into fields — divideIntoFields","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-convertData.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","title":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","text":"Primarily internal utility function, prepareMplusData.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-convertData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","text":"","code":".convertData(df, dummyCode = NULL)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-convertData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","text":"df matrix data frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-convertData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","text":"error converted   matrix data frame variables converted   numeric integer classes","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-convertData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a matrix or data frame to numeric or integer for Mplus — .convertData","text":"","code":"if (FALSE) { # \\dontrun{ df1 <- df2 <- df3 <- df4 <- mtcars  df2$cyl <- factor(df2$cyl) df2$am <- as.logical(df2$am)  df3$mpg <- as.character(df3$mpg)  df4$vs <- as.Date(df4$vs, origin = \"1989-01-01\")  df5 <- as.matrix(cars)  df6 <- matrix(c(TRUE, TRUE, FALSE, FALSE), ncol = 2)  df7 <- as.list(mtcars)   MplusAutomation:::.convertData(df1)  MplusAutomation:::.convertData(df2)  MplusAutomation:::.convertData(df3)  MplusAutomation:::.convertData(df4)  MplusAutomation:::.convertData(df5)  MplusAutomation:::.convertData(df6)  MplusAutomation:::.convertData(df7)  rm(df1, df2, df3, df4, df5, df6, df7) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"Internal Function Multinomial Regression Mplus","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"","code":".mplusMultinomial(   dv,   iv,   data,   idvar = \"\",   integration = 1000,   processors = 2,   OR = TRUE,   pairwise = TRUE,   ... )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"dv character string variable name dependent (outcome) variable. iv character vector variable name(s) independent (predictor/explanatory) variable(s). data dataset. idvar Optional. character string indicating name ID variable. currently used may used future. integration integer indicating number Monte Carlo integration points use. Defaults 1000. processors integer indicating number processors use. Passed Mplus. Defaults 2. logical value whether odds ratios returned. Defaults TRUE. pairwise logical value indicating whether pairwise tests computed. Defaults TRUE. ... Additional arguments passed mplusModeler().","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"list results Mplus model object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/dot-mplusMultinomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal Function for Multinomial Regression in Mplus — .mplusMultinomial","text":"","code":"if (FALSE) { # \\dontrun{  set.seed(1234) tmpd <- data.frame(   x1 = rnorm(200),   x2 = rnorm(200),   x3 = cut(rnorm(200),            breaks = c(-Inf, -.7, .7, Inf),            labels = c(\"a\", \"b\", \"c\"))) tmpd$y <- cut(rnorm(200, sd = 2) + tmpd$x1 + tmpd$x2 + I(tmpd$x3 == \"b\"),               breaks = c(-Inf, -.5, 1, Inf),               labels = c(\"L\", \"M\", \"H\"))  tmpres <- MplusAutomation:::.mplusMultinomial(   dv = \"y\",   iv = c(\"x1\", \"x2\"),   data = tmpd,   pairwise = TRUE) tmpres2 <- MplusAutomation:::.mplusMultinomial(   dv = \"y\",   iv = c(\"x1\", \"x2\"),   data = tmpd,   pairwise = FALSE) tmpres3 <- MplusAutomation:::.mplusMultinomial(   dv = \"y\",   iv = c(\"x1@0\", \"x2@0\"),   data = tmpd,   pairwise = FALSE)  } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/evaluateConditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Conditional — evaluateConditional","title":"Evaluate Conditional — evaluateConditional","text":"Note thie point comparator must number (another variable).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/evaluateConditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Conditional — evaluateConditional","text":"","code":"evaluateConditional(tag, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/evaluateConditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Conditional — evaluateConditional","text":"tag tag initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/evaluateConditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Conditional — evaluateConditional","text":"boolean value indicating whether conditional true","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract function to make Mplus output work with the texreg package — extract","title":"Extract function to make Mplus output work with the texreg package — extract","text":"method extracting output format suitable texreg package.  Uses coef work.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract function to make Mplus output work with the texreg package — extract","text":"","code":"extract.mplus.model(   model,   summaries = \"none\",   cis = FALSE,   escape.latex = FALSE,   ... )  extract.mplusObject(model, summaries = \"none\", cis = FALSE, ...)  # S4 method for class 'mplus.model' extract(model, summaries = \"none\", cis = FALSE, escape.latex = FALSE, ...)  # S4 method for class 'mplusObject' extract(model, summaries = \"none\", cis = FALSE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract function to make Mplus output work with the texreg package — extract","text":"model Mplus model object.  typically comes either readModels directly, indirectly via mplusModeler.  results different classes, extract methods defined . summaries character vector summaries include. Defaults “none”. cis logical whether extract confidence intervals. escape.latex logical value whether escape dollar signs coefficient names LaTeX.  Defaults FALSE. ... Additional arguments passed coef.mplus.model.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract function to make Mplus output work with the texreg package — extract","text":"texreg object, multiple group models,   list texreg objects.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract function to make Mplus output work with the texreg package — extract","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract function to make Mplus output work with the texreg package — extract","text":"","code":"if (FALSE) { # \\dontrun{ # simple example of a model using builtin data # demonstrates use test <- mplusObject(   TITLE = \"test the MplusAutomation Package;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   OUTPUT = \"STANDARDIZED;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)  res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)  extract(res$results) # there is also a method for mplusObject class extract(res)  # load the texreg package # to use pretty printing via screenreg # uncomment to run these examples # library(texreg) # screenreg(res) # screenreg(res, type = 'stdyx')  # screenreg(res, type = 'un', params = 'regression', #   single.row=TRUE) # screenreg(res, type = 'un', params = 'regression', summaries = 'CFI', #   single.row=TRUE)  # remove files unlink(\"mtcars.dat\") unlink(\"model1.inp\") unlink(\"model1.out\") unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractAux.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Auxiliary condition means and comparisons. — extractAux","title":"Extract Auxiliary condition means and comparisons. — extractAux","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractAux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Auxiliary condition means and comparisons. — extractAux","text":"","code":"extractAux(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractAux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Auxiliary condition means and comparisons. — extractAux","text":"outfiletext character vector Mplus output file extract AUX section filename filename Mplus output file processed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractAux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Auxiliary condition means and comparisons. — extractAux","text":"data frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractClassCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Latent Class Counts — extractClassCounts","title":"Extract Latent Class Counts — extractClassCounts","text":"Function extracting counts latent classes","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractClassCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Latent Class Counts — extractClassCounts","text":"","code":"extractClassCounts(outfiletext, filename, summaries)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractClassCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Latent Class Counts — extractClassCounts","text":"outfiletext text output file filename name output file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractClassCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Latent Class Counts — extractClassCounts","text":"list","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractClassCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Latent Class Counts — extractClassCounts","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractDataSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract the SUMMARY OF DATA section from Mplus outputs — extractDataSummary","title":"Function to extract the SUMMARY OF DATA section from Mplus outputs — extractDataSummary","text":"Function extract SUMMARY DATA section Mplus outputs","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractDataSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract the SUMMARY OF DATA section from Mplus outputs — extractDataSummary","text":"","code":"extractDataSummary(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractDataSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract the SUMMARY OF DATA section from Mplus outputs — extractDataSummary","text":"outfiletext text output file filename name file containing textToScan. Used make intelligible warning messages.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractEFAparameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the model parameters from an EFA Mplus model output — extractEFAparameters","title":"Extract the model parameters from an EFA Mplus model output — extractEFAparameters","text":"Extract model parameters EFA Mplus model output","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractEFAparameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the model parameters from an EFA Mplus model output — extractEFAparameters","text":"","code":"extractEFAparameters(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractEFAparameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the model parameters from an EFA Mplus model output — extractEFAparameters","text":"outfiletext character vector Mplus output file processed filename name output file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractEFAparameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the model parameters from an EFA Mplus model output — extractEFAparameters","text":"list parsed EFA parameters","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFacScoreStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Factor Score Statistics — extractFacScoreStats","title":"Extract Factor Score Statistics — extractFacScoreStats","text":"Function extracting matrices factor scores","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFacScoreStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Factor Score Statistics — extractFacScoreStats","text":"","code":"extractFacScoreStats(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFacScoreStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Factor Score Statistics — extractFacScoreStats","text":"outfiletext text output file filename name output file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFacScoreStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Factor Score Statistics — extractFacScoreStats","text":"list","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFacScoreStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Factor Score Statistics — extractFacScoreStats","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFreeFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract free file output — extractFreeFile","title":"Extract free file output — extractFreeFile","text":"Function reading \"free\" output sequence values populates matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFreeFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract free file output — extractFreeFile","text":"","code":"extractFreeFile(filename, outfile, make_symmetric = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFreeFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract free file output — extractFreeFile","text":"filename name output file outfile output file make_symmetric logical indicating whether make matrix symmetric, defaults TRUE","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFreeFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract free file output — extractFreeFile","text":"matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractFreeFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract free file output — extractFreeFile","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Indirect Effects output — extractIndirect","title":"Extract Indirect Effects output — extractIndirect","text":"function parses unstandardized standardized indirect effects returns list composed $unstandardized $standardized. base structure list containing $overall $specific effects (data.frames)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Indirect Effects output — extractIndirect","text":"","code":"extractIndirect(outfiletext, curfile)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Indirect Effects output — extractIndirect","text":"outfiletext character vector containing indirect effects output section returned getSection curfile name current output file parsed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Indirect Effects output — extractIndirect","text":"mplus.indirect object (inherits list) containing $overall $specific","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Indirect Effects output — extractIndirect_section","title":"Extract Indirect Effects output — extractIndirect_section","text":"function parses given indirect section returns list composed $overall $specific effects","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Indirect Effects output — extractIndirect_section","text":"","code":"extractIndirect_section(indirectSection, curfile, sectionType)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Indirect Effects output — extractIndirect_section","text":"indirectSection character vector containing indirect effects specific section (e.g., stdyx) curfile name current output file parsed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractIndirect_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Indirect Effects output — extractIndirect_section","text":"mplus.indirect object (inherits list) containing $overall $specific","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractInput_1file.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and parse Mplus input file — extractInput_1file","title":"Extract and parse Mplus input file — extractInput_1file","text":"Function extract parse mplus input syntax output file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractInput_1file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and parse Mplus input file — extractInput_1file","text":"","code":"extractInput_1file(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractInput_1file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and parse Mplus input file — extractInput_1file","text":"outfiletext text output file filename filename","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractInput_1file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and parse Mplus input file — extractInput_1file","text":"parsed input file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"(DEPRECATED) Extract model modification indices. — extractModIndices","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"Extracts model modification indices MODEL MODIFICATION INDICES section one Mplus output files. target directory, .files therein parsed single list returned, list elements named output file name. Returned parameters typically include pairwise relationships variables freed, change model chi-square (M..), expected parameter change (E.P.C.).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"","code":"extractModIndices(target = getwd(), recursive = FALSE, filefilter)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"target directory containing Mplus output files (.) parse single output file parsed. May full path, relative path, filename within working directory. Defaults current working directory. Example: “C:/Users/Michael/Mplus Runs” recursive optional. TRUE, parse models nested subdirectories within target. Defaults FALSE. filefilter Perl regular expression (PCRE-compatible) specifying particular output files parsed within directory. See regex https://www.pcre.org/pcre.txt details regular expression syntax.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"target single file, data.frame   containing modification results target output file   returned. target directory, list returned,   element contains data.frame modification indices   single file, top-level elements named   corresponding output file name. basic data.frame containing   MODEL MODIFICATION INDICES section outfile. Variables include modV1 first variable pair freed according M.. operator suggested relationship modV1 modV2     (e.g., freeing covariance modV1 modV2) modV2 first variable pair freed according M.. MI decrease model chi-square specified relationship freely estimated EPC expected parameter estimate modV1 modV2 freed. Std_EPC EPC value standardized using variances continuous latent variables. StdYX_EPC EPC value standardized using variances continuous latent     variables well variances background /outcome variables.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(DEPRECATED) Extract model modification indices. — extractModIndices","text":"","code":"if (FALSE) { # \\dontrun{ ex3.14 <- extractModIndices(   \"C:/Program Files/Mplus/Mplus Examples/User's Guide Examples/ex3.14.out\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Modification Indices for One Chunk (Section) — extractModIndices_1chunk","title":"Extract Modification Indices for One Chunk (Section) — extractModIndices_1chunk","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Modification Indices for One Chunk (Section) — extractModIndices_1chunk","text":"","code":"extractModIndices_1chunk(chunk, columnNames, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Modification Indices for One Chunk (Section) — extractModIndices_1chunk","text":"chunk character vector current subsection extract mod indices columnNames character vector expected column (variable) names section filename name Mplus output file parsed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Modification Indices for One Chunk (Section) — extractModIndices_1chunk","text":"data frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1file.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Modification Indices for One File — extractModIndices_1file","title":"Extract Modification Indices for One File — extractModIndices_1file","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Modification Indices for One File — extractModIndices_1file","text":"","code":"extractModIndices_1file(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Modification Indices for One File — extractModIndices_1file","text":"outfiletext character vector Mplus output file processed filename name Mplus output file processed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModIndices_1file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Modification Indices for One File — extractModIndices_1file","text":"data frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"Extracts model parameters MODEL RESULTS section one Mplus output files. particular output file one results section (unstandardized, stdyx, stdy, /std), list returned. target directory, .files therein parsed single list returned, list elements named output file name. Returned parameters often include parameter estimate, std. err, param/s.e., two-tailed p-value.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"","code":"extractModelParameters(   target = getwd(),   recursive = FALSE,   filefilter,   dropDimensions = FALSE,   resultType )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"target directory containing Mplus output files (.) parse single output file parsed. May full path, relative path, filename within working directory. Defaults current working directory. Example: “C:/Users/Michael/Mplus Runs” recursive optional. TRUE, parse models nested subdirectories within target. Defaults FALSE. filefilter Perl regular expression (PCRE-compatible) specifying particular output files parsed within directory. See regex https://www.pcre.org/pcre.txt details regular expression syntax. dropDimensions Relevant multi-file parsing. TRUE, one output section (usually unstandardized) present files parsed list, eliminate second-level list (contains elements output section). result elements returned list data.frame objects relevant parameters. resultType N.B.: parameter deprecated removed future version. new default extract results present return list (see details). resultType specified results section extract. raw, unstandardized estimates returned. “stdyx”, “stdy”, “std” options, extract different standardized solutions. See Mplus User's Guide additional details differences standardizations.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"target single file, list containing unstandardized standardized results returned. standardized solutions available, list element named: unstandardized, stdyx.standardized, stdy.standardized, std.standardized. confidence intervals output using OUTPUT:CINTERVAL, list element named ci.unstandardized included. list elements data.frame containing relevant model parameters. target directory, list returned, element contains results single file, top-level elements named corresponding output file name. element within list list, elements single file case . core data.frame MODEL RESULTS section typically following structure: paramHeader header begins given parameter set. Example: \"FACTOR1 \" param particular parameter measured (within paramHeader). Example: \"ITEM1\" est Parameter estimate value. se Standard error estimate est_se Quotient est/se, representing z-test/t-test large samples pval Two-tailed p-value est_se quotient. case output Bayesian estimation (ESTIMATOR=BAYES), data.frame contain different set variables, including , well posterior_sd Posterior standard deviation estimate. lower_2.5ci Lower 2.5 percentile estimate. upper_2.5ci Upper 2.5 percentile (aka 97.5 percentile) estimate. Also note pval column Bayesian output represents one-tailed estimate. case output Monte Carlo study (MONTECARLO: MODEL POPULATION:), data.frame contain different set variables, including , well population Population parameter value. average Average parameter estimate across replications. population_sd Standard deviation parameter value population across replications. average_se Average standard error estimated parameter value across replications. mse Mean squared error. cover_95 Proportion replications whose 95% confidence interval parameter includes population value. pct_sig_coef Proportion replications two-tailed significance test parameter significant (p < .05). case confidence interval output (OUTPUT:CINTERVAL), list element ci.unstandardized contain different set variables, including , well low.5 Lower 0.5% CI estimate. low2.5 Lower 2.5% CI estimate. low5 Lower 5% CI estimate. est Parameter estimate value. up5 Upper 5% (.e., 95%) CI estimate. up2.5 Upper 2.5% (.e., 97.5%) CI estimate. .5 Upper 0.5% (.e., 99.5%) CI estimate. model contains multiple latent classes, additional variable, LatentClass, included, specifying latent class number. Also, Categorical Latent Variables section included LatentClass \"Categorical.Latent.Variables.\" model contains multiple groups, Group included. model contains two-level output (/within), BetweenWithin included.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(DEPRECATED) Extract model parameters from MODEL RESULTS section. — extractModelParameters","text":"","code":"if (FALSE) { # \\dontrun{ ex3.14 <- extractModelParameters(   \"C:/Program Files/Mplus/Mplus Examples/User's Guide Examples/ex3.14.out\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":null,"dir":"Reference","previous_headings":"","what":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"Parses group Mplus model output files (.extension) model fit statistics. time, details extracted fixed include: Filename, InputInstructions, Title, Estimator, LL, BIC, aBIC, AIC, AICC, Parameters, Observations, CFI, TLI, RMSEA_Estimate, RMSEA_90CI_LB, RMSEA_90CI_UB, RMSEA_pLT05, ChiSqM_Value, ChiSqM_DF, ChiSq_PValue, BLRT_KM1LL, BLRT_PValue, BLRT_Numdraws). infrastructure place allow user-specified selection summary statistics future versions.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"","code":"extractModelSummaries(target = getwd(), recursive = FALSE, filefilter)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"target directory containing Mplus output files (.) parse single output file parsed. Defaults current working directory. Example: \"C:/Users/Michael/Mplus Runs\" recursive optional. TRUE, parse models nested subdirectories within directory. Defaults FALSE. filefilter Perl regular expression (PCRE-compatible) specifying particular output files parsed within directory. See regex https://www.pcre.org/pcre.txt details regular expression syntax.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"Returns data.frame containing model fit statistics output files within directory. data.frame contains following variables (depends model type): Title Title model, specified TITLE: command Filename Filename output file Estimator Estimator used model (e.g., ML, MLR, WLSMV, etc.) LL Log-likelihood model BIC Bayesian Information Criterion aBIC Sample-Size-Adjusted BIC (Sclove, 1987) AIC Akaike's Information Criterion AICC Corrected AIC, based Sugiura (1978) recommended Burnham & Anderson (2002) DIC Deviance Information Criterion. Available ESTIMATOR=BAYES output. Parameters Number parameters estimated model pD Estimated number parameters Bayesian output Observations number observations model (suppport multiple-groups analysis time) CFI Confirmatory Fit Index TLI Tucker-Lewis Index RMSEA_Estimate Point estimate root mean squared error approximation RMSEA_90CI_LB Lower bound 90% Confidence Interval around RMSEA estimate. RMSEA_90CI_UB Upper bound 90% Confidence Interval around RMSEA estimate. RMSEA_pLT05 Probability RMSEA estimate falls .05, indicating good fit. ChiSqM_Value Model chi-squared value ChiSqM_DF Model chi-squared degrees freedom ChiSqM_PValue Model chi-squared p value ChiSqM_ScalingCorrection H0 Scaling Correction Factor ObsRepChiSqDiff_95CI_LB Lower bound 95% confidence interval difference observed replicated chi-square values ObsRepChiSqDiff_95CI_UB Upper bound 95% confidence interval difference observed replicated chi-square values PostPred_PValue Posterior predictive p-value PriorPostPred_PValue Prior Posterior Predictive P-Value BLRT_RequestedDraws Number requested bootstrap draws TECH14. BLRT_KM1LL Log-likelihood K-1 model (one less class) Bootstrapped Likelihood Ratio Test (TECH14). BLRT_2xLLDiff Two times log-likelihood difference models K K-1 classes (TECH14). BLRT_ParamDiff Difference number parameters models K K-1 classes (TECH14). BLRT_PValue P-value Bootstrapped Likelihood Ratio Test (TECH14) testing whether K class model significantly better K-1 BLRT_SuccessfulDraws number successful bootstrapped samples used Bootstrapped Likelihood Ratio Test SRMR Standardized root mean square residual SRMR.TYPE=TWOLEVEL output, standardized root mean square residual level SRMR.Within TYPE=TWOLEVEL output, standardized root mean square residual within level WRMR Weighted root mean square residual ChiSqBaseline_Value Baseline (unstructured) chi-squared value ChiSqBaseline_DF Baseline (unstructured) chi-squared degrees freedom ChiSqBaseline_PValue Baseline (unstructured) chi-squared p value NumFactors TYPE=EFA output, number factors T11_KM1Starts TECH11: Number initial stage random starts k-1 model T11_KM1Final TECH11: Number final stage optimizations k-1 model T11_KM1LL TECH11: Log-likelihood K-1 model used Vuong-Lo-Mendell-Rubin LRT T11_VLMR_2xLLDiff TECH11: 2 * Log-likelihood Difference K-class vs. K-1-class model Vuong-Lo-Mendell-Rubin LRT T11_VLMR_ParamDiff TECH11: Difference number parameters K-class K-1-class model Vuong-Lo-Mendell-Rubin LRT T11_VLMR_Mean TECH11: Vuong-Lo-Mendell-Rubin LRT mean T11_VLMR_SD TECH11: Vuong-Lo-Mendell-Rubin LRT standard deviation T11_VLMR_PValue TECH11: Vuong-Lo-Mendell-Rubin LRT p-value T11_LMR_Value TECH11: Lo-Mendell-Rubin Adjusted LRT value T11_LMR_PValue TECH11: Lo-Mendell-Rubin Adjusted LRT p-value","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractModelSummaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(DEPRECATED) Extract summary statistics from a single output file or from a group of Mplus models within a directory — extractModelSummaries","text":"","code":"if (FALSE) { # \\dontrun{   allExamples <- extractModelSummaries(     \"C:/Program Files/Mplus/Mplus Examples/User's Guide Examples\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Parameters for One Chunk — extractParameters_1chunk","title":"Extract Parameters for One Chunk — extractParameters_1chunk","text":"Helper function extractModelParameters. Used parse subsection output within given file given results section (e.g., stdyx section) many chunks latent classes, multiple groups, multilevel features used.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Parameters for One Chunk — extractParameters_1chunk","text":"","code":"extractParameters_1chunk(filename, thisChunk, columnNames, sectionName)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Parameters for One Chunk — extractParameters_1chunk","text":"filename name Mplus output file processed thisChunk character vector output chunk extract parameter values columnNames character vector expected column names output chunk","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Parameters for One Chunk — extractParameters_1chunk","text":"data frame (matrix?)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1file.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Parameters for One File — extractParameters_1file","title":"Extract Parameters for One File — extractParameters_1file","text":": add details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Parameters for One File — extractParameters_1file","text":"","code":"extractParameters_1file(outfiletext, filename, resultType, efa = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Parameters for One File — extractParameters_1file","text":"outfiletext character vector Mplus output file processed filename name Mplus output file processed resultType (deprecated) efa indicates whether output EFA model (requires additional processing)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Parameters for One File — extractParameters_1file","text":"list parameters","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1section.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Parameters for One Section — extractParameters_1section","title":"Extract Parameters for One Section — extractParameters_1section","text":": add details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Parameters for One Section — extractParameters_1section","text":"","code":"extractParameters_1section(filename, modelSection, sectionName)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Parameters for One Section — extractParameters_1section","text":"filename name Mplus output file processed modelSection name model output section processed sectionName name output type search (e.g., \"model_results\")","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Parameters for One Section — extractParameters_1section","text":"list parameters","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractParameters_1section.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Parameters for One Section — extractParameters_1section","text":"","code":"if (FALSE) { # \\dontrun{   #a few examples of files to parse   #mg + lc. Results in latent class pattern, not really different from   #         regular latent class matching. See Example 7.21   #mg + twolevel. Group is top, bw/wi is 2nd. See Example 9.11   #lc + twolevel. Bw/wi is top, lc is 2nd. See Example 10.1.   #               But categorical latent variables is even higher   #test cases for more complex output: 7.21, 9.7, 9.11, 10.1 } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractR3step.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract output of R3STEP procedure — extractR3step","title":"Extract output of R3STEP procedure — extractR3step","text":"Extract output R3STEP procedure","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractR3step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract output of R3STEP procedure — extractR3step","text":"","code":"extractR3step(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractR3step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract output of R3STEP procedure — extractR3step","text":"outfiletext character vector Mplus output file extract AUX section filename filename Mplus output file processed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractR3step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract output of R3STEP procedure — extractR3step","text":"list containing parsed R3STEP sections","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residual matrices — extractResiduals","title":"Extract residual matrices — extractResiduals","text":"Function extracts residual matrices including standardized ones","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residual matrices — extractResiduals","text":"","code":"extractResiduals(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residual matrices — extractResiduals","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residual matrices — extractResiduals","text":"list residual matrices","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residual matrices — extractResiduals","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals_1section.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper subfunction to extract one section of OUTPUT: RESIDUALS Can be called multiple times, as in the case of invariance testing — extractResiduals_1section","title":"Helper subfunction to extract one section of OUTPUT: RESIDUALS Can be called multiple times, as in the case of invariance testing — extractResiduals_1section","text":"Helper subfunction extract one section OUTPUT: RESIDUALS Can called multiple times, case invariance testing","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals_1section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper subfunction to extract one section of OUTPUT: RESIDUALS Can be called multiple times, as in the case of invariance testing — extractResiduals_1section","text":"","code":"extractResiduals_1section(residSection, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractResiduals_1section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper subfunction to extract one section of OUTPUT: RESIDUALS Can be called multiple times, as in the case of invariance testing — extractResiduals_1section","text":"residSection character vector containing strings residual section parsed filename Character string containing current output filename parsed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSampstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to extract the sample statistics from Mplus output Depends on OUTPUT: SAMPSTAT — extractSampstat","title":"Helper function to extract the sample statistics from Mplus output Depends on OUTPUT: SAMPSTAT — extractSampstat","text":"Helper function extract sample statistics Mplus output Depends OUTPUT: SAMPSTAT","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSampstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to extract the sample statistics from Mplus output Depends on OUTPUT: SAMPSTAT — extractSampstat","text":"","code":"extractSampstat(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSampstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to extract the sample statistics from Mplus output Depends on OUTPUT: SAMPSTAT — extractSampstat","text":"outfiletext character vector containing strings output file filename current file parsed","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1file.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the summaries from one file — extractSummaries_1file","title":"Extract the summaries from one file — extractSummaries_1file","text":"Description: function parses output file specific model details. returns list model details single output file.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the summaries from one file — extractSummaries_1file","text":"","code":"extractSummaries_1file(outfiletext, filename, input)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the summaries from one file — extractSummaries_1file","text":"outfiletext output file string form parsed. Passed extractModelSummaries. filename Name file parsed. Used case bad model, prints warning.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the summaries from one file — extractSummaries_1file","text":"list summaries","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the summaries from one file — extractSummaries_1file","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Worker function used in extractSummaries_1section — extractSummaries_1plan","title":"Worker function used in extractSummaries_1section — extractSummaries_1plan","text":"Worker function used extractSummaries_1section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worker function used in extractSummaries_1section — extractSummaries_1plan","text":"","code":"extractSummaries_1plan(   arglist,   sectionHeaders,   sectionFields,   textToParse,   filename )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Worker function used in extractSummaries_1section — extractSummaries_1plan","text":"arglist argument list sectionHeaders character vector headers section interest sectionFields list data.frames data.frame specifies fields extracted section textToParse text parse filename filename","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1plan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Worker function used in extractSummaries_1section — extractSummaries_1plan","text":"list","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1plan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Worker function used in extractSummaries_1section — extractSummaries_1plan","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1section.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary information for one section from Mplus output — extractSummaries_1section","title":"Extract summary information for one section from Mplus output — extractSummaries_1section","text":"Function extract model fit statistics section, wrapped allow multiple fit sections, EFA files. Calls extractSummaries_1plan","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary information for one section from Mplus output — extractSummaries_1section","text":"","code":"extractSummaries_1section(modelFitSection, arglist, filename, input = list())"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary information for one section from Mplus output — extractSummaries_1section","text":"modelFitSection fit information section arglist argument list filename file name","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary information for one section from Mplus output — extractSummaries_1section","text":"argument list","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractSummaries_1section.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract summary information for one section from Mplus output — extractSummaries_1section","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech1.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 1 matrix from Mplus — extractTech1","title":"Extract Technical 1 matrix from Mplus — extractTech1","text":"Function extracts Tech1 matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 1 matrix from Mplus — extractTech1","text":"","code":"extractTech1(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 1 matrix from Mplus — extractTech1","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 1 matrix from Mplus — extractTech1","text":"list class “mplus.tech1”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 1 matrix from Mplus — extractTech1","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech10.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 10 matrix from Mplus — extractTech10","title":"Extract Technical 10 matrix from Mplus — extractTech10","text":"Function extracts Tech10 matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 10 matrix from Mplus — extractTech10","text":"","code":"extractTech10(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 10 matrix from Mplus — extractTech10","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 10 matrix from Mplus — extractTech10","text":"empty list","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 10 matrix from Mplus — extractTech10","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech12.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 12 from Mplus — extractTech12","title":"Extract Technical 12 from Mplus — extractTech12","text":"TECH12 option used conjunction TYPE=MIXTURE request residuals observed versus model estimated means, variances, covariances, univariate skewness, univariate kurtosis. observed values come total sample. estimated values computed mixture across latent classes.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 12 from Mplus — extractTech12","text":"","code":"extractTech12(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech12.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 12 from Mplus — extractTech12","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech12.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 12 from Mplus — extractTech12","text":"list class “mplus.tech12”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech12.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 12 from Mplus — extractTech12","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech15.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 15 from Mplus — extractTech15","title":"Extract Technical 15 from Mplus — extractTech15","text":"TECH15 option used conjunction TYPE=MIXTURE request conditional probabilities latent class variables.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech15.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 15 from Mplus — extractTech15","text":"","code":"extractTech15(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech15.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 15 from Mplus — extractTech15","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech15.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 15 from Mplus — extractTech15","text":"list class “mplus.tech15”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech15.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 15 from Mplus — extractTech15","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech3.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 3 matrix from Mplus — extractTech3","title":"Extract Technical 3 matrix from Mplus — extractTech3","text":"Function extracts Tech3 matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 3 matrix from Mplus — extractTech3","text":"","code":"extractTech3(outfiletext, savedata_info, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 3 matrix from Mplus — extractTech3","text":"outfiletext text output file savedata_info Information saved data filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 3 matrix from Mplus — extractTech3","text":"list class “mplus.tech3”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 3 matrix from Mplus — extractTech3","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech4.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 4 matrix from Mplus — extractTech4","title":"Extract Technical 4 matrix from Mplus — extractTech4","text":"Function extracts Tech4 matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 4 matrix from Mplus — extractTech4","text":"","code":"extractTech4(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 4 matrix from Mplus — extractTech4","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 4 matrix from Mplus — extractTech4","text":"list class “mplus.tech4”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 4 matrix from Mplus — extractTech4","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech7.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 7 from Mplus — extractTech7","title":"Extract Technical 7 from Mplus — extractTech7","text":"TECH7 option used conjunction TYPE=MIXTURE request sample statistics class using raw data weighted estimated posterior probabilities class.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 7 from Mplus — extractTech7","text":"","code":"extractTech7(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech7.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 7 from Mplus — extractTech7","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech7.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 7 from Mplus — extractTech7","text":"list class “mplus.tech7”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 7 from Mplus — extractTech7","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech8.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 8 from Mplus — extractTech8","title":"Extract Technical 8 from Mplus — extractTech8","text":"TECH8 option used print optimization history model. also prints potential scale reduction Bayesian models.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 8 from Mplus — extractTech8","text":"","code":"extractTech8(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 8 from Mplus — extractTech8","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 8 from Mplus — extractTech8","text":"list class “mplus.tech8”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 8 from Mplus — extractTech8","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech9.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Technical 9 matrix from Mplus — extractTech9","title":"Extract Technical 9 matrix from Mplus — extractTech9","text":"Function extracts Tech9 matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech9.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Technical 9 matrix from Mplus — extractTech9","text":"","code":"extractTech9(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech9.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Technical 9 matrix from Mplus — extractTech9","text":"outfiletext text output file filename name file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech9.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Technical 9 matrix from Mplus — extractTech9","text":"list class “mplus.tech9”","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractTech9.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Technical 9 matrix from Mplus — extractTech9","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","title":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","text":"Extract values Mplus output internal function used extractSummaries_1file extract parameters output file using regular expressions.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","text":"","code":"extractValue(pattern, textToScan, filename, type = \"int\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","text":"pattern exact text matched outfile identifies parameter interest textToScan chunk Mplus output parsed, passed vector character strings (scan command). filename name file containing textToScan. Used make intelligible warning messages. type data type parameter, determines regexp used. Currently can “int”, “dec”, “str”, “calc”. Defaults “int”.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","text":"string numeric vector","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values from Mplus output An internal function used by extractSummaries_1file to extract parameters from the output file using regular expressions. — extractValue","text":"","code":"#make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractWarningsErrors_1file.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","title":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","text":"Helper function","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractWarningsErrors_1file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","text":"","code":"extractWarningsErrors_1file(outfiletext, filename, input)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractWarningsErrors_1file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","text":"outfiletext text output file filename filename input input","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractWarningsErrors_1file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","text":"list two elements errors Mplus Errors warnings Mplus Warnings","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/extractWarningsErrors_1file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract warnings and errors from 1 mplus file — extractWarningsErrors_1file","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/filter_inp_filelist.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to filter a set of Mplus input files based on whether the corresponding .out file already exists — filter_inp_filelist","title":"helper function to filter a set of Mplus input files based on whether the corresponding .out file already exists — filter_inp_filelist","text":"helper function filter set Mplus input files based whether corresponding .file already exists","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/filter_inp_filelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to filter a set of Mplus input files based on whether the corresponding .out file already exists — filter_inp_filelist","text":"","code":"filter_inp_filelist(inp_files, replaceOutfile = \"always\", quiet = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/filter_inp_filelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to filter a set of Mplus input files based on whether the corresponding .out file already exists — filter_inp_filelist","text":"inp_files vector input file locations check corresponding .files replaceOutfile optional. Currently supports three settings: “always”, runs models, regardless whether output file model exists; “never”, run model existing output file; “modifiedDate”, runs model modified date input file recent output file modified date (implying updates model). quiet whether print text indicating files skipped","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/finalizeInitCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize Init Collection — finalizeInitCollection","title":"Finalize Init Collection — finalizeInitCollection","text":"function handle initTags still contain tags initCollection finalized, process deferred body tags notion substitutions handled inefficient manner – using lots regular expression parsing, using matched tags data.frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/finalizeInitCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize Init Collection — finalizeInitCollection","text":"","code":"finalizeInitCollection(initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/finalizeInitCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize Init Collection — finalizeInitCollection","text":"initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/finalizeInitCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finalize Init Collection — finalizeInitCollection","text":"Finalized initCollection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/finalizeInitCollection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finalize Init Collection — finalizeInitCollection","text":"need handle simple array tags iterators always integers foreach conditional relevant iterate init tags tags left , init collection already tags substituted replaceInitTags .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Friendly Regular Expression — friendlyGregexpr","title":"Friendly Regular Expression — friendlyGregexpr","text":"Creates data frame documenting start end tags.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Friendly Regular Expression — friendlyGregexpr","text":"","code":"friendlyGregexpr(pattern, charvector, perl = TRUE, include_tag = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Friendly Regular Expression — friendlyGregexpr","text":"pattern pattern search charvector Character vector perl logical whether use perl based regular expressions.  Defaults TRUE. include_tag TRUE, return match character string. default, setting `FALSE` bit faster","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Friendly Regular Expression — friendlyGregexpr","text":"data.frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Friendly Regular Expression — friendlyGregexpr","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/friendlyGregexpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Friendly Regular Expression — friendlyGregexpr","text":"","code":"if (FALSE) { # \\dontrun{   friendlyGregexpr(\"(BY|WITH|ON)\",      c(\"POS_WI BY\", \"X WITH Y WITH Z\")   ) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getInitTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Initial Tags — getInitTags","title":"Get Initial Tags — getInitTags","text":"internal function","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getInitTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Initial Tags — getInitTags","text":"","code":"getInitTags(initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getInitTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Initial Tags — getInitTags","text":"initCollection list?","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getInitTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Initial Tags — getInitTags","text":"initMatches","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getMultilineSection.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a multiline section from Mplus output — getMultilineSection","title":"Extract a multiline section from Mplus output — getMultilineSection","text":"New approach multiline section: retain spaces look next line identical indentation.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getMultilineSection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a multiline section from Mplus output — getMultilineSection","text":"","code":"getMultilineSection(   header,   outfiletext,   filename,   allowMultiple = FALSE,   allowSpace = TRUE,   ignore.case = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getMultilineSection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a multiline section from Mplus output — getMultilineSection","text":"header Header section outfiletext Output file text filename name file allowMultiple Logical indicating whether allow multiple sections. Defaults FALSE. allowSpace Logical indicating whether allow spaces. Defaults TRUE. ignore.case Logical whether ignore case.  Defaults FALSE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getMultilineSection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a multiline section from Mplus output — getMultilineSection","text":"list sections","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getMultilineSection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a multiline section from Mplus output — getMultilineSection","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getOutFileList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Output File List — getOutFileList","title":"Get Output File List — getOutFileList","text":"helper function used extractModelSummaries extractModelParameters. determines whether target single file directory. directory, .files returned (perhaps recursively) also permits files filtered using certain regular expression.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getOutFileList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Output File List — getOutFileList","text":"","code":"getOutFileList(target, recursive = FALSE, filefilter, pathfilter)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getOutFileList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Output File List — getOutFileList","text":"target target file directory recursive logical value whether search recursively. Defaults FALSE. filefilter PCRE regular expression passed grep used filter output files based file names pathfilter PCRE regular expression passed grep used filter output files based absolute paths","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getOutFileList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Output File List — getOutFileList","text":"character vector output files","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"function reads BPARAMETERS output file Mplus SAVEDATA BPARAMETERS command returns R data.frame object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"","code":"getSavedata_Bparams(outfile, discardBurnin = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"outfile Required. name Mplus output file read. Can absolute relative path. outfile relative path just filename, assumed file resides working directory getwd(). discardBurnin Optional. Whether discard burn-phase MCMC chain (.e., first half).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"list containing draws MCMC chains Bayesian model uses SAVEDATA BPARAMETERS command. list element corresponds single MCMC chain, specified ANALYSIS: CHAINS syntax Mplus. discardBurnin FALSE, superordinate list provided divides output terms burn-versus valid draw halves MCMC chains. documentation Mplus implements chain convergence checks MCMC draws, see : http://www.statmodel.com/download/Bayes3.pdf.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"Note outfile parameter refer Mplus output file (.extension), actual dataset generated SAVEDATA. function reads information dataset .file loads dataset accordingly.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"http://www.statmodel.com/download/Bayes3.pdf","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"Michael Hallquist, Florian Boeing-Messing","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Bparams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load the draws from the Bayesian model posterior distribution (SAVEDATA BPARAMETERS) command into an R data.frame — getSavedata_Bparams","text":"","code":"if (FALSE) { # \\dontrun{   fileInfo <- getSavedata_Data(\"C:/Program Files/Mplus/Test Output.out\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"function reads analysis dataset generated Mplus SAVEDATA command returns R data.frame object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"","code":"getSavedata_Data(outfile)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"outfile Required. name Mplus output file read. Can absolute relative path. outfile relative path just filename, assumed file resides working directory getwd().","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"data.frame containing analysis dataset generated SAVEDATA command.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"Note outfile parameter refer Mplus output file (.extension), actual dataset generated SAVEDATA. function reads information dataset .file loads dataset accordingly.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an analysis dataset from the SAVEDATA command into an R data.frame — getSavedata_Data","text":"","code":"if (FALSE) { # \\dontrun{   savedat <- getSavedata_Data(\"C:/Program Files/Mplus/Test Output.out\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"function reads SAVEDATA INFORMATION section Mplus output file used SAVEDATA command, returns list filename, variable names, variable formats, variable widths SAVEDATA file. present, function also parses information Bayesian Parameters (BPARAMETERS) file.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"","code":"getSavedata_Fileinfo(outfile)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"outfile required. name Mplus output file read. Can absolute relative path. outfile relative path just filename, assumed file resides working directory getwd().","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"Returns list SAVEDATA file information includes: fileName name file containing analysis dataset created Mplus SAVEDATA command. fileVarNames character vector containing names variables dataset. fileVarFormats character vector containing Fortran-style formats variables dataset. fileVarWidths numeric vector containing widths variables dataset (stored fixed-width format). bayesFile name BPARAMETERS file containing draws posterior distribution created   Mplus SAVEDATA BPARAMETERS command. bayesVarNames character vector containing names variables BPARAMETERS dataset. tech3File character vector tech 3 output. tech4File character vector tech 4 output.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_Fileinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Variable Names, Formats, and Widths from data generated by the SAVEDATA Command — getSavedata_Fileinfo","text":"","code":"if (FALSE) { # \\dontrun{   fileInfo <- getSavedata_Fileinfo(\"C:/Program Files/Mplus/Test Output.out\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_readRawFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to load the draws from the Bayesian model posterior distribution — getSavedata_readRawFile","title":"Internal function to load the draws from the Bayesian model posterior distribution — getSavedata_readRawFile","text":"function used extractor functions read particular types saved data factor scores iterations MCMC chain.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_readRawFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to load the draws from the Bayesian model posterior distribution — getSavedata_readRawFile","text":"","code":"getSavedata_readRawFile(   outfile,   outfiletext,   format = \"fixed\",   fileName,   varNames,   varWidths,   input )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_readRawFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to load the draws from the Bayesian model posterior distribution — getSavedata_readRawFile","text":"outfile Mplus output file used. outfiletext contents Mplus output file format character string indicating format. Defaults “fixed”. fileName name file varNames names variables extract, comes fileInfo varWidths widths variables extract, comes fileInfo input list parsed Mplus input section extracted upstream readModels","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSavedata_readRawFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to load the draws from the Bayesian model posterior distribution — getSavedata_readRawFile","text":"data frame extracted data.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an Output Section — getSection","title":"Get an Output Section — getSection","text":"Get Output Section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an Output Section — getSection","text":"","code":"getSection(sectionHeader, outfiletext, headers = \"standard\")"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an Output Section — getSection","text":"sectionHeader Header section outfiletext Output file text headers Can pass custom headers defaults standard set.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an Output Section — getSection","text":"Section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/getSection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an Output Section — getSection","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_efa_nfactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Small helper function to obtain number of factors for an EFA output section — get_efa_nfactors","title":"Small helper function to obtain number of factors for an EFA output section — get_efa_nfactors","text":"Small helper function obtain number factors EFA output section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_efa_nfactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small helper function to obtain number of factors for an EFA output section — get_efa_nfactors","text":"","code":"get_efa_nfactors(headers)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_efa_nfactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small helper function to obtain number of factors for an EFA output section — get_efa_nfactors","text":"headers vector EFA section headers parse number factors","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_efa_nfactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small helper function to obtain number of factors for an EFA output section — get_efa_nfactors","text":"vector number factors heading, matrix multilevel output","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"This function checks the status of one or more compute jobs — get_job_status","title":"This function checks the status of one or more compute jobs — get_job_status","text":"function checks status one compute jobs","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function checks the status of one or more compute jobs — get_job_status","text":"","code":"get_job_status(job_ids, scheduler = \"slurm\", quiet = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function checks the status of one or more compute jobs — get_job_status","text":"job_ids One job ids existing PBS slurm jobs, process ids local process scheduler=\"sh\". scheduler scheduler used job execution. Options: c(\"torque\", \"qsub\", \"slurm\", \"sbatch\", \"sh\", \"local\") quiet TRUE, wait_for_job print status updates jobs. FALSE, function prints status updates tracked job user knows holding progress.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function checks the status of one or more compute jobs — get_job_status","text":"vector job statuses corresponding job id","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function checks the status of one or more compute jobs — get_job_status","text":"Note scheduler argument, \"torque\" \"qsub\" ;   \"slurm\" \"sbatch\" , \"sh\" \"local\" .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function checks the status of one or more compute jobs — get_job_status","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_job_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function checks the status of one or more compute jobs — get_job_status","text":"","code":"if (FALSE) { # \\dontrun{ # example on qsub/torque cluster get_job_status(\"7968857.torque01.util.production.int.aci.ics.psu.edu\", scheduler = \"torque\")  # example of checking two jobs on slurm cluster get_job_status(c(\"24147864\", \"24147876\"), scheduler = \"slurm\")  # example of checking two jobs on local machine get_job_status(c(\"9843\", \"9844\"), scheduler = \"local\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mplus results — get_results","title":"Extract Mplus results — get_results","text":"function allows users extract elements Mplus output name different types objects returned MplusAutomation.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mplus results — get_results","text":"","code":"get_results(x, element, simplify = FALSE, ...)  get_input(x, simplify = FALSE, ...)  get_warn_err(x, simplify = FALSE, ...)  get_data_summary(x, simplify = FALSE, ...)  get_sampstat(x, simplify = FALSE, ...)  get_covariance_coverage(x, simplify = FALSE, ...)  get_summaries(x, simplify = FALSE, ...)  get_invariance_testing(x, simplify = FALSE, ...)  get_parameters(x, simplify = FALSE, ...)  get_class_counts(x, simplify = FALSE, ...)  get_indirect(x, simplify = FALSE, ...)  get_mod_indices(x, simplify = FALSE, ...)  get_residuals(x, simplify = FALSE, ...)  get_savedata(x, simplify = FALSE, ...)  get_bparameters(x, simplify = FALSE, ...)  get_tech1(x, simplify = FALSE, ...)  get_tech3(x, simplify = FALSE, ...)  get_tech4(x, simplify = FALSE, ...)  get_tech7(x, simplify = FALSE, ...)  get_tech8(x, simplify = FALSE, ...)  get_tech9(x, simplify = FALSE, ...)  get_tech10(x, simplify = FALSE, ...)  get_tech12(x, simplify = FALSE, ...)  get_tech15(x, simplify = FALSE, ...)  get_fac_score_stats(x, simplify = FALSE, ...)  get_lcCondMeans(x, simplify = FALSE, ...)  get_gh5(x, simplify = FALSE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mplus results — get_results","text":"x Object extract results. element element results extract. simplify Logical; result simplified vector, matrix higher dimensional array possible? See sapply. Defaults FALSE. ... Additional arguments passed functions.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Mplus results — get_results","text":"atomic vector matrix list length X (length n replicate). simplification occurs, output type determined highest type return values hierarchy NULL < raw < logical < integer < double < complex < character < list < expression, coercion pairlists lists.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/get_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Mplus results — get_results","text":"","code":"if (FALSE) { # \\dontrun{  test <- mplusObject(MODEL = \"mpg ON wt hp;  wt WITH hp;\", rdata = mtcars)  res <- mplusModeler(test, modelout = \"model1.inp\", run = 1L)  get_results(res, \"summaries\")  unlink(res$results$input$data$file)  unlink(\"model1.inp\")  unlink(\"model1.out\") } # } out <- get_input(res) out <- get_warn_err(res) out <- get_data_summary(res) out <- get_sampstat(res) out <- get_covariance_coverage(res) out <- get_summaries(res) out <- get_invariance_testing(res) out <- get_parameters(res) out <- get_class_counts(res) out <- get_indirect(res) out <- get_mod_indices(res) out <- get_residuals(res) out <- get_savedata(res) out <- get_bparameters(res) out <- get_tech1(res) out <- get_tech3(res) out <- get_tech4(res) out <- get_tech7(res) out <- get_tech8(res) out <- get_tech9(res) out <- get_tech10(res) out <- get_tech12(res) out <- get_tech15(res) out <- get_fac_score_stats(res) out <- get_lcCondMeans(res) out <- get_gh5(res)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/graphModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graphic model from Mplus — graphModel","title":"Create a graphic model from Mplus — graphModel","text":": add details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/graphModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graphic model from Mplus — graphModel","text":"","code":"graphModel(model)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/graphModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graphic model from Mplus — graphModel","text":"model model","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/graphModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graphic model from Mplus — graphModel","text":"dot model","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"internal utility function help testing MplusAutomation. Mplus website, many output files included, good tests. However, stored HTML files. function reads , strips HTML parts leaving just output file, writes disk returns file name, can used readModels() testing.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"","code":"htmlout(url)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"url url giving Mplus output file HTML format.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"character string filename output file written.   Always temp file temp directory.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/htmlout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in Mplus Output File from HTML on the Mplus Website — htmlout","text":"","code":"MplusAutomation:::htmlout(\"https://statmodel.com/usersguide/chap3/ex3.1.html\") #> [1] \"/tmp/RtmpNAqDyP/UserGuide6e51479eefdd.out\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/isEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a useable function argument was provided — isEmpty","title":"Check whether a useable function argument was provided — isEmpty","text":"simple utility check whether function argument missing, NULL, NAs.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/isEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a useable function argument was provided — isEmpty","text":"","code":"isEmpty(arg)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/isEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a useable function argument was provided — isEmpty","text":"arg function argument","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/isEmpty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a useable function argument was provided — isEmpty","text":"Logical vector length 1.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/isEmpty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a useable function argument was provided — isEmpty","text":"","code":"if (FALSE) { # \\dontrun{ f1 <- function(x) {   if (!isEmpty(x)) return(mean(x, na.rm = TRUE))   return(NULL) }  f1()                 #> NULL f1(x = NA)           #> NULL f1(x = NULL)         #> NULL f1(x = c(NA, 1:2))   #> 1.5 } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Bparams.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to load the draws from the Bayesian model posterior distribution — l_getSavedata_Bparams","title":"Internal function to load the draws from the Bayesian model posterior distribution — l_getSavedata_Bparams","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Bparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to load the draws from the Bayesian model posterior distribution — l_getSavedata_Bparams","text":"","code":"l_getSavedata_Bparams(outfile, outfiletext, fileInfo, discardBurnin = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Bparams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to load the draws from the Bayesian model posterior distribution — l_getSavedata_Bparams","text":"outfile Mplus output file used. outfiletext contents Mplus output file fileInfo file info discardBurnin Logical value whether discard burnin iterations . Defaults TRUE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Bparams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to load the draws from the Bayesian model posterior distribution — l_getSavedata_Bparams","text":"list class mcmc mplus.bparameters","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Fileinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","title":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","text":"function split getSaveData_Fileinfo exposed user, parsing function can used readModels","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Fileinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","text":"","code":"l_getSavedata_Fileinfo(outfile, outfiletext, summaries)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Fileinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","text":"outfile character string giving name Mplus output file. outfiletext contents output file, example read scan","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Fileinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","text":"list includes: fileName name file containing analysis dataset created Mplus SAVEDATA command. fileVarNames character vector containing names variables dataset. fileVarFormats character vector containing Fortran-style formats variables dataset. fileVarWidths numeric vector containing widths variables dataset (stored fixed-width format). bayesFile name BPARAMETERS file containing draws posterior distribution created   Mplus SAVEDATA BPARAMETERS command. bayesVarNames character vector containing names variables BPARAMETERS dataset. tech3File character vector tech 3 output. tech4File character vector tech 4 output.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/l_getSavedata_Fileinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"local function that does the work of getSaveData_Fileinfo — l_getSavedata_Fileinfo","text":"","code":"# make me!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lcademo.html","id":null,"dir":"Reference","previous_headings":"","what":"Latent Class Analysis Demonstration — lcademo","title":"Latent Class Analysis Demonstration — lcademo","text":"list containing Mplus Data, Output Files, GH5 Files demonstration using MplusAutomation latent class analysis. Generated vignette latent class analysis.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lcademo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latent Class Analysis Demonstration — lcademo","text":"","code":"lcademo"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lcademo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Latent Class Analysis Demonstration — lcademo","text":"list containing 11 elements. Data 2 Class LCA data simulated using Mplus CFA Mplus output file CFA LCA2 Mplus output file 2 class LCA LCA3 Mplus output file 3 class LCA LCA4 Mplus output file 4 class LCA LCA5 Mplus output file 5 class LCA CFAGH5 GH5 file CFA LCA2GH5 GH5 file 2 class LCA LCA3GH5 GH5 file 3 class LCA LCA4GH5 GH5 file 4 class LCA LCA5GH5 GH5 file 5 class LCA","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/local_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to get job status on local *nix-based machine — local_job_status","title":"helper function to get job status on local *nix-based machine — local_job_status","text":"helper function get job status local *nix-based machine","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/local_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to get job status on local *nix-based machine — local_job_status","text":"","code":"local_job_status(   job_ids = NULL,   user = NULL,   ps_format = \"user,pid,state,time,etime,%cpu,%mem,comm,xstat\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/local_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to get job status on local *nix-based machine — local_job_status","text":"job_ids vector job ids (process IDs) check user user owns processes (defaults current user) ps_format format string passed ps","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/local_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to get job status on local *nix-based machine — local_job_status","text":"data.table job information job id","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/long2LGMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Long data to wide latent growth mixture model — long2LGMM","title":"Long data to wide latent growth mixture model — long2LGMM","text":"function streamlines process converting long data format Mplus can use latent growth mixture models wide form.  makes use continuous time scores, time scores must supplied variables R dataset.  conversion wide form, assumed although assessments may happened continuous time, discrete number assessments (likely ismilar participants) collected.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/long2LGMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Long data to wide latent growth mixture model — long2LGMM","text":"","code":"long2LGMM(   data,   idvar,   assessmentvar,   dv,   timevars,   misstrick = TRUE,   k = 1L,   title = \"Trajectory Model\",   base = \"trajmodel_\",   run = FALSE,   processors = 1L,   starts = \"500 100\",   newdata,   cov = c(\"un\", \"independent\", \"intercept\", \"zero\"),   model )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/long2LGMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Long data to wide latent growth mixture model — long2LGMM","text":"data data frame long format (.e., multiple rows per ID). idvar character string variable name dataset ID variable. assessmentvar character string variable name dataset indicates particular assessment point timepoint. dv character string dependent variable name. timevars character vector time variables. Can single variable one.  allowing one variable, easy include linear; linear quadratic; also possible calculate splines R pass . variable names 7 characters fewer, . misstrick logical value whether set values DV time variable missing missing well.  Defaults TRUE. k integer indicating number distinct classes test. Currently must greater 0 less 10. title character string giving title model base character string providing base name model outputs, combined number classes. run logical value whether run models create data input files, run . processors integer value indicating number processors use. starts character string passed Mplus providing number random starts iterations newdata data frame new values use generating predicted trajectories class. cov character string indicating random covariance structure use model optional argument, can pass existing model, output mplusModeler().","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/long2LGMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Long data to wide latent growth mixture model — long2LGMM","text":"One valuable feature function makes possible feed continuous time scores Mplus mixture modelling.  example, continuous linear time straightforward, quadratic time models piecewise models.  Using facilities R, spline models also comparatively easy specify.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/long2LGMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Long data to wide latent growth mixture model — long2LGMM","text":"","code":"if (FALSE) { # \\dontrun{ ## Simulate Some Data from 3 classes library(MASS) set.seed(1234) allcoef <- rbind(   cbind(1, mvrnorm(n = 200,                    mu = c(0, 2, 0),                    Sigma = diag(c(.2, .1, .01)),                    empirical = TRUE)),   cbind(2, mvrnorm(n = 200,                    mu = c(-3.35, 2, 2),                    Sigma = diag(c(.2, .1, .1)),                    empirical = TRUE)),   cbind(3, mvrnorm(n = 200,                    mu = c(3.35, 2, -2),                    Sigma = diag(c(.2, .1, .1)),                    empirical = TRUE))) allcoef <- as.data.frame(allcoef) names(allcoef) <- c(\"Class\", \"I\", \"L\", \"Q\") allcoef$ID <- 1:nrow(allcoef) d <- do.call(rbind, lapply(1:nrow(allcoef), function(i) {   out <- data.frame(     ID = allcoef$ID[i],     Class = allcoef$Class[i],     Assess = 1:11,     x = sort(runif(n = 11, min = -2, max = 2)))   out$y <- rnorm(11,     mean = allcoef$I[i] + allcoef$L[i] * out$x + allcoef$Q[i] * out$x^2,     sd = .1)   return(out) }))  ## create splines library(splines) time_splines <- ns(d$x, df = 3, Boundary.knots = quantile(d$x, probs = c(.02, .98))) d$t1 <- time_splines[, 1] d$t2 <- time_splines[, 2] d$t3 <- time_splines[, 3] d$xq <- d$x^2  ## create new data to be used for predictions nd <- data.frame(ID = 1,                  x = seq(from = -2, to = 2, by = .1)) nd.splines <- with(attributes(time_splines),                    ns(nd$x, df = degree, knots = knots,                       Boundary.knots = Boundary.knots)) nd$t1 <- nd.splines[, 1] nd$t2 <- nd.splines[, 2] nd$t3 <- nd.splines[, 3] nd$xq <- nd$x^2  ## create a tuning grid of models to try ## all possible combinations are created of different time trends ## different covariance structures of the random effects ## and different number of classes tuneGrid <- expand.grid(   dv = \"y\",   timevars = list(c(\"t1\", \"t2\", \"t3\"), \"x\", c(\"x\", \"xq\")),   starts = \"2 1\",   cov = c(\"independent\", \"zero\"),   k = c(1L, 3L),   processors = 1L, run = TRUE,   misstrick = TRUE, stringsAsFactors = FALSE) tuneGrid$title <- paste0(   c(\"linear\", \"quad\", \"spline\")[sapply(tuneGrid$timevars, length)],   \"_\",   sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)),   \"_\",   tuneGrid$k) tuneGrid$base <- paste0(   c(\"linear\", \"quad\", \"spline\")[sapply(tuneGrid$timevars, length)],   \"_\",   sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)))  ## example using long2LGMM to fit one model at a time mres <- long2LGMM(         data = d,         idvar = \"ID\",         assessmentvar = \"Assess\",         dv = tuneGrid$dv[1],         timevars = tuneGrid$timevars[[1]],         misstrick = tuneGrid$misstrick[1],         k = tuneGrid$k[1],         title = paste0(tuneGrid$title[1], tuneGrid$k[1]),         base = tuneGrid$base[1],         run = tuneGrid$run[1],         processors = tuneGrid$processors[1],         starts = tuneGrid$starts[1],         newdata = nd,         cov = tuneGrid$cov[1])  rm(mres) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupSimpleTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple tag lookup — lookupSimpleTags","title":"Simple tag lookup — lookupSimpleTags","text":"purpose function set currentValue column bodyTags initTags data.frames simple tags . values replaced bottom level recursion, simple tags change iterations, can set one time.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupSimpleTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple tag lookup — lookupSimpleTags","text":"","code":"lookupSimpleTags(templateTags, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupSimpleTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple tag lookup — lookupSimpleTags","text":"templateTags template tags initCollection initial collection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupSimpleTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple tag lookup — lookupSimpleTags","text":"tag.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"lookupTech1Parameter function identifies position Mplus model matrices corresponding given parameter defined TECHNICAL 1 PARAMETER SPECIFICATION OUTPUT. goal function aid identifying problematic parameters often printed warnings errors section Mplus output.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"","code":"lookupTech1Parameter(tech1Output, paramNumber)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"tech1Output object corresponding TECH1 parameter specification readModels. paramNumber parameter number lookup","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"data.frame containing row(s) column(s) TECH1 parameter specification matching requested paramNumber.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupTech1Parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup the matrix element for a give parameter number — lookupTech1Parameter","text":"","code":"if (FALSE) { # \\dontrun{   models <- readModels(\"test1.out\")   param <- lookupTech1Parameter(models$tech1, 16) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup values — lookupValue","title":"Lookup values — lookupValue","text":": fill details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup values — lookupValue","text":"","code":"lookupValue(tag, tagType, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup values — lookupValue","text":"tag name tag want know current value tagType type tag (simple, array, etc.) tag lookup initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/lookupValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup values — lookupValue","text":"Current value","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/matrixExtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct matrix from multi-line text output — matrixExtract","title":"Reconstruct matrix from multi-line text output — matrixExtract","text":"main worker function extracting Mplus matrix output matrices spread across blocks keep within width constraints example: tech1 matrix output.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/matrixExtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct matrix from multi-line text output — matrixExtract","text":"","code":"matrixExtract(   outfiletext,   headerLine,   filename,   ignore.case = FALSE,   expect_sig = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/matrixExtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct matrix from multi-line text output — matrixExtract","text":"outfiletext text output file headerLine header line filename name output file ignore.case Whether ignore case header line expect_sig Whether track value significance TRUE/FALSE (* Mplus) attribute","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/matrixExtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct matrix from multi-line text output — matrixExtract","text":"matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/matrixExtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct matrix from multi-line text output — matrixExtract","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/minutes_to_dhms.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to convert a number of minutes into a dhms-formatted string for submission — minutes_to_dhms","title":"helper function to convert a number of minutes into a dhms-formatted string for submission — minutes_to_dhms","text":"helper function convert number minutes dhms-formatted string submission","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/minutes_to_dhms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to convert a number of minutes into a dhms-formatted string for submission — minutes_to_dhms","text":"","code":"minutes_to_dhms(x)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/minutes_to_dhms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to convert a number of minutes into a dhms-formatted string for submission — minutes_to_dhms","text":"x string charcater number minutes","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/minutes_to_dhms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to convert a number of minutes into a dhms-formatted string for submission — minutes_to_dhms","text":"dhms string representing number minutes days, hours, minutes, seconds","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table of Mplus mixture models — mixtureSummaryTable","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"Creates summary table model fit statistics relevant diagnostic information list mixture models. Default statistics reported line published guidelines (see Jung & Wickrama, 2008; Nylund et al., 2007): c(\"Title\", \"Classes\", \"Warnings\", \"AIC\", \"BIC\", \"aBIC\", \"Entropy\", \"T11_VLMR_PValue\", \"T11_LMR_PValue\", \"BLRT_PValue\", \"min_N\", \"max_N\", \"min_prob\", \"max_prob\"). table customizable using keepCols parameter, passed SummaryTable.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"","code":"mixtureSummaryTable(   modelList,   keepCols = c(\"Title\", \"Classes\", \"Warnings\", \"AIC\", \"BIC\", \"aBIC\", \"Entropy\",     \"T11_VLMR_PValue\", \"T11_LMR_PValue\", \"BLRT_PValue\", \"min_N\", \"max_N\", \"min_prob\",     \"max_prob\"),   sortBy = NULL,   ... )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"modelList list models returned extractModelSummaries function. keepCols vector character strings indicating columns/variables display summary. columns included list displayed (others excluded). default, keepCols : c(\"Title\", \"Classes\", \"Warnings\", \"AIC\", \"BIC\", \"aBIC\",\"Entropy\", \"T11_VLMR_PValue\", \"T11_LMR_PValue\", \"BLRT_PValue\", \"min_N\", \"max_N\", \"min_prob\", \"max_prob\"). sortBy Field name (character string) sort table. Typically information criterion (e.g., \"AIC\" \"BIC\") used sort table. Defaults \"AICC\". Set NULL default, table ordered increasing number classes. ... Arguments passed SummaryTable.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"object class data.frame.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"function partially wrapper around SummaryTable, enhancements summarizing mixture models.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mixtureSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table of Mplus mixture models — mixtureSummaryTable","text":"","code":"if (FALSE) { # \\dontrun{ res <- createMixtures(classes = 1:2, filename_stem = \"iris\", rdata = iris,                OUTPUT = \"tech11 tech14;\",                run = 1L) mixtureSummaryTable(res) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"Displays traceplot MCMC draws poster distribution parameter estimate Bayesian Mplus model. function requires 1) PLOT: TYPE=PLOT2; included Mplus input file, 2) gh5 file present corresponding Mplus output file (containing bayesian_data section), 3) rhdf5 package installed allow gh5 file imported.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"","code":"mplus.traceplot(mplus.model, rows = 4, cols = 4, parameters_only = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"mplus.model Mplus model extracted readModels function. rows Number rows display per plot. cols Optional. Number columns display per plot. parameters_only Optional. TRUE, unstandardized parameter estimates MCMC draws displayed (opposed standardized estimates, r-square estimates, etc.). unstandardized estimates begin \"Parameter\" Mplus gh5 output.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"value returned function.   Called side effect displaying MCMC chains traceplot.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"multi-panel plot drawn screen user prompted display next plot rows x columns estimates model.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"Trace density plots can also obtained using coda package bparameters   element mplus.model object. requires posterior draws   saved using SAVEDATA: BPARAMETERS syntax. See example .","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"Joseph Glass, Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus.traceplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the samples for each MCMC chain as a function of iterations — mplus.traceplot","text":"","code":"if (FALSE) { # \\dontrun{   myModel <- readModels(\"BayesModel_WithGH5MCMC.out\")   mplus.traceplot(myModel, rows=2, cols=3)    #alternative using the coda package   library(coda)   plot(myModel$bparameters$valid_draw) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether Mplus can be found — mplusAvailable","title":"Check whether Mplus can be found — mplusAvailable","text":"simple utility check whether Mplus can found. Returns 0 Mplus command can found system. silent = FALSE, prints message user help suggest .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether Mplus can be found — mplusAvailable","text":"","code":"mplusAvailable(silent = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether Mplus can be found — mplusAvailable","text":"silent logical whether print message . Defaults TRUE silent operation.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether Mplus can be found — mplusAvailable","text":"status finding Mplus. Per unix conventions, status 0 indicates Mplus found (0 problems) status 1 indicates Mplus found.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check whether Mplus can be found — mplusAvailable","text":"Joshua Wiley","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusAvailable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether Mplus can be found — mplusAvailable","text":"","code":"mplusAvailable(silent = TRUE) #> [1] 1 mplusAvailable(silent = FALSE) #> Mplus is either not installed or could not be found #> Try installing Mplus or if it already is installed, #> making sure it can be found by adding it to your PATH or adding a symlink #>  #> To see directories on your PATH, From a terminal, run: #>  #>   echo $PATH #>  #> then try something along these lines: #>  #>   sudo ln -s /path/to/mplus/on/your/system /directory/on/your/PATH #> [1] 1"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit GLMs in Mplus — mplusGLM","title":"Function to fit GLMs in Mplus — mplusGLM","text":"purpose function make (relatively) easy fit () generalized linear models Mplus. Fitting GLMs Mplus offers advantages using full information maximum likelihood missing data, robust estimators (default used MLR), standard errors adjusted clustering (planned; currently available via mplusGLM(). overarching aim function make GLMs easy fit Mplus R.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit GLMs in Mplus — mplusGLM","text":"","code":"mplusGLM(formula, data, idvar = \"\", ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit GLMs in Mplus — mplusGLM","text":"formula R formula class object used glm(). Note currently, basic formula accepted. fly recoding, arthimetic, fly interactions currently work. data dataset. idvar Optional. character string indicating name ID variable. currently used may used future. ... Additional arguments passed helper functions. example .mplusMultinomial().","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit GLMs in Mplus — mplusGLM","text":"list results Mplus model object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to fit GLMs in Mplus — mplusGLM","text":"Note although benefits fitting GLMs Mplus. Caution also warranted. Using full information maximum likelihood missing data requires number assumptions. may (badly) violated. mplusGLM() requires analyst check appropriate. Currently, mplusGLM() supports multinomial outcomes. outcomes planned future including binary, continuous/normal, count outcomes.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to fit GLMs in Mplus — mplusGLM","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusGLM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to fit GLMs in Mplus — mplusGLM","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(1234) tmpd <- data.frame(   x1 = rnorm(200),   x2 = rnorm(200),   x3 = cut(rnorm(200),            breaks = c(-Inf, -.7, .7, Inf),            labels = c(\"a\", \"b\", \"c\"))) tmpd$y <- cut(rnorm(200, sd = 2) + tmpd$x1 + tmpd$x2 + I(tmpd$x3 == \"b\"),               breaks = c(-Inf, -.5, 1, Inf),               labels = c(\"L\", \"M\", \"H\")) test <- mplusGLM(y ~ x1 + x2 + x3, data = tmpd) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an mplusModel object for a given model — mplusModel","title":"Create an mplusModel object for a given model — mplusModel","text":"Create mplusModel object given model","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an mplusModel object for a given model — mplusModel","text":"","code":"mplusModel(   syntax = NULL,   data = NULL,   inp_file = NULL,   read = TRUE,   Mplus_command = NULL )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an mplusModel object for a given model — mplusModel","text":"syntax character vector Mplus input syntax model data data.frame used estimating model inp_file location .inp file model read TRUE .file already exists, read contents .file using `readModels` Mplus_command location Mplus executable run. NULL, use `detectMplus()`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an mplusModel object for a given model — mplusModel","text":"`mplusModel_r6` object containing information model","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"An R6 class for a single Mplus model — mplusModel_r6","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"R6 class single Mplus model R6 class single Mplus model","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"Wrapped `mplusModel`   Note R6 class deliberately uses unlockBinding populate private fields object instantiated.   allows model outputs added relevant sections object keeping fields private.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"model_dir directory Mplus files corresponding model inp_file location Mplus .inp file model out_file location Mplus .file model dat_file location Mplus .dat (data) file model data dataset used estimating model Mplus_command location Mplus program syntax Mplus syntax model character vector input Parsed Mplus input sections (read-) warnings Mplus warnings (read-) parameters Parameter estimates (read-) summaries Model summaries/statistics (read-) savedata Data produced SAVEDATA (read-)","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"mplusModel_r6$new() mplusModel_r6$read() mplusModel_r6$write_dat() mplusModel_r6$write_inp() mplusModel_r6$submit() mplusModel_r6$run() mplusModel_r6$clone()","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"generate mplusModel_r6 object","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$new(   syntax = NULL,   data = NULL,   inp_file = NULL,   read = TRUE,   Mplus_command = NULL )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"syntax character vector Mplus input syntax model data data.frame used estimating model inp_file location .inp file model read TRUE .file already exists, read contents .file using `readModels` Mplus_command N.B.: need pass parameter users (intelligent defaults). Allows user specify name/path Mplus executable used running models. covers situations Mplus system's path, one wants test different versions Mplus program.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"read results Mplus model .file using `readModels`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$read(force = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"force `TRUE`, re-read .file even already previously loaded object","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-write-dat-","dir":"Reference","previous_headings":"","what":"Method write_dat()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"write .inp .dat files model intended location","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$write_dat(overwrite = TRUE, quiet = FALSE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"overwrite `TRUE`, overwrite existing data. Default: `TRUE`. quiet `TRUE`, produce messages outcome command (e.g., message overwriting existing data) ... additional arguments passed `prepareMplusData`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-write-inp-","dir":"Reference","previous_headings":"","what":"Method write_inp()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"write .inp .dat files model intended location","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$write_inp(overwrite = TRUE, inp_file = NULL, quiet = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"overwrite `TRUE`, overwrite existing data. Default: `TRUE`. inp_file location input file write. NULL (default), use `$inp_file` object. quiet `TRUE`, produce messages outcome command (e.g., message overwriting existing data)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-submit-","dir":"Reference","previous_headings":"","what":"Method submit()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"submit model estimation HPC using `submitModels`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$submit(replaceOutfile = \"modifiedDate\", ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"replaceOutfile Currently supports three settings: “always”, runs models, regardless whether output file model exists; “never”, run model existing output file; “modifiedDate”, runs model modified date input file recent output file modified date (implying updates model). ... additional arguments passed `submitModels`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"run model locally using `runModels`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$run(replaceOutfile = \"modifiedDate\", ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"replaceOutfile Currently supports three settings: “always”, runs models, regardless whether output file model exists; “never”, run model existing output file; “modifiedDate”, runs model modified date input file recent output file modified date (implying updates model). ... additional arguments passed `runModels`","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"objects class cloneable method.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"","code":"mplusModel_r6$clone(deep = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModel_r6.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"An R6 class for a single Mplus model — mplusModel_r6","text":"deep Whether make deep clone.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, run, and read Mplus models. — mplusModeler","title":"Create, run, and read Mplus models. — mplusModeler","text":"convenience wrapper automate many usual steps required run Mplus model. relies part functions MplusAutomation package.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, run, and read Mplus models. — mplusModeler","text":"","code":"mplusModeler(   object,   dataout,   modelout,   run = 0L,   check = FALSE,   varwarnings = TRUE,   Mplus_command = detectMplus(),   writeData = c(\"ifmissing\", \"always\", \"never\"),   hashfilename = TRUE,   killOnFail = TRUE,   quiet = TRUE,   ... )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, run, and read Mplus models. — mplusModeler","text":"object object class mplusObject dataout name file output data Mplus. missing, defaults modelout changing .inp .dat. modelout name output file model. file syntax written , becomes Mplus input file. end .inp.  missing, defaults dataout changing extension .inp. run integer indicating many models run. Defaults zero. zero, data model input files created, model run. can useful seeing function works setup done. one, basic model run. greater one, model bootstrapped run replications well basic model. check logical whether body Mplus syntax checked missing semicolons using parseMplus function. Defaults FALSE. varwarnings logical whether warnings variable length left, default, removed output file. Mplus_command optional. N.B.: need pass parameter users (intelligent defaults). Allows user specify name/path Mplus executable used running models. covers situations Mplus system's path, one wants test different versions Mplus program. writeData character vector, one ‘ifmissing’, ‘always’, ‘never’ indicating whether data files (*.dat) written disk.  passed prepareMplusData. Note previously, mplusModeler always (re)wrote data disk. However, now default write data disk missing (.e., ‘ifmissing’).  See details information. hashfilename logical whether add hash raw data data file name.  Defaults TRUE mplusModeler.  Note behavior change previous versions differs prepareMplusData maintains old behavior default FALSE. killOnFail logical whether kill mplus processes failure. Passed control behavior runModels. Defaults TRUE. quiet optional. TRUE, show status messages console. ... additional arguments passed prepareMplusData function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, run, and read Mplus models. — mplusModeler","text":"Mplus model object, results.   run = 1, returns invisible list results run   Mplus model (see readModels   MplusAutomation package). run = 0, function returns list   two elements, ‘model’ ‘boot’ NULL.   run >= 1,returns list two elements, ‘model’ ‘boot’   containing regular Mplus model output boot object, respectively.   cases, Mplus data file input files created.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create, run, and read Mplus models. — mplusModeler","text":"Combined functions MplusAutomation package, function designed make easy fit Mplus models R ease many usual frustrations Mplus. example, Mplus specific formats accepts data , also little data management facilities. Using R data management easy. function designed make using data R Mplus models easy. also common want fit many different models slight variants. can tedius Mplus, using R can create one basic set input, store vector, just modify (e.g., using regular expressions) pass Mplus. can even use loops *apply constructs fit sort model little variants. writeData argument new can used reduce overhead repeatedly writing data R disk.  using ‘always’ option, mplusModeler behaves , always writing data R disk.  remains default prepareMplusData function avoid confusion breaking old code.  However, mplusModeler, default set ‘ifmissing’.  case, R generates md5 hash data prior writing disk.  md5 hash based : (1) dimensions dataset, (2) variable names, (3) class every variable, (4) raw data first last rows. combination ensures circumstances, data changes, hash change.  hash appended specified data file name (controlled logical hashfilename argument).  Next R checks directory data normally written.  data file exists directory matches hash generated data, R use existing data file instead writing data . final option ‘never’.  option used, R write data even file matching hash found.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create, run, and read Mplus models. — mplusModeler","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusModeler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, run, and read Mplus models. — mplusModeler","text":"","code":"if (FALSE) { # \\dontrun{ # minimal example of a model using builtin data, allowing R # to automatically guess the correct variables to use test <- mplusObject(MODEL = \"mpg ON wt hp;   wt WITH hp;\", rdata = mtcars)   # estimate the model in Mplus and read results back into R  res <- mplusModeler(test, modelout = \"model1.inp\", run = 1L)   # when forcing writeData = \"always\" data gets overwritten (with a warning)  resb <- mplusModeler(test, modelout = \"model1.inp\", run = 1L,                       writeData = \"always\")   # using writeData = \"ifmissing\", the default, no data re-written  resc <- mplusModeler(test, modelout = \"model1.inp\", run = 1L)   # using writeData = \"ifmissing\", the default, data ARE written  # if data changes  test <- mplusObject(MODEL = \"mpg ON wt hp;    wt WITH hp;\", rdata = mtcars[-10, ])  resd <- mplusModeler(test, modelout = \"model1.inp\", run = 1L)   # show summary  summary(resd)   # show coefficients  coef(resd)   # what if you wanted confidence intervals  # and standardized values?  # first update to tell Mplus you want them, re-run and print  test <- update(test, OUTPUT = ~ \"CINTERVAL; STDYX;\")  resd <- mplusModeler(test, modelout = \"model1.inp\", run = 1L)  coef(resd) confint(resd)  # now standardized coef(resd, type = \"stdyx\") confint(resd, type = \"stdyx\")  # put together in one data frame if desired merge(   coef(resd, type = \"stdyx\"),   confint(resd, type = \"stdyx\"),   by = \"Label\")   # remove files  unlink(resc$results$input$data$file)  unlink(resd$results$input$data$file)  unlink(\"model1.inp\")  unlink(\"model1.out\")  # simple example of a model using builtin data # demonstrates use with a few more sections test2 <- mplusObject(   TITLE = \"test the MplusAutomation Package and mplusModeler wrapper;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)   res2 <- mplusModeler(test2, modelout = \"model2.inp\", run = 1L)   # remove files  unlink(res2$results$input$data$file)  unlink(\"model2.inp\")  unlink(\"model2.out\")   # similar example using a robust estimator for standard errors  # and showing how an existing model can be easily updated and reused  test3 <- update(test2, ANALYSIS = ~ \"ESTIMATOR = MLR;\")   res3 <- mplusModeler(test3, modelout = \"model3.inp\", run = 1L)  unlink(res3$results$input$data$file)  unlink(\"model3.inp\")  unlink(\"model3.out\")   # now use the built in bootstrapping methods  # note that these work, even when Mplus will not bootstrap  # also note how categorical variables and weights are declared  # in particular, the usevariables for Mplus must be specified  # because mroe variables are included in the data than are in the  # model. Note the R usevariables includes all variables for both  # model and weights. The same is true for clustering.  test4 <- mplusObject(    TITLE = \"test bootstrapping;\",    VARIABLE = \"      CATEGORICAL = cyl;      WEIGHT = wt;      USEVARIABLES = cyl mpg;\",    ANALYSIS = \"ESTIMATOR = MLR;\",    MODEL = \"      cyl ON mpg;\",    usevariables = c(\"mpg\", \"wt\", \"cyl\"),    rdata = mtcars)   res4 <- mplusModeler(test4, \"mtcars.dat\", modelout = \"model4.inp\", run = 10L,    hashfilename = FALSE)  # see the results  res4$results$boot   # remove files  unlink(\"mtcars.dat\")  unlink(\"model4.inp\")  unlink(\"model4.out\")  # Monte Carlo Simulation Example montecarlo <- mplusObject(  TITLE = \"Monte Carlo Example;\",  MONTECARLO = \"   NAMES ARE i1-i5;   NOBSERVATIONS = 100;   NREPS = 100;   SEED = 1234;\",  MODELPOPULATION = \"   f BY i1-i5*1;   f@1;   i1-i5*1;\",  ANALYSIS = \"   ESTIMATOR = BAYES;   PROC = 2;   fbiter = 100;\",  MODEL = \"   f BY i1-i5*.8 (l1-l5);   f@1;   i1-i5*1;\",  MODELPRIORS = \"    l1-l5 ~ N(.5 .1);\",  OUTPUT = \"TECH9;\")  fitMonteCarlo <- mplusModeler(montecarlo,   modelout = \"montecarlo.inp\",   run = 1L,   writeData = \"always\",   hashfilename = FALSE)  unlink(\"montecarlo.inp\") unlink(\"montecarlo.out\")   # Example including ID variable and extracting factor scores dat <- mtcars dat$UID <- 1:nrow(mtcars)  testIDs <- mplusObject(   TITLE = \"test the mplusModeler wrapper with IDs;\",   VARIABLE = \"IDVARIABLE = UID;\",   MODEL = \"     F BY mpg wt hp;\",   SAVEDATA = \"     FILE IS testid_fscores.dat;     SAVE IS fscores;     FORMAT IS free;\",   usevariables = c(\"UID\", \"mpg\", \"wt\", \"hp\"),   rdata = dat)   resIDs <- mplusModeler(testIDs, modelout = \"testid.inp\", run = 1L)  # view the saved data from Mplus, including factor scores # the indicator variables, and the ID variable we specified head(resIDs$results$savedata)  # merge the factor scores with the rest of the original data # merge together by the ID column dat <- merge(dat, resIDs$results$savedata[, c(\"F\", \"UID\")],   by = \"UID\")  # correlate merged factor scores against some other new variable with(dat, cor(F, qsec))     # can write multiply imputed data too # here are three \"imputed\" datasets idat <- list(   data.frame(mpg = mtcars$mpg, hp = c(100, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(110, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(120, mtcars$hp[-1])))  # if we turn on hashing in the filename the first time, # we can avoid overwriting notes the second time testobjimp <- mplusObject(MODEL = \"[mpg];\", rdata = idat, imputed = TRUE)  testimp <- mplusModeler(   testobjimp,   modelout = \"testimp.inp\",   writeData = \"ifmissing\", hashfilename=FALSE)  testimp <- mplusModeler(   testobjimp,   modelout = \"testimp.inp\",   writeData = \"ifmissing\", hashfilename=TRUE)  testimp <- mplusModeler(   testobjimp,   modelout = \"testimp.inp\",   writeData = \"ifmissing\", hashfilename=TRUE,   run = TRUE)  testobjimp2 <- mplusObject(MODEL = \"[hp];\", rdata = idat, imputed = TRUE) testimp2 <- mplusModeler(   testobjimp2,   modelout = \"testimp2.inp\",   writeData = \"ifmissing\", hashfilename=TRUE,   run = TRUE)   # remove files  unlink(resIDs$results$input$data$file)  unlink(\"testid.inp\")  unlink(\"testid.out\")  unlink(\"testid_fscores.dat\")  unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Mplus model object — mplusObject","title":"Create an Mplus model object — mplusObject","text":"function create Mplus model object R. object holds sections Mplus input file, plus extra R ones. created, model can run using functions mplusModeler updated using methods defined update function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Mplus model object — mplusObject","text":"","code":"mplusObject(   TITLE = NULL,   DATA = NULL,   VARIABLE = NULL,   DEFINE = NULL,   MONTECARLO = NULL,   MODELPOPULATION = NULL,   MODELMISSING = NULL,   ANALYSIS = NULL,   MODEL = NULL,   MODELINDIRECT = NULL,   MODELCONSTRAINT = NULL,   MODELTEST = NULL,   MODELPRIORS = NULL,   OUTPUT = NULL,   SAVEDATA = NULL,   PLOT = NULL,   usevariables = NULL,   rdata = NULL,   autov = TRUE,   imputed = FALSE,   quiet = TRUE,   ... )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Mplus model object — mplusObject","text":"TITLE character string title Mplus. DATA charater string data section Mplus (note, define filename generated automatically) VARIABLE character string variable section Mplus (note, define variable names dataset generated automatically) DEFINE character string define section Mplus (optional) MONTECARLO character string montecarlo section Mplus (optional). used, autov defaults FALSE instead usual default, TRUE, may still overwritten, desired. MODELPOPULATION character string MODEL POPULATION section Mplus (optional). MODELMISSING character string MODEL MISSING section Mplus (optional). ANALYSIS character string analysis section Mplus (optional) MODEL character string model section Mplus (optional, although typically want define model) MODELINDIRECT character string MODEL INDIRECT section Mplus (optional). MODELCONSTRAINT character string MODEL CONSTRAINT section Mplus (optional). MODELTEST character string MODEL TEST section Mplus (optional). MODELPRIORS character string MODEL PRIORS section Mplus (optional). OUTPUT character string output section Mplus (optional) SAVEDATA character string savedata section Mplus (optional) PLOT character string plot section Mplus (optional) usevariables character vector variables R dataset use model. rdata R dataset used model. autov logical (defaults TRUE) argument indicating whether R attempt guess correct variables use R dataset, usevariables left NULL. imputed logical whether data multiply imputed (list). Defaults FALSE. quiet optional. TRUE, show status messages console. ... Arguments passed mplusModeler run > 0.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Mplus model object — mplusObject","text":"list class mplusObject elements TITLE title Mplus (defined) DATA data section Mplus (defined) VARIABLE variable section Mplus (defined) DEFINE define section Mplus (defined) MONTECARLO montecarlo section Mplus (defined) MODELPOPULATION modelpopulation section Mplus (defined) MODELMISSING modelmissing section Mplus (defined) ANALYSIS analysis section Mplus (defined) MODEL model section Mplus (defined) MODELINDIRECT modelindirect section Mplus (defined) MODELCONSTRAINT modelconstraint section Mplus (defined) MODELTEST modeltest section Mplus (defined) MODELPRIORS modelpriors section Mplus (defined) OUTPUT output section Mplus (defined) SAVEDATA savedata section Mplus (defined) PLOT plot section Mplus (defined) results NULL default, can later updated include results model run. usevariables character vector variables R data set used. rdata R data set use model. imputed logical whether data multiply imputed. autov logical whether data usevariables detected automatically ","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Mplus model object — mplusObject","text":"Mplus model objects  allow base model defined, flexibly update data, change precise model, etc. section vary models, can leave . example, suppose fitting number models, cases, wish use maximum likelihood estimator, “ANALYSIS: ESTIMATOR = ML;” like standardized output, “OUTPUT: STDYX;”. Rather retype every model, can defined one Mplus model object, can simply updated different models, leaving analysis output sections untouched. also means reviewer comes back asks analyses re-run say using robust maximum likelihood estimator, change model object , re run code.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Mplus model object — mplusObject","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Mplus model object — mplusObject","text":"","code":"example1 <- mplusObject(MODEL = \"mpg ON wt;\",   usevariables = c(\"mpg\", \"hp\"), rdata = mtcars) str(example1) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" rm(example1)  # R figures out the variables automagically, with a message example2 <- mplusObject(MODEL = \"mpg ON wt;\",   rdata = mtcars, autov = TRUE) str(example2) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"wt\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" rm(example2)  # R can also try to figure out a list of variables when # variable names are hyphenated first-last variable, all variables # between the first and last one will be included example3 <- mplusObject(MODEL = \"mpg ON wt-vs;\",   rdata = mtcars, autov = TRUE) str(example3) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt-vs;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:4] \"mpg\" \"wt\" \"qsec\" \"vs\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" rm(example3)  # R warns if the first 8 characters of a (used) variable name are not unique # as they will be indistinguishable in the Mplus output example4 <- mplusObject(MODEL = \"basename_01 ON basename_02;\",   rdata = data.frame(basename_01 = 1:5, basename_02 = 5:1),   autov = TRUE) #> The following variables are not unique in the first 8 characters: #>  basename_02 rm(example4)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Mplus code for various residual covariance structures. — mplusRcov","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"function makes easy write Mplus syntax various residual covariance structure.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"","code":"mplusRcov(   x,   type = c(\"homogenous\", \"heterogenous\", \"cs\", \"toeplitz\", \"ar\", \"un\"),   r = \"rho\",   e = \"e\",   collapse = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"x input character vector variable names, ordered time type character string indicating type residual covariance structure used. Defaults ‘homogenous’. Current options include ‘homogenous’, ‘heterogenous’, ‘cs’ compound symmetric, ‘toeplitz’ banded toeplitz, ‘ar’ autoregressive, ‘un’ unstructured. r character vector base label name covariance parameters. Defaults ‘rho’. e character vector error variance variable. Used create constraints covariance parameters. Defaults ‘e’. collapse whether collapse covariance code using ‘PWITH’. Note time writing, Mplus allow 80 characters per row. Defaults FALSE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"named character vector class ‘MplusRstructure’ four elements: character string collapsing sections. Variances character string containing variances. Covariances character string containing     covariances, properly labelled allow constraints     autoregressive residual covariance structure. Constraints character string containing ‘MODEL CONSTRAINT’     section code needed parameterize residual covariance structure     autoregressive.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"homogenous residual covariance structure estimates one parameter: residual variance, \\(\\sigma^{2}_{e}\\). residual variance assumed identical variables covariances assumed zero. structure represented table. heterogenous residual covariance structure estimates n parameters, n number variables. unique residual variance estimated every variable. covariances assumed zero. structure represented table. compound symmetric residual covariance structure estimates two parameters: one residual variance , \\(\\sigma^{2}_{e}\\), one covariance. residual variance assumed identical variables covariances assumed identical. structure represented table. toeplitz residual covariance structure estimates n parameters, one every band matrix. residual variance , \\(\\sigma^{2}_{e}\\), assumed identical variables. covariances one step removed assumed identical. Likewise bands. structure represented table. autoregressive residual covariance structure two parameters: residual variance, \\(\\sigma^{2}_{e}\\) correlation adjacent time points, \\(\\rho\\). variances constrained equal time points. single correlation parameter estimated. \\(\\rho\\) correlation adjacent time points 1 2 2 3. distant relationships assumed smaller correlations, decreasing exponentially. Thus 1 3, estimate \\(\\rho^2\\). structure represented table. structural equation models generally model covariance structures, autoregressive residual structure must parameterized terms covariances. done two parts. First, function returns syntax estimate pairwise covariances, labelling parameters \\(\\rho\\), \\(\\rho^2\\), etc. constrained equal. Next, returns syntax necessary model constraints constrain different covariances, decrease exponentially correlations. done via: $$\\rho^2 = (\\frac{\\rho}{\\sigma^2_{e}})^{2}\\sigma^2_{e}$$ likewise later time points. unstructured residual covariance structure estimates \\(\\frac{n(n + 1)}{2}\\) parameters. unstructured every variance covariance freely estimated constraints. However, cases, results overparameterized model unestimable. structure represented table.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplusRcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Mplus code for various residual covariance structures. — mplusRcov","text":"","code":"# all five structures collapsing mplusRcov(letters[1:4], \"homogenous\", \"rho\", \"e\", TRUE) #> a b c d (e); #> a WITH b@0 c@0 d@0; #> b WITH c@0 d@0; #> c WITH d@0; #>  mplusRcov(letters[1:4], \"heterogenous\", \"rho\", \"e\", TRUE) #> a b c d; #> a WITH b@0 c@0 d@0; #> b WITH c@0 d@0; #> c WITH d@0; #>  mplusRcov(letters[1:4], \"cs\", \"rho\", \"e\", TRUE) #> a b c d (e); #> a b c PWITH b c d (rho); #> a b PWITH c d (rho); #> a PWITH d (rho); #>  mplusRcov(letters[1:4], \"toeplitz\", \"rho\", \"e\", TRUE) #> a b c d (e); #> a b c PWITH b c d (rho); #> a b PWITH c d (rho2); #> a PWITH d (rho3); #>  mplusRcov(letters[1:4], \"ar\", \"rho\", \"e\", TRUE) #> a b c d (e); #> a b c PWITH b c d (rho); #> a b PWITH c d (rho2); #> a PWITH d (rho3); #> MODEL CONSTRAINT:  #>   rho2 = ((rho/e)^2) * e; #>   rho3 = ((rho/e)^3) * e; #>  mplusRcov(letters[1:4], \"un\", \"rho\", \"e\", TRUE) #> a b c d; #> a WITH b c d; #> b WITH c d; #> c WITH d; #>   # all five structures without collapsing # useful for long names or many variables # where a line may cross 80 characters mplusRcov(letters[1:4], \"homogenous\", \"rho\", \"e\", FALSE) #> a b c d (e); #> a WITH b@0; #> a WITH c@0; #> a WITH d@0; #> b WITH c@0; #> b WITH d@0; #> c WITH d@0; #>  mplusRcov(letters[1:4], \"heterogenous\", \"rho\", \"e\", FALSE) #> a b c d; #> a WITH b@0; #> a WITH c@0; #> a WITH d@0; #> b WITH c@0; #> b WITH d@0; #> c WITH d@0; #>  mplusRcov(letters[1:4], \"cs\", \"rho\", \"e\", FALSE) #> a b c d (e); #> a WITH b (rho); #> b WITH c (rho); #> c WITH d (rho); #> a WITH c (rho); #> b WITH d (rho); #> a WITH d (rho); #>  mplusRcov(letters[1:4], \"toeplitz\", \"rho\", \"e\", FALSE) #> a b c d (e); #> a WITH b (rho); #> b WITH c (rho); #> c WITH d (rho); #> a WITH c (rho2); #> b WITH d (rho2); #> a WITH d (rho3); #>  mplusRcov(letters[1:4], \"ar\", \"rho\", \"e\", FALSE) #> a b c d (e); #> a WITH b (rho); #> b WITH c (rho); #> c WITH d (rho); #> a WITH c (rho2); #> b WITH d (rho2); #> a WITH d (rho3); #> MODEL CONSTRAINT:  #>   rho2 = ((rho/e)^2) * e; #>   rho3 = ((rho/e)^3) * e; #>  mplusRcov(letters[1:4], \"un\", \"rho\", \"e\", FALSE) #> a b c d; #> a WITH b; #> a WITH c; #> a WITH d; #> b WITH c; #> b WITH d; #> c WITH d; #>"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus_as.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Mplus Number to Numeric — mplus_as.numeric","title":"Convert Mplus Number to Numeric — mplus_as.numeric","text":"Helper function convert strings formatted Mplus Fortran-style scientific notation using D indicate double.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus_as.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Mplus Number to Numeric — mplus_as.numeric","text":"","code":"mplus_as.numeric(vec, expect_sig = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus_as.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Mplus Number to Numeric — mplus_as.numeric","text":"vec character vector Mplus numbers convert numeric expect_sig Whether expect significance values denoted asterisk; yields 'sig' attribute TRUE/FALSE","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus_as.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Mplus Number to Numeric — mplus_as.numeric","text":"numeric vector","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/mplus_as.numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Mplus Number to Numeric — mplus_as.numeric","text":"","code":"MplusAutomation:::mplus_as.numeric(\"3.1D2\") #> [1] 310"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters from a data frame of Mplus estimates — paramExtract","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"simple convenience function designed facilitate looking specific parameter types easily return subset data frame types . designed follow results returned readModels function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"","code":"paramExtract(   x,   params = c(\"regression\", \"loading\", \"undirected\", \"expectation\", \"variability\", \"new\") )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"x data frame (specifically type returned readModels) containing parameters. specific unstandardized data frame must column called ‘paramHeader’. params character string indicating types parameters returned. Options currently include ‘regression’, ‘loading’, ‘undirected’, ‘expectation’, ‘variability’, ‘new’ new/additional parameters. Regressions include regression one variable another. ‘loading’ include indicator variables (assumed caused underlying latent variable) variables latent growth models (|). Undirected paths currently include covariances, indicated syntax Mplus. Expectation paths unconditional conditional expectations variables.  words parameters related first moments. independent variables, means, \\(E(X)\\) conditional means intercepts, \\(E(X | f(\\theta))\\) \\(f(\\theta)\\) model, function parameters, \\(\\theta\\). Finally ‘variability’ refers variances residual variances, corresponding second moments. expectations, variances unconditional variables predicted conditioned variable model whereas residual variances conditional model. Note R uses fuzzy matching can called via shorthand, ‘r’, ‘l’, ‘u’, ‘e’, ‘v’.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"subset data frame parameters interest.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/paramExtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract parameters from a data frame of Mplus estimates — paramExtract","text":"","code":"if (FALSE) { # \\dontrun{   test <- mplusObject(     TITLE = \"test the MplusAutomation Package and my Wrapper;\",     MODEL = \"       mpg ON wt hp;       wt WITH hp;\",     usevariables = c(\"mpg\", \"wt\", \"hp\"),     rdata = mtcars)    res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)    # store just the unstandardized parameters in 'd'   d <- res$results$parameters$unstandardized   # extract just regression parameters   paramExtract(d, \"regression\")   # extract other types of parameters using shorthand   paramExtract(d, \"u\")   paramExtract(d, \"e\")   paramExtract(d, \"v\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Categorical Output — parseCatOutput","title":"Parse Categorical Output — parseCatOutput","text":"Helper function parsing output variables categories.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Categorical Output — parseCatOutput","text":"","code":"parseCatOutput(text)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Categorical Output — parseCatOutput","text":"text output parse.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Categorical Output — parseCatOutput","text":"parsed output","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse Categorical Output — parseCatOutput","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseCatOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Categorical Output — parseCatOutput","text":"","code":"\" Example: UNIVARIATE PROPORTIONS AND COUNTS FOR CATEGORICAL VARIABLES  SOP2A   Category 1    0.254      631.000   Category 2    0.425     1056.000   Category 3    0.174      432.000   Category 4    0.147      365.000  Or Item Categories in IRT Parameterization  Item Categories  U1    Category 1         0.000      0.000      0.000      1.000    Category 2        -0.247      0.045     -5.534      0.000    Category 3         0.699      0.052     13.325      0.000    Category 4        -0.743      0.057    -12.938      0.000    Category 5         0.291      0.052      5.551      0.000 \" #> [1] \"\\nExample:\\nUNIVARIATE PROPORTIONS AND COUNTS FOR CATEGORICAL VARIABLES\\n\\nSOP2A\\n  Category 1    0.254      631.000\\n  Category 2    0.425     1056.000\\n  Category 3    0.174      432.000\\n  Category 4    0.147      365.000\\n\\nOr Item Categories in IRT Parameterization\\n\\nItem Categories\\n U1\\n   Category 1         0.000      0.000      0.000      1.000\\n   Category 2        -0.247      0.045     -5.534      0.000\\n   Category 3         0.699      0.052     13.325      0.000\\n   Category 4        -0.743      0.057    -12.938      0.000\\n   Category 5         0.291      0.052      5.551      0.000\\n\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Mplus code for missing semicolons or too long lines. — parseMplus","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"function parses character string containing Mplus code checks every non blank line ends either colon semicolon. addition, checks every line less 90 characters, Mplus ignores everything 90 characters line can source enigmatic errors.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"","code":"parseMplus(x, add = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"x character string containing Mplus code. add logical indicating whether add semicolons lines . Defaults FALSE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"character vector containing input text   optionally added semicolons.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"function fairly basic moment. works simply removing blank space (spaces, tabs, etc.) line terminate colon semicolon, returns note line number.  Optionally, can add semicolons lines missing return input added semicolons. check lines long, trailing () white space removed, number characters checked.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Mplus code for missing semicolons or too long lines. — parseMplus","text":"","code":"# sample input test <- \" MODEL:   mpg ON wt hp;   wt WITH hp \" # check and return cat(parseMplus(test), file=stdout(), fill=TRUE) #> The following lines are not empty and do not end in a : or ;. #> 4:   wt WITH hp #> Rerun with parseMplus(add = TRUE) to add semicolons to all lines #>  #> MODEL: #>   mpg ON wt hp; #>   wt WITH hp #>  # add missing semicolons and return cat(parseMplus(test, TRUE), file=stdout(), fill=TRUE) #> The following lines are not empty and do not end in a : or ;. #> 4:   wt WITH hp #> added semicolons ';' to all of the above lines #>  #> MODEL: #>   mpg ON wt hp; #>   wt WITH hp; #>  # line that is too long for Mplus test <- \" MODEL:   mpg cyl disp hp drat wt qsec vs am gear PWITH cyl disp hp drat wt qsec vs am gear carb; \" cat(parseMplus(test), file=stdout()) #> All ok #>  #> MODEL: #>   mpg cyl disp hp drat wt qsec vs am gear PWITH cyl disp hp drat wt qsec vs am gear carb;"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplusSyntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","title":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","text":"Convert Mplus syntax string parsed list","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplusSyntax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","text":"","code":"parseMplusSyntax(syntax, dropSectionNames = TRUE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplusSyntax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","text":"syntax character vector containing Mplus syntax dropSectionNames Logical. TRUE, section names dropped parsed list","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplusSyntax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","text":"parsed list Mplus syntax","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseMplusSyntax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an Mplus syntax string into a parsed list — parseMplusSyntax","text":"function converts Mplus syntax string list parsed sections TITLE DATA","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses tags in the body section — parseTags","title":"Parses tags in the body section — parseTags","text":"Parses tags body section (character vector) init collection (list vars defined init section). internal function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses tags in the body section — parseTags","text":"","code":"parseTags(bodySection, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses tags in the body section — parseTags","text":"bodySection body initCollection initial collection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/parseTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses tags in the body section — parseTags","text":"list three elements, list represents location, start character, end character, tag type, etc. tag. initTags initMatches bodyTags bodyMatches bodyText bodySection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coefficients for an mplusObject — plot.mplusObject","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"method plotting coefficients mplusObject.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"","code":"# S3 method for class 'mplusObject' plot(x, y, type = c(\"stdyx\", \"un\", \"std\", \"stdy\"), ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"x object class mplusObject y currently used type character vector indicating type coefficients return. One “un”, “std”, “stdy”, “stdyx”. Defaults “stdyx”. ... Additional arguments pass (currently used)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"Nothing.  Called side effect plotting coefficients.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plot.mplusObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot coefficients for an mplusObject — plot.mplusObject","text":"","code":"if (FALSE) { # \\dontrun{ # simple example of a model using builtin data # demonstrates use test <- mplusObject(   TITLE = \"test the MplusAutomation Package;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   OUTPUT = \"STANDARDIZED;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)  res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)  # example of the coef method plot(res)  # remove files unlink(\"mtcars.dat\") unlink(\"model1.inp\") unlink(\"model1.out\") unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot growth mixture models — plotGrowthMixtures","title":"Plot growth mixture models — plotGrowthMixtures","text":"Plots latent observed trajectories list growth mixture models, specified using Mplus' '|' notation (e.g., s | ).","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot growth mixture models — plotGrowthMixtures","text":"","code":"plotGrowthMixtures(   modelList,   bw = FALSE,   rawdata = FALSE,   estimated = TRUE,   poly = FALSE,   alpha_range = c(0, 0.1),   growth_variables = NULL,   time_scale = NULL,   jitter_lines = NULL,   coefficients = \"unstandardized\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot growth mixture models — plotGrowthMixtures","text":"modelList list object Mplus models, single Mplus model. function additionally requires models growth mixture models. bw Logical. plot black white (print), color? rawdata Logical. raw data (observed trajectories) plotted background? Setting TRUE might result long plotting times. Requires including Mplus syntax 'SAVEDATA: FILE \"filename\"; SAVE = cprobabilities' Mplus input. estimated Logical. Mplus estimates growth trajectories displayed? Defaults TRUE. poly Logical. polynomial smooth lines displayed group? Defaults FALSE. set TRUE, order polynomial determined taking number observed timepoints - 1 (e.g., 3 time points results quadratic polynomial). data weighted according posterior class probabilities. Note rawdata must TRUE order obtain polynomial smooth lines, calculated raw data. alpha_range Numeric vector. minimum maximum values alpha (transparancy) raw data. Minimum 0; lower maximum values alpha can help reduce overplotting. growth_variables Character vector. Indicate names latent variables growth trajectory plot. NULL (default), latent growth variables used. Use option plot one trajectory model contains multiple latent growth trajectories. time_scale Numeric vector. case loadings growth model freely estimated, provide correct time scale (e.g., c(0, 1, 2)). jitter_lines Numeric. Indicate amount (expressed fractions standard deviation observed data) observed trajectories vertically jittered. Like alpha_range, parameter helps control overplotting.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot growth mixture models — plotGrowthMixtures","text":"object class 'ggplot'.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot growth mixture models — plotGrowthMixtures","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotGrowthMixtures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot growth mixture models — plotGrowthMixtures","text":"","code":"if (FALSE) { # \\dontrun{ mydat <- read.csv( system.file(\"extdata\", \"ex8.2.csv\", package = \"MplusAutomation\")) res <- createMixtures(classes = 1:3, filename_stem = \"ex8.2\",                       model_overall =                                      \"i s | V1@0 V2@1 V3@2 V4@3;  i s on V5;\",                       rdata = mydat,                       OUTPUT = \"tech11 tech14;\",                        usevariables = c(\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"),                       run = 1L) plotGrowthMixtures(res, estimated = TRUE, rawdata = TRUE,                     time_scale = c(0, 1, 2, 3)) plotGrowthMixtures(res, estimated = FALSE, rawdata = TRUE, poly = TRUE)  res <- createMixtures(classes = 1:3, filename_stem = \"ex8.2_free\",                       model_overall = \"i s | V1@0 V2* V3* V4@3;  i s on V5;\",                       rdata = mydat,                       OUTPUT = \"tech11 tech14;\",                       usevariables = c(\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"),                       run = 1L) plotMixtureDensities(res, variables = c(\"V1\", \"V2\", \"V3\", \"V4\")) plotGrowthMixtures(res, estimated = TRUE, rawdata = TRUE,                    bw = TRUE, time_scale = c(0, 1, 2, 3),                    alpha_range = c(0, .05))  plotGrowthMixtures(res, estimated = FALSE, rawdata = TRUE,                    poly = TRUE, bw = TRUE, time_scale = c(0, 1, 2, 3)) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot latent transition model — plotLTA","title":"Plot latent transition model — plotLTA","text":"Plots latent transition probabilities classification probabilities single latent transition model (model multiple categorical latent variables, regressed one another). Stroke thickness nodes represents proportion cases likely assigned class, wider strokes representing greater probability. Edge thickness transparency represent probability making particular transition (left right), thicker/darker edges representing greater probability.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot latent transition model — plotLTA","text":"","code":"plotLTA(   mplusModel,   node_stroke = 2,   max_edge_width = 2,   node_labels = \"variable.class\",   x_labels = \"variable\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot latent transition model — plotLTA","text":"mplusModel single Mplus model object, returned . function additionally requires model mixture model multiple categorical latent variables. node_stroke Integer. Base stroke thickness nodes. Set NULL give node stroke thickness. max_edge_width Integer. Maximum width edges. node_labels Character vector, defaults \"variable.class\", labels node name variable, number class represents. Set \"class\" display class numbers, provide named character vector names correspond original class labels, values correspond substitute values. x_labels Character vector, defaults \"variable\", labels x-axis names categorical latent variables. Set NULL remove axis labels, provide named character vector names correspond original x-axis labels, values correspond substitute values.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot latent transition model — plotLTA","text":"object class 'ggplot'.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot latent transition model — plotLTA","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotLTA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot latent transition model — plotLTA","text":"","code":"if (FALSE) { # \\dontrun{ mydat <- read.csv( system.file(\"extdata\", \"ex8.13.csv\", package = \"MplusAutomation\")) createMixtures( classes = 2, filename_stem = \"dating\", model_overall = \"c2 ON c1;\", model_class_specific = c( \"[u11$1] (a{C});  [u12$1] (b{C});  [u13$1] (c{C});  [u14$1] (d{C});  [u15$1] (e{C});\", \"[u21$1] (a{C});  [u22$1] (b{C});  [u23$1] (c{C});  [u24$1] (d{C});  [u25$1] (e{C});\" ), rdata = mydat, ANALYSIS = \"PROCESSORS IS 2;  LRTSTARTS (0 0 40 20);  PARAMETERIZATION = PROBABILITY;\", VARIABLE = \"CATEGORICAL = u11-u15 u21-u25;\" ) runModels(filefilter = \"dating\") results <- readModels(filefilter = \"dating\") plotLTA(results) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":null,"dir":"Reference","previous_headings":"","what":"Create density plots for mixture models — plotMixtureDensities","title":"Create density plots for mixture models — plotMixtureDensities","text":"Creates density plot single object class 'mplus.model', faceted plot density plots object class 'mplus.model.list'. variable, Total density plot shown, along separate density plots latent class, cases weighted posterior probability assigned class.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create density plots for mixture models — plotMixtureDensities","text":"","code":"plotMixtureDensities(   modelList,   variables = NULL,   bw = FALSE,   conditional = FALSE,   alpha = 0.2,   facet_labels = NULL )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create density plots for mixture models — plotMixtureDensities","text":"modelList list object Mplus models, single Mplus model variables variables plot. NULL, plots variables present Mplus models. bw Logical. Whether make black white plot (print) color plot. Defaults FALSE, density plots hard read black white. conditional Logical. Whether show conditional density plot (surface area divided amongst latent classes), classic density plot (surface area total density plot equal one, subdivided amongst classes). alpha Numeric (0-1). used bw conditional FALSE. Sets transparency geom_density, classes small number cases remain visible. facet_labels Named character vector, names correspond facet labels one wishes rename, values provide new names facets. example, rename variables, example 'iris' data , one specify: facet_labels = c(\"Pet_leng\" = \"Petal length\").","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create density plots for mixture models — plotMixtureDensities","text":"object class 'ggplot'.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create density plots for mixture models — plotMixtureDensities","text":"function returns warnings, indicating sum(weights) != 1. can ignored. sum \"Total\" density per variable per model equal 1, sum posterior probabilities equal 1. results normal density plot \"Total\", subdivided latent classes, proportion posterior probabilities participants assigned clases.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create density plots for mixture models — plotMixtureDensities","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtureDensities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create density plots for mixture models — plotMixtureDensities","text":"","code":"if (FALSE) { # \\dontrun{ results <- createMixtures(classes = 1:3, filename_stem = \"iris\",                           rdata = iris, run = 1L) plotMixtureDensities(results) } # } if (FALSE) { # \\dontrun{ plotMixtureDensities(results, variables = \"PETAL_LE\") } # } if (FALSE) { # \\dontrun{ plotMixtureDensities(results, bw = TRUE) } # } if (FALSE) { # \\dontrun{ plotMixtureDensities(results, bw = FALSE, conditional = TRUE) } # } if (FALSE) { # \\dontrun{ plotMixtureDensities(results[[2]], variables = \"PETAL_LE\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create latent profile plots — plotMixtures","title":"Create latent profile plots — plotMixtures","text":"Creates profile plot single object class 'mplus.model', faceted plot profile plots object class 'mplus.model.list'.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create latent profile plots — plotMixtures","text":"","code":"plotMixtures(   modelList,   variables = NULL,   coefficients = c(\"unstandardized\", \"stdyx.standardized\", \"stdy.standardized\",     \"stdy.standardized\"),   parameter = c(\"Means\", \"Intercepts\"),   ci = 0.95,   bw = FALSE,   rawdata = FALSE,   alpha_range = c(0, 0.1) )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create latent profile plots — plotMixtures","text":"modelList list Mplus mixture models, single mixture model variables character vectors names variables (included Mplus output) plotted. coefficients type coefficients plot y-axis; default 'unstandardized'. Options include: c('stdyx.standardized', 'stdy.standardized', 'std.standardized') parameter parameter plot (Mplus parameter estimate headings included output). Defaults c('Means', 'Intercepts'). ci confidence interval errorbars span? Defaults 95% confidence interval. Set NULL remove errorbars. bw Logical. plot black white (print), color? rawdata raw data plotted background? Setting TRUE might result long plotting times. Requires including Mplus syntax 'SAVEDATA: FILE \"filename\"; SAVE = cprobabilities' Mplus input. alpha_range minimum maximum values alpha (transparancy) raw data. Minimum 0; lower maximum values alpha can help reduce overplotting.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create latent profile plots — plotMixtures","text":"object class 'ggplot'.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create latent profile plots — plotMixtures","text":"Caspar J. van Lissa","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/plotMixtures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create latent profile plots — plotMixtures","text":"","code":"if (FALSE) { # \\dontrun{ res <- createMixtures(classes = 1:2, filename_stem = \"cars\",                       model_overall = \"wt ON drat;\",                       model_class_specific = \"wt;  qsec;\",                       rdata = mtcars,                       usevariables = c(\"wt\", \"qsec\", \"drat\"),                       OUTPUT = \"standardized\",                       run = 1L) plotMixtures(res, rawdata = TRUE) } # } if (FALSE) { # \\dontrun{ plotMixtures(res, variables = \"wt\") } # } if (FALSE) { # \\dontrun{ plotMixtures(res, coefficients = \"stdyx.standardized\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"prepareMplusData function converts R data.frame (list data frames), tab-delimited file (without header) used Mplus input file. corresponding Mplus syntax, including data file definition variable names, printed console optionally input file.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"","code":"prepareMplusData(   df,   filename = NULL,   inpfile = FALSE,   keepCols = NULL,   dropCols = NULL,   dummyCode = NULL,   interactive = TRUE,   overwrite = TRUE,   imputed = FALSE,   writeData = c(\"always\", \"ifmissing\", \"never\"),   hashfilename = FALSE,   quiet = TRUE,   use_relative_path = FALSE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"df R data.frame prepared Mplus filename path filename tab-delimited data file use Mplus. Example: \"C:/Mplusdata/data1.dat\" inpfile Logical value whether Mplus syntax written console input file. Defaults FALSE. TRUE, file name filename extension changed .inp.  Alternately, can character string giving file name write Mplus syntax . keepCols character vector specifying variable names within df output filename numeric vector column indices output logical vector corresponding . dropCols character vector specifying variable names within df omitted data output filename numeric vector column indices output logical vector corresponding . dummyCode optional character vector column names indicating categorical variables dataset converted dummy codes (using fastDummies package). Note one dummy code returned *level*, reference category implied. Thus, drop one dummy codes Mplus syntax denote reference category avoid multicollinearity. interactive Logical value indicating whether file names selected interactively. filename missing interative=TRUE, dialogue box pop select file console prompt non interactive context. Defaults TRUE. overwrite Logical value indicating whether data input (present) files overwritten. Defaults TRUE consistent prior behavior. FALSE file write data already exists, throw error. imputed logical whether data multiply imputed.  Defaults FALSE.  TRUE, data list, element list multiply imputed dataset. writeData character vector, one ‘always’, ‘ifmissing’, ‘never’ indicating whether data files (*.dat) written disk.  Defaults ‘always’ consistency previous behavior. See details information. hashfilename logical whether add hash raw data data file name.  Defaults FALSE consistency previous behavior feature available. quiet optional. TRUE, show status messages console. use_relative_path TRUE, include relative path DATA: FILE = syntax returned function. works well .dat file .inp file located folder, common Mplus. Default: FALSE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"Invisibly returns character vector Mplus input   syntax. Primarily called side effect creating Mplus   data files optionally input files.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"writeData argument new can used reduce overhead repeatedly writing data R disk.  using ‘always’ option, prepareMplusData behaves , always writing data R disk.  ‘ifmissing’, R generates md5 hash data prior writing disk.  md5 hash based : (1) dimensions dataset, (2) variable names, (3) class every variable, (4) raw data first last rows. combination ensures circumstances, data changes, hash change.  hash appended specified data file name (controlled logical hashfilename argument).  Next R checks directory data normally written.  data file exists directory matches hash generated data, R use existing data file instead writing data . final option ‘never’.  option used, R write data even file matching hash found.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create tab-delimited file and Mplus input syntax from R data.frame — prepareMplusData","text":"","code":"if (FALSE) { # \\dontrun{ library(foreign)  study5 <- read.spss(\"reanalysis-study-5-mt-fall-08.sav\", to.data.frame=TRUE) ASData5 <- subset(study5, select=c(\"ppnum\", paste(\"as\", 1:33, sep=\"\")))  prepareMplusData(ASData5, \"study5.dat\")   # basic example test01 <- prepareMplusData(mtcars, \"test01.dat\")    # see that syntax was stored test01  # example when there is a factor and logical tmpd <- mtcars tmpd$cyl <- factor(tmpd$cyl) tmpd$am <- as.logical(tmpd$am) prepareMplusData(tmpd, \"test_type.dat\") rm(tmpd)  # by default, if re-run, data is re-written, with a note test01b <- prepareMplusData(mtcars, \"test01.dat\")  # if we turn on hashing in the filename the first time, # we can avoid overwriting notes the second time test01c <- prepareMplusData(mtcars, \"test01c.dat\", hashfilename=TRUE)  # now that the filename was hashed in test01c, future calls do not re-write data # as long as the hash matches test01d <- prepareMplusData(mtcars, \"test01c.dat\",   writeData = \"ifmissing\", hashfilename=TRUE)  # now that the filename was hashed in test01c, future calls do not re-write data # as long as the hash matches test01db <- prepareMplusData(mtcars, \"test01d.dat\",   writeData = \"ifmissing\", hashfilename=TRUE)  # however, if the data change, then the file is re-written test01e <- prepareMplusData(iris, \"test01c.dat\",   writeData = \"ifmissing\", hashfilename=TRUE)  # tests for keeping and dropping variables prepareMplusData(mtcars, \"test02.dat\", keepCols = c(\"mpg\", \"hp\")) prepareMplusData(mtcars, \"test03.dat\", keepCols = c(1, 2)) prepareMplusData(mtcars, \"test04.dat\",   keepCols = c(TRUE, FALSE, FALSE, TRUE, FALSE,   FALSE, FALSE, FALSE, FALSE, FALSE, FALSE))  prepareMplusData(mtcars, \"test05.dat\", dropCols = c(\"mpg\", \"hp\")) prepareMplusData(mtcars, \"test06.dat\", dropCols = c(1, 2)) prepareMplusData(mtcars, \"test07.dat\",   dropCols = c(TRUE, FALSE, FALSE, TRUE, FALSE,   FALSE, FALSE, FALSE, FALSE, FALSE, FALSE))   # interactive (test08.dat) prepareMplusData(mtcars, interactive=TRUE)  # write syntax to input file, not stdout prepareMplusData(mtcars, \"test09.dat\", inpfile=TRUE)  # write syntax to alternate input file, not stdout prepareMplusData(mtcars, \"test10.dat\", inpfile=\"test10alt.inp\")  # should be error, no file prepareMplusData(mtcars, interactive=FALSE)  # new warnings if it is going to overwrite files # (the default to be consistent with prior behavior) prepareMplusData(mtcars, \"test10.dat\")  # new warnings if it is going to overwrite files # (the default to be consistent with prior behavior) prepareMplusData(mtcars, \"test11.dat\", inpfile=\"test10alt.inp\")  # new errors if files exist and overwrite=FALSE prepareMplusData(mtcars, \"test10.dat\",   inpfile=\"test10alt.inp\", overwrite=FALSE)   # can write multiply imputed data too # here are three \"imputed\" datasets idat <- list(   data.frame(mpg = mtcars$mpg, hp = c(100, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(110, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(120, mtcars$hp[-1])))  # if we turn on hashing in the filename the first time, # we can avoid overwriting notes the second time testimp1 <- prepareMplusData(idat, \"testi1.dat\",   writeData = \"ifmissing\", hashfilename=TRUE,   imputed = TRUE)  # now that the filename was hashed, future calls do not re-write data # as long as all the hashes match testimp2 <- prepareMplusData(idat, \"testi2.dat\",   writeData = \"ifmissing\", hashfilename=TRUE,   imputed = TRUE)  # in fact, the number of imputations can decrease # and they still will not be re-written testimp3 <- prepareMplusData(idat[-3], \"testi3.dat\",   writeData = \"ifmissing\", hashfilename=TRUE,   imputed = TRUE)  # however, if the data changes, then all are re-written # note that it warns for the two files that already exist # as these two are overwritten  idat2 <- list(   data.frame(mpg = mtcars$mpg, hp = c(100, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(109, mtcars$hp[-1])),   data.frame(mpg = mtcars$mpg, hp = c(120, mtcars$hp[-1]))) testimp4 <- prepareMplusData(idat2, \"testi4.dat\",   writeData = \"ifmissing\", hashfilename=TRUE,   imputed = TRUE)   } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData_Mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Mplus Data Matrix — prepareMplusData_Mat","title":"Prepare Mplus Data Matrix — prepareMplusData_Mat","text":"support writing covariance means + covariance matrix (future)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData_Mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Mplus Data Matrix — prepareMplusData_Mat","text":"","code":"prepareMplusData_Mat(covMatrix, meansMatrix, nobs)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData_Mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Mplus Data Matrix — prepareMplusData_Mat","text":"covMatrix covariance matrix meansMatrix means matrix nobs Number observations data","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/prepareMplusData_Mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Mplus Data Matrix — prepareMplusData_Mat","text":"dataset","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an Mplus Residual Structure object — print.MplusRstructure","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"method printing Mplus Residual Structure object.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"","code":"# S3 method for class 'MplusRstructure' print(x, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"x object class MplusRstructure ... Additional arguments pass (currently used)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"NULL Called side effect printing object console","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/print.MplusRstructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an Mplus Residual Structure object — print.MplusRstructure","text":"","code":"# default 'show' uses printing mplusRcov(c(\"a\", \"b\", \"c\"), type = \"ar\") #> a b c (e); #> a WITH b (rho); #> b WITH c (rho); #> a WITH c (rho2); #> MODEL CONSTRAINT:  #>   rho2 = ((rho/e)^2) * e; #>   # also if calling print explicitly print(mplusRcov(c(\"a\", \"b\", \"c\"), type = \"ar\")) #> a b c (e); #> a WITH b (rho); #> b WITH c (rho); #> a WITH c (rho2); #> MODEL CONSTRAINT:  #>   rho2 = ((rho/e)^2) * e; #>   # to see all aspects of the raw/original object str(mplusRcov(c(\"a\", \"b\", \"c\"), type = \"ar\")) #> List of 4 #>  $ all        : chr \"a b c (e);\\na WITH b (rho);\\nb WITH c (rho);\\na WITH c (rho2);\\nMODEL CONSTRAINT: \\n  rho2 = ((rho/e)^2) * e;\\n\" #>  $ Variances  : chr \"a b c (e);\" #>  $ Covariances: chr \"a WITH b (rho);\\nb WITH c (rho);\\na WITH c (rho2);\" #>  $ Constraints: chr \"MODEL CONSTRAINT: \\n  rho2 = ((rho/e)^2) * e;\\n\" #>  - attr(*, \"class\")= chr \"MplusRstructure\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processConditionalTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Conditional Tags — processConditionalTags","title":"Process Conditional Tags — processConditionalTags","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processConditionalTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Conditional Tags — processConditionalTags","text":"","code":"processConditionalTags(templateTags, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processConditionalTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Conditional Tags — processConditionalTags","text":"templateTags template tag initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processConditionalTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Conditional Tags — processConditionalTags","text":"Processed templateTags","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processInit.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the Init Section — processInit","title":"Process the Init Section — processInit","text":": add details.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the Init Section — processInit","text":"","code":"processInit(initsection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the Init Section — processInit","text":"initsection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/processInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the Init Section — processInit","text":"arglist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"Extracts information one Mplus output files, including fit statistics parameters. parse (supported) aspects Mplus output combine list object, one element per output file identified.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"","code":"readModels(   target = getwd(),   recursive = FALSE,   filefilter,   pathfilter,   what = \"all\",   quiet = TRUE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"target directory containing Mplus output files (.) parse single output file parsed. May full path, relative path, filename within working directory. Defaults current working directory. Example: \"C:/Users/Michael/Mplus Runs\" recursive optional. TRUE, parse models nested subdirectories within target. Defaults FALSE. filefilter Perl regular expression (PCRE-compatible) specifying particular output files parsed within directory based file name. See regex https://www.pcre.org/pcre.txt details regular expression syntax. pathfilter Perl regular expression (PCRE-compatible) specifying particular paths parsed within directory based absolute paths. character vector denoting aspects Mplus output extract. Defaults \"\", extract supported output sections. See details additional information. quiet whether suppress printing screen file currently processed. Defaults TRUE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"list one mplus.model per file. mplus.model object composed elements containing major output sections, detailed . target single file, top-level elements single mplus.model object, list files. Specific elements : input Mplus input syntax parsed list major section warnings Syntax estimation warnings list errors Syntax estimation errors list data_summary Output SUMMARY DATA section, including cluster sizes ICCs sampstat Sample statistics provided OUTPUT: SAMPSTAT, specified covariance_coverage Covariance coverage matrix checking missingness patterns summaries Summary statistics extractModelSummaries, structure specified function parameters Model parameters extractModelParameters, structure specified function class_counts Latent class counts proportions models include categorical latent variable indirect Output MODEL INDIRECT available output. Contains $overall $specific data.frames indirect effect section mod_indices Model modification indices extractModIndices, structure specified function residuals list containing relevant information OUTPUT: RESIDUALS savedata_info File information SAVEDATA files related output savedata SAVEDATA file R data.frame, described getSavedata_Data bparameters mcmc.list object containing draws MCMC chains Bayesian model uses   \tSAVEDATA: BPARAMETERS command tech1 list containing parameter specification starting values OUTPUT: TECH1 tech3 list containing parameter covariance correlation matrices OUTPUT: TECH3 tech4 list containing means, covariances, correlations latent variables OUTPUT: TECH4 tech7 list containing sample statistics latent class OUTPUT: TECH7 tech8 list containing optimization history model. Currently supports potential scale reduction BAYES. OUTPUT: TECH8 tech9 list containing warnings/errors replication runs MONTECARLO analyses OUTPUT: TECH9 tech10 list containing model fit information OUTPUT: TECH10 tech12 list containing observed versus estimated sample statistics TYPE=MIXTURE analyses OUTPUT: TECH12 fac_score_stats factor score mean, correlation, covariance structure SAMPLE STATISTICS ESTIMATED FACTOR SCORES section lcCondMeans conditional latent class means pairwise comparisons, obtained using auxiliary(e) syntax latent class models r3step predictors latent class membership using 3-step procedure (R3STEP) gh5 list containing data gh5 (graphics) file corresponding output. (Requires rhdf5 package) h5results list containing data h5results file produced Mplus v8.11+. (Requires rhdf5 package) output entire, raw output file.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"parameter defaults \"\", extracts supported output. like extract reduced set output sections (especially speed function reading many files), specify sections character vector following options: c(\"input\", \"warn_err\", \"data_summary\", \"sampstat\", \"covariance_coverage\", \"summaries\",      \"parameters\", \"class_counts\", \"indirect\", \"mod_indices\", \"residuals\",      \"savedata\", \"bparameters\", \"tech1\", \"tech3\", \"tech4\", \"tech7\", \"tech8\",      \"tech9\", \"tech10\", \"tech12\", \"fac_score_stats\", \"lcCondMeans\", \"gh5\",      \"output\")","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/readModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Parameters, Summary Statistics, and Savedata from Mplus Output — readModels","text":"","code":"if (FALSE) { # \\dontrun{   allOutput <- readModels(     \"C:/Program Files/Mplus/Mplus Examples/User's Guide Examples\", recursive=TRUE) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/recurseReplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive replace — recurseReplace","title":"Recursive replace — recurseReplace","text":": fill details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/recurseReplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive replace — recurseReplace","text":"","code":"recurseReplace(templateTags, initCollection, curiterator = 1L)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/recurseReplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive replace — recurseReplace","text":"templateTags template tags initCollection list arguments parsed init section curiterator integer tracks depth recursion iterators. Defaults 1.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/recurseReplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive replace — recurseReplace","text":"look like returns anything","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceBodyTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Body Tags — replaceBodyTags","title":"Replace Body Tags — replaceBodyTags","text":": fill details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceBodyTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Body Tags — replaceBodyTags","text":"","code":"replaceBodyTags(bodySection, bodyTags, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceBodyTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Body Tags — replaceBodyTags","text":"bodySection character vector body section Mplus syntax bodyTags collection tags used inside template body initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceBodyTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Body Tags — replaceBodyTags","text":"Returns updated bodySection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceInitTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Init Tags — replaceInitTags","title":"Replace Init Tags — replaceInitTags","text":": fill details","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceInitTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Init Tags — replaceInitTags","text":"","code":"replaceInitTags(initTags, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceInitTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Init Tags — replaceInitTags","text":"initTags Init tags initCollection list arguments parsed init section","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/replaceInitTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Init Tags — replaceInitTags","text":"Returns updated initCollection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove variable name length warnings from Mplus output file — rmVarWarnings","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"function designed remove warnings Mplus output files variable names greater 8 characters. replaces note warnings removed count many warnings removed.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"","code":"rmVarWarnings(file)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"file file name (including path necessary) Mplus output file.  Note must read write privileges file function work properly.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"Usually NULL. Called side effect removing warnings   Mplus output files. file.access testing write permissions   returns FALSE, character string note rmVarWarnings   run.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"internal function meant directly called user circumstances. called mplusModeler varwarnings = FALSE argument used.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/rmVarWarnings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove variable name length warnings from Mplus output file — rmVarWarnings","text":"","code":"# to do"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Mplus Models — runModels","title":"Run Mplus Models — runModels","text":"function runs group Mplus models (.inp files) located within single directory nested within subdirectories.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Mplus Models — runModels","text":"","code":"runModels(   target = getwd(),   recursive = FALSE,   filefilter = NULL,   showOutput = FALSE,   replaceOutfile = \"always\",   logFile = \"Mplus Run Models.log\",   Mplus_command = detectMplus(),   killOnFail = TRUE,   local_tmpdir = FALSE,   quiet = TRUE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Mplus Models — runModels","text":"target character vector element directory containing Mplus input files (.inp) run single .inp file run. Elements may full path, relative path, filename within working directory. Defaults current working directory. Example: “C:/Users/Michael/Mplus Runs” recursive optional. TRUE, run models nested subdirectories within directory. Defaults FALSE. relevant target single file. filefilter Perl regular expression (PCRE-compatible) specifying particular input files run among found target. See regex https://www.pcre.org/pcre.txt details regular expression syntax. showOutput optional. TRUE, show estimation output (TECH8) R console. Note run within Rgui, output display within R, run via Rterm, separate window appear estimation. replaceOutfile optional. Currently supports three settings: “always”, runs models, regardless whether output file model exists; “never”, run model existing output file; “modifiedDate”, runs model modified date input file recent output file modified date (implying updates model). logFile optional. non-null, specifies file (optionally, directory) records settings passed function models run (skipped) run. Mplus_command optional. N.B.: need pass parameter users (intelligent defaults). Allows user specify name/path Mplus executable used running models. covers situations Mplus system's path, one wants test different versions Mplus program. killOnFail optional. Windows now. TRUE, kill processes named mplus.exe runModels terminate normally. Defaults TRUE. local_tmpdir optional. Linux/Mac now. TRUE, set TMPDIR environment variable location .inp file prior execution. useful Monte Carlo studies many instances Mplus may run parallel wish avoid collisions temporary files among processes. quiet optional. FALSE, show status messages console.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Mplus Models — runModels","text":"None. Function used side effects (running models).","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Mplus Models — runModels","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Mplus Models — runModels","text":"","code":"if (FALSE) { # \\dontrun{   runModels(\"C:/Users/Michael/Mplus Runs\", recursive=TRUE, showOutput=TRUE,     replaceOutfile=\"modifiedDate\", logFile=\"MH_RunLog.txt\",     Mplus_command=\"C:\\\\Users\\\\Michael\\\\Mplus Install\\\\Mplus51.exe\") } # } if (FALSE) { # \\dontrun{   runModels(getwd(), filefilter = \"ex8.*\", logFile=NULL) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Mplus Models Using Graphical Interface — runModels_Interactive","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"function provides graphical user interface runModels function. uses Tcl/Tk display window user can specify parameters runModels, including directory runs, recursing subdirectories, displaying output console, replacing existing outfiles.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"","code":"runModels_Interactive(   directory = getwd(),   recursive = \"0\",   showOutput = \"1\",   replaceOutfile = \"1\",   checkDate = \"0\",   logFile = \"1\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"directory optional. starting directory display dialog window. Defaults current working directory. recursive optional. Whether recursive checkbox checked window opens. “0” FALSE, “1” TRUE. showOutput optional. Whether show output checkbox checked window opens. “0” FALSE, “1” TRUE. replaceOutfile optional. Whether replace outfile checkbox checked window opens. “0” FALSE, “1” TRUE. checkDate optional. Whether check modified date checkbox checked window opens. “0” FALSE, “1” TRUE. logFile optional. Whether log file checkbox checked window opens. “0” FALSE, “1” TRUE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"None. Function used display user interface running models.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"function exists GUI wrapper runModels provide distinct functionality.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/runModels_Interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Mplus Models Using Graphical Interface — runModels_Interactive","text":"","code":"# interactive, none"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate Hyphenated Variable Strings — separateHyphens","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"code simplified form expandCmd lavaan package. separates hyphenated variable strings list vectors, ignoring hyphens may used numbers.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"","code":"separateHyphens(cmd)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"cmd character string","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"character string hyphens, list vectors hyphens.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"Note internal function .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"Michael Hallquist revised Joshua Wiley","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/separateHyphens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate Hyphenated Variable Strings — separateHyphens","text":"","code":"MplusAutomation:::separateHyphens(\"x1x4\") #> [1] \"x1x4\" MplusAutomation:::separateHyphens(\"x1-x4\") #> [[1]] #> [1] \"x1\" \"x4\" #>  MplusAutomation:::separateHyphens(\"x1-x4; x1*-1; v1-v3;\") #> [[1]] #> [1] \"x1\" \"x4\" #>  #> [[2]] #> [1] \"v1\" \"v3\" #>"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Display summary table of Mplus model statistics in separate window — showSummaryTable","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"Displays summary table model fit statistics extracted using extractModelSummaries function. function relies showData function relimp package, displays data Tk-based window. default, following summary statistics included: Title, LL, Parameters, AIC, AICC, BIC, RMSEA_Estimate, customizable using keepCols dropCols parameters.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"","code":"showSummaryTable(   modelList,   keepCols,   dropCols,   sortBy = NULL,   font = \"Courier 9\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"modelList list models (data.frame) returned extractModelSummaries function. keepCols vector character strings indicating columns/variables display summary. columns included list displayed (others excluded). default, keepCols : c(\"Title\", \"LL\", \"Parameters\", \"AIC\", \"AICC\", \"BIC\", \"RMSEA_Estimate\"). Example: c(\"Title\", \"LL\", \"AIC\", \"CFI\") dropCols vector character strings indicating columns/variables omit summary. column included list displayed. default, dropCols NULL. Example: c(\"InputInstructions\", \"TLI\") sortBy Optional. Field name (character string) sort table. Typically information criterion (e.g., “AIC” “BIC”) used sort table. Defaults NULL, sort table. font Optional. font used display summary table. Defaults Courier 9.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"value returned function. solely used display summary table separate window.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"must choose keepCols dropCols   sensible use together include exclude columns.   function error include parameters.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/showSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display summary table of Mplus model statistics in separate window — showSummaryTable","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/slurm_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","title":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","text":"check status jobs submitted SLURM cluster","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/slurm_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","text":"","code":"slurm_job_status(   job_ids = NULL,   user = NULL,   sacct_format = \"jobid,submit,timelimit,start,end,state\" )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/slurm_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","text":"job_ids vector job ids check user user submitted jobs sacct_format format string passed sacct job status","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/slurm_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","text":"data.frame containing status job id","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/slurm_job_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check the status of jobs submitted on a SLURM cluster — slurm_job_status","text":"function calls sacct -j check status jobs slurm cluster","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitDFByRow.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a data frame into a list by rows — splitDFByRow","title":"Split a data frame into a list by rows — splitDFByRow","text":"Takes data frame returns list element row data frame. internal function.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitDFByRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a data frame into a list by rows — splitDFByRow","text":"","code":"splitDFByRow(df)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitDFByRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a data frame into a list by rows — splitDFByRow","text":"df object inheriting class data.frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitDFByRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a data frame into a list by rows — splitDFByRow","text":"list element one row data frame","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitDFByRow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a data frame into a list by rows — splitDFByRow","text":"","code":"# small example using built in data MplusAutomation:::splitDFByRow(mtcars) #> [[1]] #>           mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Mazda RX4  21   6  160 110  3.9 2.62 16.46  0  1    4    4 #>  #> [[2]] #>               mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4 Wag  21   6  160 110  3.9 2.875 17.02  0  1    4    4 #>  #> [[3]] #>             mpg cyl disp hp drat   wt  qsec vs am gear carb #> Datsun 710 22.8   4  108 93 3.85 2.32 18.61  1  1    4    1 #>  #> [[4]] #>                 mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Hornet 4 Drive 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #>  #> [[5]] #>                    mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Hornet Sportabout 18.7   8  360 175 3.15 3.44 17.02  0  0    3    2 #>  #> [[6]] #>          mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Valiant 18.1   6  225 105 2.76 3.46 20.22  1  0    3    1 #>  #> [[7]] #>             mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Duster 360 14.3   8  360 245 3.21 3.57 15.84  0  0    3    4 #>  #> [[8]] #>            mpg cyl  disp hp drat   wt qsec vs am gear carb #> Merc 240D 24.4   4 146.7 62 3.69 3.19   20  1  0    4    2 #>  #> [[9]] #>           mpg cyl  disp hp drat   wt qsec vs am gear carb #> Merc 230 22.8   4 140.8 95 3.92 3.15 22.9  1  0    4    2 #>  #> [[10]] #>           mpg cyl  disp  hp drat   wt qsec vs am gear carb #> Merc 280 19.2   6 167.6 123 3.92 3.44 18.3  1  0    4    4 #>  #> [[11]] #>            mpg cyl  disp  hp drat   wt qsec vs am gear carb #> Merc 280C 17.8   6 167.6 123 3.92 3.44 18.9  1  0    4    4 #>  #> [[12]] #>             mpg cyl  disp  hp drat   wt qsec vs am gear carb #> Merc 450SE 16.4   8 275.8 180 3.07 4.07 17.4  0  0    3    3 #>  #> [[13]] #>             mpg cyl  disp  hp drat   wt qsec vs am gear carb #> Merc 450SL 17.3   8 275.8 180 3.07 3.73 17.6  0  0    3    3 #>  #> [[14]] #>              mpg cyl  disp  hp drat   wt qsec vs am gear carb #> Merc 450SLC 15.2   8 275.8 180 3.07 3.78   18  0  0    3    3 #>  #> [[15]] #>                     mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Cadillac Fleetwood 10.4   8  472 205 2.93 5.25 17.98  0  0    3    4 #>  #> [[16]] #>                      mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Lincoln Continental 10.4   8  460 215    3 5.424 17.82  0  0    3    4 #>  #> [[17]] #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Chrysler Imperial 14.7   8  440 230 3.23 5.345 17.42  0  0    3    4 #>  #> [[18]] #>           mpg cyl disp hp drat  wt  qsec vs am gear carb #> Fiat 128 32.4   4 78.7 66 4.08 2.2 19.47  1  1    4    1 #>  #> [[19]] #>              mpg cyl disp hp drat    wt  qsec vs am gear carb #> Honda Civic 30.4   4 75.7 52 4.93 1.615 18.52  1  1    4    2 #>  #> [[20]] #>                 mpg cyl disp hp drat    wt qsec vs am gear carb #> Toyota Corolla 33.9   4 71.1 65 4.22 1.835 19.9  1  1    4    1 #>  #> [[21]] #>                mpg cyl  disp hp drat    wt  qsec vs am gear carb #> Toyota Corona 21.5   4 120.1 97  3.7 2.465 20.01  1  0    3    1 #>  #> [[22]] #>                   mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Dodge Challenger 15.5   8  318 150 2.76 3.52 16.87  0  0    3    2 #>  #> [[23]] #>              mpg cyl disp  hp drat    wt qsec vs am gear carb #> AMC Javelin 15.2   8  304 150 3.15 3.435 17.3  0  0    3    2 #>  #> [[24]] #>             mpg cyl disp  hp drat   wt  qsec vs am gear carb #> Camaro Z28 13.3   8  350 245 3.73 3.84 15.41  0  0    3    4 #>  #> [[25]] #>                   mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Pontiac Firebird 19.2   8  400 175 3.08 3.845 17.05  0  0    3    2 #>  #> [[26]] #>            mpg cyl disp hp drat    wt qsec vs am gear carb #> Fiat X1-9 27.3   4   79 66 4.08 1.935 18.9  1  1    4    1 #>  #> [[27]] #>               mpg cyl  disp hp drat   wt qsec vs am gear carb #> Porsche 914-2  26   4 120.3 91 4.43 2.14 16.7  0  1    5    2 #>  #> [[28]] #>               mpg cyl disp  hp drat    wt qsec vs am gear carb #> Lotus Europa 30.4   4 95.1 113 3.77 1.513 16.9  1  1    5    2 #>  #> [[29]] #>                 mpg cyl disp  hp drat   wt qsec vs am gear carb #> Ford Pantera L 15.8   8  351 264 4.22 3.17 14.5  0  1    5    4 #>  #> [[30]] #>               mpg cyl disp  hp drat   wt qsec vs am gear carb #> Ferrari Dino 19.7   6  145 175 3.62 2.77 15.5  0  1    5    6 #>  #> [[31]] #>               mpg cyl disp  hp drat   wt qsec vs am gear carb #> Maserati Bora  15   8  301 335 3.54 3.57 14.6  0  1    5    8 #>  #> [[32]] #>             mpg cyl disp  hp drat   wt qsec vs am gear carb #> Volvo 142E 21.4   4  121 109 4.11 2.78 18.6  1  1    4    2 #>"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitFilePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Split File and Path into Separate Parts — splitFilePath","title":"Split File and Path into Separate Parts — splitFilePath","text":"helper function split path path filename. Code adapted R.utils filePath command.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitFilePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split File and Path into Separate Parts — splitFilePath","text":"","code":"splitFilePath(filepath, normalize = FALSE)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitFilePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split File and Path into Separate Parts — splitFilePath","text":"filepath character string file path","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitFilePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split File and Path into Separate Parts — splitFilePath","text":"list elements directory, filename,   absolute path.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/splitFilePath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split File and Path into Separate Parts — splitFilePath","text":"","code":"if (FALSE) { # \\dontrun{   splitFilePath(\"dir1/subdir1/mplus1.inp\")   } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit Mplus models to a high-performance cluster scheduler — submitModels","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"function submits group Mplus models (.inp files) located within single directory nested within subdirectories.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"","code":"submitModels(   target = getwd(),   recursive = FALSE,   filefilter = NULL,   replaceOutfile = \"modifiedDate\",   Mplus_command = NULL,   quiet = FALSE,   scheduler = \"slurm\",   sched_args = NULL,   env_variables = NULL,   export_all = FALSE,   cores_per_model = 1L,   memgb_per_model = 8L,   time_per_model = \"1:00:00\",   pre = NULL,   post = NULL,   batch_outdir = NULL,   job_script_prefix = NULL,   combine_jobs = TRUE,   max_time_per_job = \"24:00:00\",   combine_memgb_tolerance = 1,   combine_cores_tolerance = 2,   debug = FALSE,   fail_on_error = TRUE )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"target character vector element directory containing Mplus input files (.inp) run single .inp file run. Elements may full path, relative path, filename within working directory. Defaults current working directory. Example: “C:/Users/Michael/Mplus Runs” recursive optional. TRUE, run models nested subdirectories within directory. Defaults FALSE. relevant target single file. filefilter Perl regular expression (PCRE-compatible) specifying particular input files run among found target. See regex https://www.pcre.org/pcre.txt details regular expression syntax. replaceOutfile optional. Currently supports three settings: “always”, runs models, regardless whether output file model exists; “never”, run model existing output file; “modifiedDate”, runs model modified date input file recent output file modified date (implying updates model). Mplus_command optional. N.B.: need pass parameter users (intelligent defaults). Allows user specify name/path Mplus executable used running models. covers situations Mplus system's path, one wants test different versions Mplus program. quiet optional. FALSE, show status messages console. scheduler scheduler use job submission. Options 'qsub', 'torque', 'sbatch', 'slurm', 'local', 'sh'. terms `'qsub'` `'torque'` aliases ('torque' submits via qsub command). Likewise 'sbatch' 'slurm'. `'local'`  `'sh'` specified, `submitModels` submit scheduler , instead executes command locally via shell script. sched_args character vector arguments included scheduling command. TORQUE, typically begin '-l' '-l wall_time=10:00:00'. added inside submission script model shared across models. add model-specific arguments, include `! #SBATCH` `! #PBS` lines inside individual .inp files env_variables named character vector containing environment variables values passed script execution time. handled `-v` directive TORQUE clusters `–export` Slurm clusters. names vector environment variable names values vector environment variable values passed . want propagate current value environment variable compute node runtime, use NA value element env_variables. See examples. export_all Whether export environment variables compute node runtime. Default: FALSE cores_per_model many cpus/cores requested model (can overriden using `! BATCH` directives .inp files). Default: 1. memgb_per_model amount memory (RAM) requested model (GB). Default: 8. time_per_model amount time requested model. Default: \"1:00:00\" (1 hour). number provided, treat number minutes. pre user-specified shell commands  include job script prior running Mplus (e.g., module load commands) post user-specified shell commands include job script Mplus runs (e.g., execute results wrangling script) batch_outdir directory job scripts written job_script_prefix filename prefix job script combine_jobs TRUE, submitModels seek combine similar models batches reduce total number jobs max_time_per_job maximum time (days-hours:minutes:seconds format) allowed combined job combine_memgb_tolerance memory tolerance combining similar models GB. Defaults 1 (.e., models differ <= 1 GB can combined) combine_cores_tolerance cores tolerance combining models similar core requests. Defaults 2 (.e., models whose core requests differ <= 2 can combined) debug logical indicating whether actually submit jobs (TRUE) just create scripts inspection (FALSE) fail_on_error Whether stop execution script (TRUE), issue warning (FALSE) job submission fails. Defaults TRUE.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"data.frame recording details jobs submitted `submitModels`. can passed `summary` function   `checkSubmission` see state submitted jobs.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"Note `fail_on_error` `TRUE` submission one model fails, submission loop stop, rather   submitting models.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/submitModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit Mplus models to a high-performance cluster scheduler — submitModels","text":"","code":"if (FALSE) { # \\dontrun{   submitModels(\"~/Michael/submitTest\", recursive=TRUE, sched_args=c(\"--mail=user\", \"--export=v\"),      max_time_per_job = \"2:10:00\", combine_jobs = TRUE) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/subsetModelList.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a list of Mplus model results — subsetModelList","title":"Subset a list of Mplus model results — subsetModelList","text":"helper function used wrappers generate HTML, LaTex, -screen displays summary statistics","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/subsetModelList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a list of Mplus model results — subsetModelList","text":"","code":"subsetModelList(modelList, keepCols, dropCols, sortBy = NULL)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/subsetModelList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a list of Mplus model results — subsetModelList","text":"modelList list object Mplus models keepCols Columns keep dropCols Columns drop (use one keep/dropCols) sortBy sort. Defaults NULL, sort list.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/subsetModelList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a list of Mplus model results — subsetModelList","text":"Extracted sorted data","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/subsetModelList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a list of Mplus model results — subsetModelList","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize an mplusObject — summary.mplusObject","title":"Summarize an mplusObject — summary.mplusObject","text":"method summarizing mplusObject.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize an mplusObject — summary.mplusObject","text":"","code":"# S3 method for class 'mplusObject' summary(object, verbose = FALSE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize an mplusObject — summary.mplusObject","text":"object object class mplusObject verbose Logical whether print verbose output. Defaults FALSE. ... Additional arguments pass (currently used)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize an mplusObject — summary.mplusObject","text":"NULL Called side effect printing model summary console","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize an mplusObject — summary.mplusObject","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplusObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize an mplusObject — summary.mplusObject","text":"","code":"if (FALSE) { # \\dontrun{ # simple example of a model using builtin data # demonstrates use test <- mplusObject(   TITLE = \"test the MplusAutomation Package;\",   MODEL = \"     mpg ON wt hp;     wt WITH hp;\",   usevariables = c(\"mpg\", \"wt\", \"hp\"),   rdata = mtcars)   res <- mplusModeler(test, \"mtcars.dat\", modelout = \"model1.inp\", run = 1L)  # example of the summary method summary(res)  # example of verbose output summary(res, verbose=TRUE)  # remove files unlink(\"mtcars.dat\") unlink(\"model1.inp\") unlink(\"model1.out\") unlink(\"Mplus Run Models.log\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplus_submission_df.html","id":null,"dir":"Reference","previous_headings":"","what":"summary function for submission from submitModels — summary.mplus_submission_df","title":"summary function for submission from submitModels — summary.mplus_submission_df","text":"summary function submission submitModels","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplus_submission_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary function for submission from submitModels — summary.mplus_submission_df","text":"","code":"# S3 method for class 'mplus_submission_df' summary(object, refresh = TRUE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/summary.mplus_submission_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary function for submission from submitModels — summary.mplus_submission_df","text":"object mplus_submission_df object summarize refresh TRUE, check status jobs object printing ... additional arguments, currently used","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":null,"dir":"Reference","previous_headings":"","what":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"Tests inequality-constrained hypothesis (van de Schoot, Hoijtink, Hallquist, & Boelen, press) based draws posterior distribution model parameters, provides information proportion distribution agreement given hypothesis. function used complex hypotheses three parameters, whereas testBParamConstraint tests simple two-parameter hypothesis.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"","code":"testBParamCompoundConstraint(bparams, test)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"bparams object containing draws posterior distribution (class mplus.model mplus.bparameters). Obtained SAVEDATA:BPARAMETERS Mplus getSavedata_Bparams readModels MplusAutomation. test R code defining parameter test three parameters. Example: \"(STAITOT..CG > STAITOT..UCG) & (BDIM..CG > BDIM..UCG)\".","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"value returned function. Instead, two summary tables printed screen containing number proportion draws consistent hypothesis.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"function accepts bparameters object containing iterations MCMC chains (rows) model parameter (columns) prints number proportion draws consistent requested hypothesis test. test argument evaluated directly R code, bparams object attached variable names available directly environment. goal evaluate test draw posterior distribution, remember use vector-based logic operators, boolean operators. , stick & | joining tests parameters, rather && || since latter return single TRUE/FALSE, irrelevant. example test R logic \"(STAITOT..CG > STAITOT..UCG) & (BDIM..CG > BDIM..UCG)\".","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"Michael Hallquist","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamCompoundConstraint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test inequality-constrained hypothesis for two or more parameters based on iterations of MCMC chains — testBParamCompoundConstraint","text":"","code":"if (FALSE) { # \\dontrun{   #using bparameters directly   btest <- getSavedata_Bparams(\"model vb1_simpel_b.out\")   testBParametersCompoundConstraint(btest,   \"(STDYX_STAITOT.ON.CG > STDYX_STAITOT.ON.UCG) & (STDYX_BDIM.ON.CG > STDYX_BDIM.ON.UCG)\")    #or using readModels   btest <- readModels(\"model vb1_simpel_b.out\")   testBParametersCompoundConstraint(btest,   \"(STDYX_STAITOT.ON.CG > STDYX_STAITOT.ON.UCG) & (STDYX_BDIM.ON.CG > STDYX_BDIM.ON.UCG)\") } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamConstraint.html","id":null,"dir":"Reference","previous_headings":"","what":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","title":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","text":"Tests simple inequality-constrained hypothesis (van de Schoot, Hoijtink, Hallquist, & Boelen, press) based draws posterior distribution model parameters, provides information proportion distribution agreement given hypothesis. function used simple hypothesis two parameters, whereas testBParamCompoundConstraint gives full access multiple parameters R's logic syntax. function accepts bparameters object containing iterations MCMC chains (rows) model parameter (columns) prints number proportion draws consistent requested hypothesis test. coef1, operator, coef2 arguments appended sequence, hypothesis test constructed left--right. e.g., testBParamConstraint(bparamsDF, \"MGM.TRT1\", \">\", \"MGM.EX2\").","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamConstraint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","text":"","code":"testBParamConstraint(bparams, coef1, operator, coef2)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamConstraint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","text":"bparams object containing draws posterior distribution (class mplus.model mplus.bparameters). Obtained SAVEDATA:BPARAMETERS Mplus getSavedata_Bparams readModels MplusAutomation. coef1 name first parameter compared. Example: \"MGM.TRT1\" operator logical operator compare two parameters. one >=, >, <, <=. Example: \">=\" coef2 name first parameter compared. Example: \"MGM.EX2\"","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamConstraint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","text":"value returned function. Instead, two summary tables printed screen containing number proportion draws consistent hypothesis.","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/testBParamConstraint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test inequality-constrained hypothesis for two parameters based on iterations of MCMC chains — testBParamConstraint","text":"Michael Hallquist","code":""},{"path":[]},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/torque_job_status.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","title":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","text":"helper function get status jobs TORQUE cluster","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/torque_job_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","text":"","code":"torque_job_status(job_ids, user = NULL)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/torque_job_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","text":"job_ids vector job ids check user user submitted jobs","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/torque_job_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","text":"data.frame job status id","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/torque_job_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to get the status of jobs on a TORQUE cluster — torque_job_status","text":"Torque keep information completed jobs available qstat qselect.    Thus, need log job listed queued, 'going missing' evidence completed.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trainLGMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a variety of latent growth mixture model — trainLGMM","title":"Train a variety of latent growth mixture model — trainLGMM","text":"function iterates grid values train LGMMs, optionally using local remote cluster.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trainLGMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a variety of latent growth mixture model — trainLGMM","text":"","code":"trainLGMM(   data,   idvar,   assessmentvar,   newdata = FALSE,   tuneGrid,   cl,   ncores = 1L )"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trainLGMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a variety of latent growth mixture model — trainLGMM","text":"data data frame data table long format (.e., multiple rows per ID). idvar character string variable name dataset ID variable. assessmentvar character string variable name dataset indicates particular assessment point timepoint. newdata data frame new values use generating predicted trajectories class FALSE predictions made (default). tuneGrid dataframe list.  names needed arguments long2LGMM(). cl Optional.  existing cluster used estimate models. Can local remote cluster.  either case needs MplusAUtomation Mplus available. ncores cluster passed cl, specify number cores use create local cluster.  Must integer.  Defaults 1L.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trainLGMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a variety of latent growth mixture model — trainLGMM","text":"","code":"if (FALSE) { # \\dontrun{ ## This example is not run by default because even with very limitted number of ## random starts and iterations, it takes quite a few minutes setwd(tempdir())  ## Simulate Some Data from 3 classes library(MASS) set.seed(1234) allcoef <- rbind(   cbind(1, mvrnorm(n = 200,                    mu = c(0, 2, 0),                    Sigma = diag(c(.2, .1, .01)),                    empirical = TRUE)),   cbind(2, mvrnorm(n = 200,                    mu = c(-3.35, 2, 2),                    Sigma = diag(c(.2, .1, .1)),                    empirical = TRUE)),   cbind(3, mvrnorm(n = 200,                    mu = c(3.35, 2, -2),                    Sigma = diag(c(.2, .1, .1)),                    empirical = TRUE))) allcoef <- as.data.frame(allcoef) names(allcoef) <- c(\"Class\", \"I\", \"L\", \"Q\") allcoef$ID <- 1:nrow(allcoef) d <- do.call(rbind, lapply(1:nrow(allcoef), function(i) {   out <- data.frame(     ID = allcoef$ID[i],     Class = allcoef$Class[i],     Assess = 1:11,     x = sort(runif(n = 11, min = -2, max = 2)))   out$y <- rnorm(11,     mean = allcoef$I[i] + allcoef$L[i] * out$x + allcoef$Q[i] * out$x^2,     sd = .1)   return(out) }))  ## create splines library(splines) time_splines <- ns(d$x, df = 3, Boundary.knots = quantile(d$x, probs = c(.02, .98))) d$t1 <- time_splines[, 1] d$t2 <- time_splines[, 2] d$t3 <- time_splines[, 3] d$xq <- d$x^2  ## create new data to be used for predictions nd <- data.frame(ID = 1,                  x = seq(from = -2, to = 2, by = .1)) nd.splines <- with(attributes(time_splines),                    ns(nd$x, df = degree, knots = knots,                       Boundary.knots = Boundary.knots)) nd$t1 <- nd.splines[, 1] nd$t2 <- nd.splines[, 2] nd$t3 <- nd.splines[, 3] nd$xq <- nd$x^2  ## create a tuning grid of models to try ## all possible combinations are created of different time trends ## different covariance structures of the random effects ## and different number of classes tuneGrid <- expand.grid(   dv = \"y\",   timevars = list(c(\"t1\", \"t2\", \"t3\"), \"x\", c(\"x\", \"xq\")),   starts = \"2 1\",   cov = c(\"independent\", \"zero\"),   k = c(1L, 3L),   processors = 1L, run = TRUE,   misstrick = TRUE, stringsAsFactors = FALSE) tuneGrid$title <- paste0(   c(\"linear\", \"quad\", \"spline\")[sapply(tuneGrid$timevars, length)],   \"_\",   sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)),   \"_\",   tuneGrid$k) tuneGrid$base <- paste0(   c(\"linear\", \"quad\", \"spline\")[sapply(tuneGrid$timevars, length)],   \"_\",   sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)))  ## example using long2LGMM to fit one model at a time mres <- long2LGMM(         data = d,         idvar = \"ID\",         assessmentvar = \"Assess\",         dv = tuneGrid$dv[1],         timevars = tuneGrid$timevars[[1]],         misstrick = tuneGrid$misstrick[1],         k = tuneGrid$k[1],         title = paste0(tuneGrid$title[1], tuneGrid$k[1]),         base = tuneGrid$base[1],         run = tuneGrid$run[1],         processors = tuneGrid$processors[1],         starts = tuneGrid$starts[1],         newdata = nd,         cov = tuneGrid$cov[1])  ## Example using trainLGMM to fit a whole set of models ## can be distributed across a local or remote cluster ## Defaults to creating a local cluster, but can also pass an ## existing cluster AllRes <- trainLGMM(   data = d,   idvar = \"ID\",   assessmentvar = \"Assess\",   newdata = nd,   tuneGrid = tuneGrid,   ncores = 2L)   tuneGridRes <- as.data.frame(   cbind(tuneGrid,         do.call(rbind, lapply(AllRes, function(x) {           if (is.null(x$Model$results$summaries)) {             NA           } else {             out <- x$Model$results$summaries             ## deal with missing summary information for k = 1             if (is.null(out$Entropy)) {               out$Entropy <- 1             }             if (is.null(out$NCategoricalLatentVars)) {               out$NCategoricalLatentVars <- 0             }             out[, sort(names(out)), drop = FALSE]           }         }))))  tuneGridRes$Type <- gsub(\"([a-z]+)_.*$\", \"\\\\1\", tuneGridRes$title)  tuneGridRes$MinClass <- sapply(AllRes, function(x) {   n <- x$Model$results$class_counts$mostLikely$count   if(is.null(n)) {     length(unique(d$ID))   } else {     min(n, na.rm = TRUE)   } })  ## when trying many models, some may not converge ## subset to omit any missing AICC and look only at those with some ## minimum number of participants per class, ## for demonstration only arbitrarily set at 30 subset(tuneGridRes, !is.na(AICC) & MinClass >= 30,        select = c(title, aBIC, AICC, Entropy, MinClass, LL))  ## reshape data into long form which can make a very nice plot using ggplot2 tuneGridResL <- reshape(   subset(tuneGridRes, select = c(Type, cov, k, Parameters, aBIC, AICC, AIC, BIC, Entropy)),   varying = c(\"Parameters\", \"aBIC\", \"AICC\", \"AIC\", \"BIC\", \"Entropy\"),   v.names = \"value\",   times = c(\"Parameters\", \"aBIC\", \"AICC\", \"AIC\", \"BIC\", \"Entropy\"),   timevar = \"variable\",   idvar = c(\"Type\", \"cov\", \"k\"),   direction = \"long\") tuneGridResL$cov <- factor(tuneGridResL$cov, levels = c(\"zero\", \"independent\"))  ## uncomment to run ## library(ggplot2) ## ggplot(tuneGridResL, aes(k, value, colour = Type, shape = Type)) + ##   geom_point() + ##   facet_grid(variable~cov, scales = \"free\")   ## nice plot of the average trajectories in each class ## these are possible as trainLGMM exports predicted values for the ## new data fed in ## uncomment to run ## ggplot(AllRes[[which(tuneGridRes$title==\"quad_ind_3\")]]$predictions, aes(x)) + ##   geom_line(aes(y = y_1), colour = \"black\", size = 2) + ##   geom_line(aes(y = y_2), colour = \"red\", size = 2) + ##   geom_line(aes(y = y_3), colour = \"blue\", size = 2) } # }"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trimSpace.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim White Space — trimSpace","title":"Trim White Space — trimSpace","text":"Helper function remove white space character vector","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trimSpace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim White Space — trimSpace","text":"","code":"trimSpace(string)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trimSpace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim White Space — trimSpace","text":"string character vector trim white space .","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trimSpace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim White Space — trimSpace","text":"character vector white space removed.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/trimSpace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim White Space — trimSpace","text":"","code":"MplusAutomation:::trimSpace(c(\"    test\", \"another    \")) #> [1] \"test\"    \"another\""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/unlabeledMatrixExtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","title":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","text":"worker function extracting Mplus matrix output unlabeled section matrices spread across blocks keep within width constraints example: class counts output latent class models.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/unlabeledMatrixExtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","text":"","code":"unlabeledMatrixExtract(outfiletext, filename)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/unlabeledMatrixExtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","text":"outfiletext text output file filename name output file","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/unlabeledMatrixExtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","text":"matrix","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/unlabeledMatrixExtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct matrix from unlabeled multi-line text output — unlabeledMatrixExtract","text":"","code":"# make me!!!"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an Mplus model object — update.mplusObject","title":"Update an Mplus model object — update.mplusObject","text":"method updating Mplus model object. takes Mplus model object first argument, optionally sections update. two ways update section using formula interface. ~ \"new stuff\" replace given section new text.  Alternately, can add additional text using ~ + \"additional stuff\". Combined let replace add section.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an Mplus model object — update.mplusObject","text":"","code":"# S3 method for class 'mplusObject' update(object, quiet = TRUE, ...)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an Mplus model object — update.mplusObject","text":"object object class mplusObject quiet optional. TRUE, show status messages console. ... Additional arguments pass ","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an Mplus model object — update.mplusObject","text":"(updated) Mplus model object","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update an Mplus model object — update.mplusObject","text":"Joshua F. Wiley <jwiley.psych@gmail.com>","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/update.mplusObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an Mplus model object — update.mplusObject","text":"","code":"example1 <- mplusObject(MODEL = \"mpg ON wt;\",   usevariables = c(\"mpg\", \"hp\"), rdata = mtcars) x <- ~ \"ESTIMATOR = ML;\" str(update(example1, rdata = iris)) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t150 obs. of  5 variables: #>   ..$ Sepal.Length: num [1:150] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... #>   ..$ Sepal.Width : num [1:150] 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>   ..$ Petal.Length: num [1:150] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>   ..$ Petal.Width : num [1:150] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>   ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" str(update(example1, ANALYSIS = x)) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : chr \" ESTIMATOR = ML;\" #>  $ MODEL          : chr \"mpg ON wt;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" str(update(example1, MODEL = ~ \"wt ON hp;\")) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \" wt ON hp;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" str(update(example1, MODEL = ~ . + \"wt ON hp;\")) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt;\\n wt ON hp;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" str(update(example1, ANALYSIS = x, MODEL = ~ . + \"wt ON hp;\")) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : chr \" ESTIMATOR = ML;\" #>  $ MODEL          : chr \"mpg ON wt;\\n wt ON hp;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\"  ## check that use variables can be updated & overridden str(update(example1, usevariables = c(\"mpg\", \"hp\", \"cyl\"))) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : NULL #>  $ MODEL          : chr \"mpg ON wt;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:3] \"mpg\" \"hp\" \"cyl\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\"  # test to make sure . in Mplus code does not cause problems str(update(example1, ANALYSIS = x, MODEL = ~ . + \"wt ON hp*.5;\")) #> List of 21 #>  $ TITLE          : NULL #>  $ DATA           : NULL #>  $ VARIABLE       : NULL #>  $ DEFINE         : NULL #>  $ MONTECARLO     : NULL #>  $ MODELPOPULATION: NULL #>  $ MODELMISSING   : NULL #>  $ ANALYSIS       : chr \" ESTIMATOR = ML;\" #>  $ MODEL          : chr \"mpg ON wt;\\n wt ON hp*.5;\" #>  $ MODELINDIRECT  : NULL #>  $ MODELCONSTRAINT: NULL #>  $ MODELTEST      : NULL #>  $ MODELPRIORS    : NULL #>  $ OUTPUT         : NULL #>  $ SAVEDATA       : NULL #>  $ PLOT           : NULL #>  $ results        : NULL #>  $ usevariables   : chr [1:2] \"mpg\" \"hp\" #>  $ rdata          :'data.frame':\t32 obs. of  11 variables: #>   ..$ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>   ..$ cyl : num [1:32] 6 6 4 6 8 6 8 4 4 6 ... #>   ..$ disp: num [1:32] 160 160 108 258 360 ... #>   ..$ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>   ..$ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>   ..$ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>   ..$ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>   ..$ vs  : num [1:32] 0 0 1 1 0 1 0 1 1 1 ... #>   ..$ am  : num [1:32] 1 1 1 0 0 0 0 0 0 0 ... #>   ..$ gear: num [1:32] 4 4 4 3 3 3 3 4 4 4 ... #>   ..$ carb: num [1:32] 4 4 1 1 2 1 4 2 2 4 ... #>  $ imputed        : logi FALSE #>  $ quiet          : logi TRUE #>  - attr(*, \"class\")= chr [1:2] \"mplusObject\" \"list\" rm(example1, x)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/updateCurrentValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates current values — updateCurrentValues","title":"Updates current values — updateCurrentValues","text":"Body tags currentValues substituted bottom-level init collection finalized (recursively process nested tags)","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/updateCurrentValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates current values — updateCurrentValues","text":"","code":"updateCurrentValues(templateTags, initCollection)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/updateCurrentValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates current values — updateCurrentValues","text":"templateTags template tags initCollection Initial collection","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/updateCurrentValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates current values — updateCurrentValues","text":"Updated current value original match.","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/validate_dhms.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to validate format of walltime inputs for HPC submission — validate_dhms","title":"helper function to validate format of walltime inputs for HPC submission — validate_dhms","text":"helper function validate format walltime inputs HPC submission","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/validate_dhms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to validate format of walltime inputs for HPC submission — validate_dhms","text":"","code":"validate_dhms(str)"},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/validate_dhms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to validate format of walltime inputs for HPC submission — validate_dhms","text":"str string containing duration may include days specification","code":""},{"path":"https://michaelhallquist.github.io/MplusAutomation/reference/validate_dhms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to validate format of walltime inputs for HPC submission — validate_dhms","text":"always converts hms format, days present,   converts dhms. Supported date formats match slurm sbatch:   https://slurm.schedmd.com/sbatch.html","code":""}]
